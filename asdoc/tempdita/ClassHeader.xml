<?xml version="1.0" encoding="UTF-8"?>
<allClasses>
   <apiPackage id="gear.codec.core">
      <apiName>gear.codec.core</apiName>
      <apiDetail/>
      <apiClassifier id="gear.codec.core:GLoadBytes">
         <apiName>GLoadBytes</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords" content="GLoadBytes,gear.codec.core.GLoadBytes"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.codec.csv">
      <apiName>gear.codec.csv</apiName>
      <apiDetail/>
      <apiClassifier id="gear.codec.csv:GCsvDecoder">
         <apiName>GCsvDecoder</apiName>
         <shortdesc>
	 csv文件解码
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130305
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords" content="GCsvDecoder,gear.codec.csv.GCsvDecoder,data,parse"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 csv文件解码
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.codec.gpk.tag">
      <apiName>gear.codec.gpk.tag</apiName>
      <apiDetail/>
      <apiClassifier id="gear.codec.gpk.tag:AGpkTag">
         <apiName>AGpkTag</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="AGpkTag,gear.codec.gpk.tag.AGpkTag,TYPE,TYPE,TYPE,_key,_onComplete,_start,key,addTo,addTo,addTo,addTo,complete,create,decode,decode,decode,decode,dispose,dispose,dispose,encode,encode,encode,encode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.core:IDispose</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.core:IDispose"/>
               </Implements>
               <Subclasses>
                  <class id="gear.codec.gpk.tag:GpkTagAMF"/>
                  <class id="gear.codec.gpk.tag:GpkTagSBD"/>
                  <class id="gear.codec.gpk.tag:GpkTagLBD"/>
               </Subclasses>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.gpk.tag:GpkTagAMF">
         <apiName>GpkTagAMF</apiName>
         <shortdesc>
	 AMF数据标签
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130116
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GpkTagAMF,gear.codec.gpk.tag.GpkTagAMF,TYPE,TYPE,TYPE,_key,_onComplete,_start,key,addTo,addTo,addTo,addTo,complete,create,decode,decode,decode,decode,dispose,dispose,dispose,encode,encode,encode,encode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>gear.codec.gpk.tag:AGpkTag</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 AMF数据标签
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.codec.gpk.tag:AGpkTag"/>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.gpk.tag:GpkTagSBD">
         <apiName>GpkTagSBD</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121225
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GpkTagSBD,gear.codec.gpk.tag.GpkTagSBD,TYPE,TYPE,TYPE,_key,_onComplete,_start,key,addTo,addTo,addTo,addTo,complete,create,decode,decode,decode,decode,dispose,dispose,dispose,encode,encode,encode,encode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>gear.codec.gpk.tag:AGpkTag</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.codec.gpk.tag:AGpkTag"/>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.gpk.tag:GpkTagLBD">
         <apiName>GpkTagLBD</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121212
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GpkTagLBD,gear.codec.gpk.tag.GpkTagLBD,TYPE,TYPE,TYPE,_key,_onComplete,_start,key,addTo,addTo,addTo,addTo,complete,create,decode,decode,decode,decode,dispose,dispose,dispose,encode,encode,encode,encode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>gear.codec.gpk.tag:AGpkTag</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.codec.gpk.tag:AGpkTag"/>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.gpk.tag:GpkTagFactory">
         <apiName>GpkTagFactory</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GpkTagFactory,gear.codec.gpk.tag.GpkTagFactory,addTo,addTo,addTo,addTo,complete,create,decode,decode,decode,decode,dispose,dispose,dispose,encode,encode,encode,encode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.codec.gpk">
      <apiName>gear.codec.gpk</apiName>
      <apiDetail/>
      <apiClassifier id="gear.codec.gpk:Gpk">
         <apiName>Gpk</apiName>
         <shortdesc>
	 Gpk 资源包
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>201301116
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="Gpk,gear.codec.gpk.Gpk,output,addTag,decode,dispose,encode,getAMF,getLBD,getSBD,getTag"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseInterface>gear.core:IDispose</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 Gpk 资源包
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.core:IDispose"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.codec.plist">
      <apiName>gear.codec.plist</apiName>
      <apiDetail/>
      <apiClassifier id="gear.codec.plist:GPlistDecoder">
         <apiName>GPlistDecoder</apiName>
         <shortdesc>
	 plist文件解码
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121025
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GPlistDecoder,gear.codec.plist.GPlistDecoder,plistObj,decode,dispose"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.core:IDispose</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 plist文件解码
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.core:IDispose"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.codec.psd.data">
      <apiName>gear.codec.psd.data</apiName>
      <apiDetail/>
      <apiClassifier id="gear.codec.psd.data:GPsdColorMode">
         <apiName>GPsdColorMode</apiName>
         <shortdesc>
	 Psd色彩模式
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121109
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GPsdColorMode,gear.codec.psd.data.GPsdColorMode,BITMAP,BOUNDING_SECTION,CMYK,DUOTONE,FOLDER_CLOSED,FOLDER_OPEN,GRAYSCALE,INDEXED,LAB,MULTI_CHANNEL,OTHER,PASS_THROUGH,RGB,alpha,bitmap,bitmapData,bitmapData,blendModeKey,bounds,bounds,channelCount,channels,channels,clipping,colorDepth,colorMode,compression,defaultColor,disabled,dividerBlendModeKey,filters,height,id,id,invert,layerCount,layers,length,mask,name,nameId,obsolete,padding,pixelDataIrrelevant,referencePoint,relative,signature,source,target,transparencyProtected,tree,type,unicodeName,version,visible,width"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 Psd色彩模式
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.psd.data:GPsdChannel">
         <apiName>GPsdChannel</apiName>
         <shortdesc>
	 Psd通道
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121109
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GPsdChannel,gear.codec.psd.data.GPsdChannel,BITMAP,BOUNDING_SECTION,CMYK,DUOTONE,FOLDER_CLOSED,FOLDER_OPEN,GRAYSCALE,INDEXED,LAB,MULTI_CHANNEL,OTHER,PASS_THROUGH,RGB,alpha,bitmap,bitmapData,bitmapData,blendModeKey,bounds,bounds,channelCount,channels,channels,clipping,colorDepth,colorMode,compression,defaultColor,disabled,dividerBlendModeKey,filters,height,id,id,invert,layerCount,layers,length,mask,name,nameId,obsolete,padding,pixelDataIrrelevant,referencePoint,relative,signature,source,target,transparencyProtected,tree,type,unicodeName,version,visible,width"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 Psd通道
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.psd.data:GPsdBlendMode">
         <apiName>GPsdBlendMode</apiName>
         <shortdesc>
	 psd blend mode key:
	 norm' = normal 'dark' = darken 'lite' = lighten
	 hue ' = hue 'sat ' = saturation 'colr' = color
	 lum ' = luminosity 'mul ' = multiply 'scrn' = screen 
	 diss' = dissolve 'over' = overlay 'hLit' = hard light 'sLit' = soft light
	 diff' = difference 'smud' = exclusion 'div ' = color dodge 'idiv' = color burn
	 lbrn' = linear burn, 'lddg' = linear dodge, 'vLit' = vivid light
	 lLit' = linear light, 'pLit' = pin light, 'hMix' = hard mix
	 pass' = pass through, 'dkCl' = darker color, 'lgCl' = lighter color
	 fsub' = subtract, 'fdiv' = divide  
	 </shortdesc>
         <prolog>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GPsdBlendMode,gear.codec.psd.data.GPsdBlendMode,BITMAP,BOUNDING_SECTION,CMYK,DUOTONE,FOLDER_CLOSED,FOLDER_OPEN,GRAYSCALE,INDEXED,LAB,MULTI_CHANNEL,OTHER,PASS_THROUGH,RGB,alpha,bitmap,bitmapData,bitmapData,blendModeKey,bounds,bounds,channelCount,channels,channels,clipping,colorDepth,colorMode,compression,defaultColor,disabled,dividerBlendModeKey,filters,height,id,id,invert,layerCount,layers,length,mask,name,nameId,obsolete,padding,pixelDataIrrelevant,referencePoint,relative,signature,source,target,transparencyProtected,tree,type,unicodeName,version,visible,width,getAS3BlendMode,getLayerBy"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 psd blend mode key:
	 norm' = normal 'dark' = darken 'lite' = lighten
	 hue ' = hue 'sat ' = saturation 'colr' = color
	 lum ' = luminosity 'mul ' = multiply 'scrn' = screen 
	 diss' = dissolve 'over' = overlay 'hLit' = hard light 'sLit' = soft light
	 diff' = difference 'smud' = exclusion 'div ' = color dodge 'idiv' = color burn
	 lbrn' = linear burn, 'lddg' = linear dodge, 'vLit' = vivid light
	 lLit' = linear light, 'pLit' = pin light, 'hMix' = hard mix
	 pass' = pass through, 'dkCl' = darker color, 'lgCl' = lighter color
	 fsub' = subtract, 'fdiv' = divide  
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.psd.data:GPsdMask">
         <apiName>GPsdMask</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GPsdMask,gear.codec.psd.data.GPsdMask,BITMAP,BOUNDING_SECTION,CMYK,DUOTONE,FOLDER_CLOSED,FOLDER_OPEN,GRAYSCALE,INDEXED,LAB,MULTI_CHANNEL,OTHER,PASS_THROUGH,RGB,alpha,bitmap,bitmapData,bitmapData,blendModeKey,bounds,bounds,channelCount,channels,channels,clipping,colorDepth,colorMode,compression,defaultColor,disabled,dividerBlendModeKey,filters,height,id,id,invert,layerCount,layers,length,mask,name,nameId,obsolete,padding,pixelDataIrrelevant,referencePoint,relative,signature,source,target,transparencyProtected,tree,type,unicodeName,version,visible,width"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.psd.data:GPsdLayer">
         <apiName>GPsdLayer</apiName>
         <shortdesc>
	 Psd图层
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121109
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GPsdLayer,gear.codec.psd.data.GPsdLayer,BITMAP,BOUNDING_SECTION,CMYK,DUOTONE,FOLDER_CLOSED,FOLDER_OPEN,GRAYSCALE,INDEXED,LAB,MULTI_CHANNEL,OTHER,PASS_THROUGH,RGB,alpha,bitmap,bitmapData,bitmapData,blendModeKey,bounds,bounds,channelCount,channels,channels,clipping,colorDepth,colorMode,compression,defaultColor,disabled,dividerBlendModeKey,filters,height,id,id,invert,layerCount,layers,length,mask,name,nameId,obsolete,padding,pixelDataIrrelevant,referencePoint,relative,signature,source,target,transparencyProtected,tree,type,unicodeName,version,visible,width"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 Psd图层
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.psd.data:GPsd">
         <apiName>GPsd</apiName>
         <shortdesc>
	 Psd数据
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121110
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GPsd,gear.codec.psd.data.GPsd,BITMAP,BOUNDING_SECTION,CMYK,DUOTONE,FOLDER_CLOSED,FOLDER_OPEN,GRAYSCALE,INDEXED,LAB,MULTI_CHANNEL,OTHER,PASS_THROUGH,RGB,alpha,bitmap,bitmapData,bitmapData,blendModeKey,bounds,bounds,channelCount,channels,channels,clipping,colorDepth,colorMode,compression,defaultColor,disabled,dividerBlendModeKey,filters,height,id,id,invert,layerCount,layers,length,mask,name,nameId,obsolete,padding,pixelDataIrrelevant,referencePoint,relative,signature,source,target,transparencyProtected,tree,type,unicodeName,version,visible,width,getAS3BlendMode,getLayerBy"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 Psd数据
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.codec.psd">
      <apiName>gear.codec.psd</apiName>
      <apiDetail/>
      <apiClassifier id="gear.codec.psd:GPsdUtil">
         <apiName>GPsdUtil</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GPsdUtil,gear.codec.psd.GPsdUtil,decodeRLELine,decodeRLE,decode,dispose,parseColor,renderToBD,toRGB"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.psd:GPsdDecoder">
         <apiName>GPsdDecoder</apiName>
         <shortdesc>
	 Psd文件解码器 
	  
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>201301116
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GPsdDecoder,gear.codec.psd.GPsdDecoder,decodeRLELine,decodeRLE,decode,dispose,parseColor,renderToBD,toRGB"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseInterface>gear.core:IDispose</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 Psd文件解码器 
	  
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.core:IDispose"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.codec.swf.data.action">
      <apiName>gear.codec.swf.data.action</apiName>
      <apiDetail/>
      <apiClassifier id="gear.codec.swf.data.action:GSwfActionFactory">
         <apiName>GSwfActionFactory</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GSwfActionFactory,gear.codec.swf.data.action.GSwfActionFactory,create,decode,decode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.data.action:IGSwfAction">
         <apiName>IGSwfAction</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords" content="IGSwfAction,gear.codec.swf.data.action.IGSwfAction"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiInterface/>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier/>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id=""/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.data.action:GSwfClipActionRecord">
         <apiName>GSwfClipActionRecord</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GSwfClipActionRecord,gear.codec.swf.data.action.GSwfClipActionRecord,_eventFlags,_eventFlags,_keyCode,_records,create,decode,decode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.data.action:GSwfClipActions">
         <apiName>GSwfClipActions</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GSwfClipActions,gear.codec.swf.data.action.GSwfClipActions,_eventFlags,_eventFlags,_keyCode,_records,create,decode,decode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.codec.swf.data.shape">
      <apiName>gear.codec.swf.data.shape</apiName>
      <apiDetail/>
      <apiClassifier id="gear.codec.swf.data.shape:GSwfShapeWithStyle">
         <apiName>GSwfShapeWithStyle</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121215
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GSwfShapeWithStyle,gear.codec.swf.data.shape.GSwfShapeWithStyle,_bitmapId,_bitmapMatrix,_color,_color,_color,_fillStyles,_fillStyles,_focalGradient,_gradRecords,_gradientMatrix,_gradient,_interpolationMode,_lineStyle,_lineStyles,_lineStyles,_ratio,_spreadMode,_type,_width,fillStyle0,fillStyle1,moveDeltaX,moveDeltaY,stateFillStyle0,stateFillStyle1,stateLineStyle,stateMoveTo,stateNewStyles,decode,decode,decode,decode,decode,decode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.data.shape:GSwfGradRecord">
         <apiName>GSwfGradRecord</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GSwfGradRecord,gear.codec.swf.data.shape.GSwfGradRecord,_bitmapId,_bitmapMatrix,_color,_color,_color,_fillStyles,_fillStyles,_focalGradient,_gradRecords,_gradientMatrix,_gradient,_interpolationMode,_lineStyle,_lineStyles,_lineStyles,_ratio,_spreadMode,_type,_width,fillStyle0,fillStyle1,moveDeltaX,moveDeltaY,stateFillStyle0,stateFillStyle1,stateLineStyle,stateMoveTo,stateNewStyles,decode,decode,decode,decode,decode,decode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.data.shape:GSwfGradient">
         <apiName>GSwfGradient</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GSwfGradient,gear.codec.swf.data.shape.GSwfGradient,_bitmapId,_bitmapMatrix,_color,_color,_color,_fillStyles,_fillStyles,_focalGradient,_gradRecords,_gradientMatrix,_gradient,_interpolationMode,_lineStyle,_lineStyles,_lineStyles,_ratio,_spreadMode,_type,_width,fillStyle0,fillStyle1,moveDeltaX,moveDeltaY,stateFillStyle0,stateFillStyle1,stateLineStyle,stateMoveTo,stateNewStyles,decode,decode,decode,decode,decode,decode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses>
                  <class id="gear.codec.swf.data:GSwfFocalGradient"/>
               </Subclasses>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.data.shape:GSwfShapeRecordStyleChange">
         <apiName>GSwfShapeRecordStyleChange</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GSwfShapeRecordStyleChange,gear.codec.swf.data.shape.GSwfShapeRecordStyleChange,_bitmapId,_bitmapMatrix,_color,_color,_color,_fillStyles,_fillStyles,_focalGradient,_gradRecords,_gradientMatrix,_gradient,_interpolationMode,_lineStyle,_lineStyles,_lineStyles,_ratio,_spreadMode,_type,_width,fillStyle0,fillStyle1,moveDeltaX,moveDeltaY,stateFillStyle0,stateFillStyle1,stateLineStyle,stateMoveTo,stateNewStyles,decode,decode,decode,decode,decode,decode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.data.shape:GSwfLineStyle">
         <apiName>GSwfLineStyle</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GSwfLineStyle,gear.codec.swf.data.shape.GSwfLineStyle,_bitmapId,_bitmapMatrix,_color,_color,_color,_fillStyles,_fillStyles,_focalGradient,_gradRecords,_gradientMatrix,_gradient,_interpolationMode,_lineStyle,_lineStyles,_lineStyles,_ratio,_spreadMode,_type,_width,fillStyle0,fillStyle1,moveDeltaX,moveDeltaY,stateFillStyle0,stateFillStyle1,stateLineStyle,stateMoveTo,stateNewStyles,decode,decode,decode,decode,decode,decode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.data.shape:GSwfFillStyle">
         <apiName>GSwfFillStyle</apiName>
         <shortdesc>
	 填充类型
	 
	 Solid fill 单色填充
	 Gradient fill 渐变色填充
	 Bitmap fill 位图填充
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121121
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GSwfFillStyle,gear.codec.swf.data.shape.GSwfFillStyle,_bitmapId,_bitmapMatrix,_color,_color,_color,_fillStyles,_fillStyles,_focalGradient,_gradRecords,_gradientMatrix,_gradient,_interpolationMode,_lineStyle,_lineStyles,_lineStyles,_ratio,_spreadMode,_type,_width,fillStyle0,fillStyle1,moveDeltaX,moveDeltaY,stateFillStyle0,stateFillStyle1,stateLineStyle,stateMoveTo,stateNewStyles,decode,decode,decode,decode,decode,decode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 填充类型
	 
	 Solid fill 单色填充
	 Gradient fill 渐变色填充
	 Bitmap fill 位图填充
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.codec.swf.data">
      <apiName>gear.codec.swf.data</apiName>
      <apiDetail/>
      <apiClassifier id="gear.codec.swf.data:GSwfFocalGradient">
         <apiName>GSwfFocalGradient</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GSwfFocalGradient,gear.codec.swf.data.GSwfFocalGradient,_aAdd,_aMult,_bAdd,_bMult,_eventConstruct,_eventData,_eventDragOut,_eventDragOver,_eventEnterFrame,_eventInitialize,_eventKeyDown,_eventKeyPress,_eventKeyUp,_eventLoad,_eventMouseDown,_eventMouseMove,_eventMouseUp,_eventPress,_eventRelease,_eventReleaseOutside,_eventRollOut,_eventRollOver,_eventUnload,_focalPoint,_gAdd,_gMult,_hasAddTrems,_hasMultTrems,_matrix,_rAdd,_rMult,_rotateSkew0,_rotateSkew1,_scaleX,_scaleY,_translateX,_translateY,eventKeyPress,nbits,xmax,xmin,ymax,ymin,decode,decode,decode,decode,getMatrix,toString"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.codec.swf.data.shape:GSwfGradient</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.codec.swf.data.shape:GSwfGradient"/>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.data:GSwfEventFlags">
         <apiName>GSwfEventFlags</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GSwfEventFlags,gear.codec.swf.data.GSwfEventFlags,_aAdd,_aMult,_bAdd,_bMult,_eventConstruct,_eventData,_eventDragOut,_eventDragOver,_eventEnterFrame,_eventInitialize,_eventKeyDown,_eventKeyPress,_eventKeyUp,_eventLoad,_eventMouseDown,_eventMouseMove,_eventMouseUp,_eventPress,_eventRelease,_eventReleaseOutside,_eventRollOut,_eventRollOver,_eventUnload,_focalPoint,_gAdd,_gMult,_hasAddTrems,_hasMultTrems,_matrix,_rAdd,_rMult,_rotateSkew0,_rotateSkew1,_scaleX,_scaleY,_translateX,_translateY,eventKeyPress,nbits,xmax,xmin,ymax,ymin,decode,decode,decode,decode,getMatrix,toString"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.data:GSwfMatrix">
         <apiName>GSwfMatrix</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121122
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GSwfMatrix,gear.codec.swf.data.GSwfMatrix,_aAdd,_aMult,_bAdd,_bMult,_eventConstruct,_eventData,_eventDragOut,_eventDragOver,_eventEnterFrame,_eventInitialize,_eventKeyDown,_eventKeyPress,_eventKeyUp,_eventLoad,_eventMouseDown,_eventMouseMove,_eventMouseUp,_eventPress,_eventRelease,_eventReleaseOutside,_eventRollOut,_eventRollOver,_eventUnload,_focalPoint,_gAdd,_gMult,_hasAddTrems,_hasMultTrems,_matrix,_rAdd,_rMult,_rotateSkew0,_rotateSkew1,_scaleX,_scaleY,_translateX,_translateY,eventKeyPress,nbits,xmax,xmin,ymax,ymin,decode,decode,decode,decode,getMatrix,toString"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.data:GSwfColorTransformWithAlpha">
         <apiName>GSwfColorTransformWithAlpha</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GSwfColorTransformWithAlpha,gear.codec.swf.data.GSwfColorTransformWithAlpha,_aAdd,_aMult,_bAdd,_bMult,_eventConstruct,_eventData,_eventDragOut,_eventDragOver,_eventEnterFrame,_eventInitialize,_eventKeyDown,_eventKeyPress,_eventKeyUp,_eventLoad,_eventMouseDown,_eventMouseMove,_eventMouseUp,_eventPress,_eventRelease,_eventReleaseOutside,_eventRollOut,_eventRollOver,_eventUnload,_focalPoint,_gAdd,_gMult,_hasAddTrems,_hasMultTrems,_matrix,_rAdd,_rMult,_rotateSkew0,_rotateSkew1,_scaleX,_scaleY,_translateX,_translateY,eventKeyPress,nbits,xmax,xmin,ymax,ymin,decode,decode,decode,decode,getMatrix,toString"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.data:GSwfRect">
         <apiName>GSwfRect</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121215
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GSwfRect,gear.codec.swf.data.GSwfRect,_aAdd,_aMult,_bAdd,_bMult,_eventConstruct,_eventData,_eventDragOut,_eventDragOver,_eventEnterFrame,_eventInitialize,_eventKeyDown,_eventKeyPress,_eventKeyUp,_eventLoad,_eventMouseDown,_eventMouseMove,_eventMouseUp,_eventPress,_eventRelease,_eventReleaseOutside,_eventRollOut,_eventRollOver,_eventUnload,_focalPoint,_gAdd,_gMult,_hasAddTrems,_hasMultTrems,_matrix,_rAdd,_rMult,_rotateSkew0,_rotateSkew1,_scaleX,_scaleY,_translateX,_translateY,eventKeyPress,nbits,xmax,xmin,ymax,ymin,decode,decode,decode,decode,getMatrix,toString"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.codec.swf.tags">
      <apiName>gear.codec.swf.tags</apiName>
      <apiDetail/>
      <apiClassifier id="gear.codec.swf.tags:GTagFactory">
         <apiName>GTagFactory</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GTagFactory,gear.codec.swf.tags.GTagFactory,completeHandler,create,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,getBitmap"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.tags:IGSwfTag">
         <apiName>IGSwfTag</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="IGSwfTag,gear.codec.swf.tags.IGSwfTag,completeHandler,create,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,getBitmap"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiInterface/>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier/>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id=""/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors>
                  <Implementor id="gear.codec.swf.tags:GSwfTagDefineShape"/>
                  <Implementor id="gear.codec.swf.tags:GSwfTagEnd"/>
                  <Implementor id="gear.codec.swf.tags:GTagDefineBits"/>
                  <Implementor id="gear.codec.swf.tags:GTagDefineSceneAndFrameLabelData"/>
                  <Implementor id="gear.codec.swf.tags:GTagFileAttributes"/>
                  <Implementor id="gear.codec.swf.tags:GTagMetaData"/>
                  <Implementor id="gear.codec.swf.tags:GTagPlaceObject2"/>
                  <Implementor id="gear.codec.swf.tags:GTagSetBackgroundColor"/>
                  <Implementor id="gear.codec.swf.tags:GTagShowFrame"/>
                  <Implementor id="gear.codec.swf.tags:GTagUndecode"/>
               </Implementors>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.tags:GTagFileAttributes">
         <apiName>GTagFileAttributes</apiName>
         <shortdesc>
	 FileAttributes 文件属性
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121120
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GTagFileAttributes,gear.codec.swf.tags.GTagFileAttributes,GIF89A,JPEG,PNG,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,_bitmap,_bitmapAlphaData,_bitmapType,_characterId,_characterId,_characterId,_clipActions,_clipDepth,_colorTransform,_data,_data,_depth,_hasCharacter,_hasClipActions,_hasClipDepth,_hasColorTransform,_hasMatrix,_hasMove,_hasName,_hasRatio,_matrix,_name,_onComplete,_ratio,_shapeBounds,_shapes,_type,actionScript3,backgroundColor,frameInfo,frameLabelCount,hasMetaData,metaData,sceneCount,sceneInfo,useDirectBlit,useGPU,useNetwork,completeHandler,create,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,getBitmap"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.codec.swf.tags:IGSwfTag</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 FileAttributes 文件属性
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.codec.swf.tags:IGSwfTag"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.tags:GTagPlaceObject2">
         <apiName>GTagPlaceObject2</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GTagPlaceObject2,gear.codec.swf.tags.GTagPlaceObject2,GIF89A,JPEG,PNG,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,_bitmap,_bitmapAlphaData,_bitmapType,_characterId,_characterId,_characterId,_clipActions,_clipDepth,_colorTransform,_data,_data,_depth,_hasCharacter,_hasClipActions,_hasClipDepth,_hasColorTransform,_hasMatrix,_hasMove,_hasName,_hasRatio,_matrix,_name,_onComplete,_ratio,_shapeBounds,_shapes,_type,actionScript3,backgroundColor,frameInfo,frameLabelCount,hasMetaData,metaData,sceneCount,sceneInfo,useDirectBlit,useGPU,useNetwork,completeHandler,create,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,getBitmap"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.codec.swf.tags:IGSwfTag</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.codec.swf.tags:IGSwfTag"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.tags:GSwfTagDefineShape">
         <apiName>GSwfTagDefineShape</apiName>
         <shortdesc>
	 DefineShape
	 
	￼ </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GSwfTagDefineShape,gear.codec.swf.tags.GSwfTagDefineShape,GIF89A,JPEG,PNG,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,_bitmap,_bitmapAlphaData,_bitmapType,_characterId,_characterId,_characterId,_clipActions,_clipDepth,_colorTransform,_data,_data,_depth,_hasCharacter,_hasClipActions,_hasClipDepth,_hasColorTransform,_hasMatrix,_hasMove,_hasName,_hasRatio,_matrix,_name,_onComplete,_ratio,_shapeBounds,_shapes,_type,actionScript3,backgroundColor,frameInfo,frameLabelCount,hasMetaData,metaData,sceneCount,sceneInfo,useDirectBlit,useGPU,useNetwork,completeHandler,create,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,getBitmap"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.codec.swf.tags:IGSwfTag</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 DefineShape
	 
	￼ </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.codec.swf.tags:IGSwfTag"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.tags:GSwfTagEnd">
         <apiName>GSwfTagEnd</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GSwfTagEnd,gear.codec.swf.tags.GSwfTagEnd,GIF89A,JPEG,PNG,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,_bitmap,_bitmapAlphaData,_bitmapType,_characterId,_characterId,_characterId,_clipActions,_clipDepth,_colorTransform,_data,_data,_depth,_hasCharacter,_hasClipActions,_hasClipDepth,_hasColorTransform,_hasMatrix,_hasMove,_hasName,_hasRatio,_matrix,_name,_onComplete,_ratio,_shapeBounds,_shapes,_type,actionScript3,backgroundColor,frameInfo,frameLabelCount,hasMetaData,metaData,sceneCount,sceneInfo,useDirectBlit,useGPU,useNetwork,completeHandler,create,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,getBitmap"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.codec.swf.tags:IGSwfTag</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.codec.swf.tags:IGSwfTag"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.tags:GTagUndecode">
         <apiName>GTagUndecode</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GTagUndecode,gear.codec.swf.tags.GTagUndecode,GIF89A,JPEG,PNG,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,_bitmap,_bitmapAlphaData,_bitmapType,_characterId,_characterId,_characterId,_clipActions,_clipDepth,_colorTransform,_data,_data,_depth,_hasCharacter,_hasClipActions,_hasClipDepth,_hasColorTransform,_hasMatrix,_hasMove,_hasName,_hasRatio,_matrix,_name,_onComplete,_ratio,_shapeBounds,_shapes,_type,actionScript3,backgroundColor,frameInfo,frameLabelCount,hasMetaData,metaData,sceneCount,sceneInfo,useDirectBlit,useGPU,useNetwork,completeHandler,create,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,getBitmap"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.codec.swf.tags:IGSwfTag</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.codec.swf.tags:IGSwfTag"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.tags:GTagDefineBitsJPEG2">
         <apiName>GTagDefineBitsJPEG2</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GTagDefineBitsJPEG2,gear.codec.swf.tags.GTagDefineBitsJPEG2,GIF89A,JPEG,PNG,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,_bitmap,_bitmapAlphaData,_bitmapType,_characterId,_characterId,_characterId,_clipActions,_clipDepth,_colorTransform,_data,_data,_depth,_hasCharacter,_hasClipActions,_hasClipDepth,_hasColorTransform,_hasMatrix,_hasMove,_hasName,_hasRatio,_matrix,_name,_onComplete,_ratio,_shapeBounds,_shapes,_type,actionScript3,backgroundColor,frameInfo,frameLabelCount,hasMetaData,metaData,sceneCount,sceneInfo,useDirectBlit,useGPU,useNetwork,completeHandler,create,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,getBitmap"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.codec.swf.tags:GTagDefineBits</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.codec.swf.tags:GTagDefineBits"/>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses>
                  <class id="gear.codec.swf.tags:GTagDefineBitsJPEG3"/>
               </Subclasses>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.tags:GTagDefineBitsJPEG3">
         <apiName>GTagDefineBitsJPEG3</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GTagDefineBitsJPEG3,gear.codec.swf.tags.GTagDefineBitsJPEG3,GIF89A,JPEG,PNG,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,_bitmap,_bitmapAlphaData,_bitmapType,_characterId,_characterId,_characterId,_clipActions,_clipDepth,_colorTransform,_data,_data,_depth,_hasCharacter,_hasClipActions,_hasClipDepth,_hasColorTransform,_hasMatrix,_hasMove,_hasName,_hasRatio,_matrix,_name,_onComplete,_ratio,_shapeBounds,_shapes,_type,actionScript3,backgroundColor,frameInfo,frameLabelCount,hasMetaData,metaData,sceneCount,sceneInfo,useDirectBlit,useGPU,useNetwork,completeHandler,create,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,getBitmap"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>gear.codec.swf.tags:GTagDefineBitsJPEG2</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.codec.swf.tags:GTagDefineBitsJPEG2"/>
                  <Inherit id="gear.codec.swf.tags:GTagDefineBits"/>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.tags:GTagSetBackgroundColor">
         <apiName>GTagSetBackgroundColor</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GTagSetBackgroundColor,gear.codec.swf.tags.GTagSetBackgroundColor,GIF89A,JPEG,PNG,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,_bitmap,_bitmapAlphaData,_bitmapType,_characterId,_characterId,_characterId,_clipActions,_clipDepth,_colorTransform,_data,_data,_depth,_hasCharacter,_hasClipActions,_hasClipDepth,_hasColorTransform,_hasMatrix,_hasMove,_hasName,_hasRatio,_matrix,_name,_onComplete,_ratio,_shapeBounds,_shapes,_type,actionScript3,backgroundColor,frameInfo,frameLabelCount,hasMetaData,metaData,sceneCount,sceneInfo,useDirectBlit,useGPU,useNetwork,completeHandler,create,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,getBitmap"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.codec.swf.tags:IGSwfTag</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.codec.swf.tags:IGSwfTag"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.tags:GTagMetaData">
         <apiName>GTagMetaData</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GTagMetaData,gear.codec.swf.tags.GTagMetaData,GIF89A,JPEG,PNG,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,_bitmap,_bitmapAlphaData,_bitmapType,_characterId,_characterId,_characterId,_clipActions,_clipDepth,_colorTransform,_data,_data,_depth,_hasCharacter,_hasClipActions,_hasClipDepth,_hasColorTransform,_hasMatrix,_hasMove,_hasName,_hasRatio,_matrix,_name,_onComplete,_ratio,_shapeBounds,_shapes,_type,actionScript3,backgroundColor,frameInfo,frameLabelCount,hasMetaData,metaData,sceneCount,sceneInfo,useDirectBlit,useGPU,useNetwork,completeHandler,create,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,getBitmap"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.codec.swf.tags:IGSwfTag</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.codec.swf.tags:IGSwfTag"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.tags:GTagDefineBits">
         <apiName>GTagDefineBits</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GTagDefineBits,gear.codec.swf.tags.GTagDefineBits,GIF89A,JPEG,PNG,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,_bitmap,_bitmapAlphaData,_bitmapType,_characterId,_characterId,_characterId,_clipActions,_clipDepth,_colorTransform,_data,_data,_depth,_hasCharacter,_hasClipActions,_hasClipDepth,_hasColorTransform,_hasMatrix,_hasMove,_hasName,_hasRatio,_matrix,_name,_onComplete,_ratio,_shapeBounds,_shapes,_type,actionScript3,backgroundColor,frameInfo,frameLabelCount,hasMetaData,metaData,sceneCount,sceneInfo,useDirectBlit,useGPU,useNetwork,completeHandler,create,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,getBitmap"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.codec.swf.tags:IGSwfTag</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.codec.swf.tags:IGSwfTag"/>
               </Implements>
               <Subclasses>
                  <class id="gear.codec.swf.tags:GTagDefineBitsJPEG2"/>
               </Subclasses>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.tags:GTagShowFrame">
         <apiName>GTagShowFrame</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GTagShowFrame,gear.codec.swf.tags.GTagShowFrame,GIF89A,JPEG,PNG,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,_bitmap,_bitmapAlphaData,_bitmapType,_characterId,_characterId,_characterId,_clipActions,_clipDepth,_colorTransform,_data,_data,_depth,_hasCharacter,_hasClipActions,_hasClipDepth,_hasColorTransform,_hasMatrix,_hasMove,_hasName,_hasRatio,_matrix,_name,_onComplete,_ratio,_shapeBounds,_shapes,_type,actionScript3,backgroundColor,frameInfo,frameLabelCount,hasMetaData,metaData,sceneCount,sceneInfo,useDirectBlit,useGPU,useNetwork,completeHandler,create,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,getBitmap"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.codec.swf.tags:IGSwfTag</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.codec.swf.tags:IGSwfTag"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf.tags:GTagDefineSceneAndFrameLabelData">
         <apiName>GTagDefineSceneAndFrameLabelData</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GTagDefineSceneAndFrameLabelData,gear.codec.swf.tags.GTagDefineSceneAndFrameLabelData,GIF89A,JPEG,PNG,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,TYPE,_bitmap,_bitmapAlphaData,_bitmapType,_characterId,_characterId,_characterId,_clipActions,_clipDepth,_colorTransform,_data,_data,_depth,_hasCharacter,_hasClipActions,_hasClipDepth,_hasColorTransform,_hasMatrix,_hasMove,_hasName,_hasRatio,_matrix,_name,_onComplete,_ratio,_shapeBounds,_shapes,_type,actionScript3,backgroundColor,frameInfo,frameLabelCount,hasMetaData,metaData,sceneCount,sceneInfo,useDirectBlit,useGPU,useNetwork,completeHandler,create,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,decode,getBitmap"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.codec.swf.tags:IGSwfTag</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.codec.swf.tags:IGSwfTag"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.codec.swf">
      <apiName>gear.codec.swf</apiName>
      <apiDetail/>
      <apiClassifier id="gear.codec.swf:GSwfStream">
         <apiName>GSwfStream</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GSwfStream,gear.codec.swf.GSwfStream,LZMA,NONE,ZLIB,bitPos,compressType,data,fileLength,frameCount,frameRate,frameSize,position,signature,version,decode,readArrayLength,readBytes,readEncodedU32,readFB,readFIXED8,readRECT,readRGB,readRGBA,readSB,readSI32,readString,readUB,readUI16,readUI32,readUI8,resetBitPos,uncompress"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.swf:GSwf">
         <apiName>GSwf</apiName>
         <shortdesc>
	 Swf格式
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121120
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GSwf,gear.codec.swf.GSwf,LZMA,NONE,ZLIB,bitPos,compressType,data,fileLength,frameCount,frameRate,frameSize,position,signature,version,decode,readArrayLength,readBytes,readEncodedU32,readFB,readFIXED8,readRECT,readRGB,readRGBA,readSB,readSI32,readString,readUB,readUI16,readUI32,readUI8,resetBitPos,uncompress"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 Swf格式
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.codec.xlsx">
      <apiName>gear.codec.xlsx</apiName>
      <apiDetail/>
      <apiClassifier id="gear.codec.xlsx:GZipDecoder">
         <apiName>GZipDecoder</apiName>
         <shortdesc>
	 对Zip文件进行解码
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20120409
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GZipDecoder,gear.codec.xlsx.GZipDecoder,addZipFile,decode,dispose,getFile,getFileNameList,getSheet"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 对Zip文件进行解码
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.xlsx:GXlsxDecoder">
         <apiName>GXlsxDecoder</apiName>
         <shortdesc>
	 xlsx文件解码
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130116
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GXlsxDecoder,gear.codec.xlsx.GXlsxDecoder,addZipFile,decode,dispose,getFile,getFileNameList,getSheet"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.core:IDispose</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 xlsx文件解码
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.core:IDispose"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.xlsx:GXlsxFormat">
         <apiName>GXlsxFormat</apiName>
         <shortdesc>
	 Excel 表数据
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121212
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GXlsxFormat,gear.codec.xlsx.GXlsxFormat,columns,index,list,name,output,rows"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 Excel 表数据
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.codec.xlsx:GWorkSheet">
         <apiName>GWorkSheet</apiName>
         <shortdesc>
	 Excel数据
	 
	 </shortdesc>
         <prolog>
            <author>flashpf
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121108
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GWorkSheet,gear.codec.xlsx.GWorkSheet,columns,index,list,name,output,rows"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 Excel数据
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.color">
      <apiName>gear.color</apiName>
      <apiDetail/>
      <apiClassifier id="gear.color:GARGB">
         <apiName>GARGB</apiName>
         <shortdesc>
	 ARGB 色彩模型
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20101015
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GARGB,gear.color.GARGB,alpha,blue,green,red,parse,toHex,toString"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 ARGB 色彩模型
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.core">
      <apiName>gear.core</apiName>
      <apiDetail/>
      <apiClassifier id="gear.core:Game">
         <apiName>Game</apiName>
         <shortdesc>
	 游戏抽象基类
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121204
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="Game,gear.core.Game,addedToStageHandler,completeHandler,dispose,initView,progressHandler,startup,startup"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>flash.display:Sprite</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 游戏抽象基类
	 
	 </apiDesc>
            <example>
	 public class MyGame extends Game{
	   override protected function startup():void{
	     // start your game
	   }
	 }
	 </example>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.core:GLoaderPanel">
         <apiName>GLoaderPanel</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130309xz
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GLoaderPanel,gear.core.GLoaderPanel,_loaderPanel,_progressBar,progressBar,addedToStageHandler,completeHandler,dispose,initView,progressHandler,startup,startup"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.containers:GPanel</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.containers:GPanel"/>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.core:GPreloader">
         <apiName>GPreloader</apiName>
         <shortdesc>
	 SWF自加载
	        
	 用法：在需要实现自加载的类声明前加上[Frame(factoryClass="gear.core.GPreloader")]    
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130309
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GPreloader,gear.core.GPreloader,_loaderPanel,_progressBar,progressBar,addedToStageHandler,completeHandler,dispose,initView,progressHandler,startup,startup"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>flash.display:MovieClip</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 SWF自加载
	        
	 用法：在需要实现自加载的类声明前加上<codeph>[Frame(factoryClass="gear.core.GPreloader")]</codeph>    
	 
	           </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="flash.display:MovieClip"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.core:IDispose">
         <apiName>IDispose</apiName>
         <shortdesc>
	 释放接口
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20101015
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="IDispose,gear.core.IDispose,addedToStageHandler,completeHandler,dispose,initView,progressHandler,startup,startup"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiInterface/>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier/>
            </apiClassifierDef>
            <apiDesc>
	 释放接口
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id=""/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors>
                  <Implementor id="gear.codec.gpk.tag:AGpkTag"/>
                  <Implementor id="gear.gui.bd:GBDFont"/>
                  <Implementor id="gear.gui.bd:GBDList"/>
                  <Implementor id="gear.gui.bd:GBDPlayer"/>
                  <Implementor id="gear.gui.bd:GBDUnit"/>
                  <Implementor id="gear.data:GBinaryNode"/>
                  <Implementor id="gear.socket:GCallPool"/>
                  <Implementor id="gear.pool:GObjPool"/>
                  <Implementor id="gear.codec.plist:GPlistDecoder"/>
                  <Implementor id="gear.codec.psd:GPsdDecoder"/>
                  <Implementor id="gear.codec.xlsx:GXlsxDecoder"/>
                  <Implementor id="gear.codec.gpk:Gpk"/>
               </Implementors>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.crypto">
      <apiName>gear.crypto</apiName>
      <apiDetail/>
      <apiClassifier id="gear.crypto:MD5">
         <apiName>MD5</apiName>
         <shortdesc>
	 MD5加密算法
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20101015
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords" content="MD5,gear.crypto.MD5,hash,hashBinary"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 MD5加密算法
	 
	 </apiDesc>
            <example>
	              <codeblock rev="3.0">
	 var pwd_md5:String=MD5.hash("password");
	 </codeblock>
	           </example>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.data">
      <apiName>gear.data</apiName>
      <apiDetail/>
      <apiClassifier id="gear.data:GTreeNode">
         <apiName>GTreeNode</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GTreeNode,gear.data.GTreeNode,_children,_data,_data,_left,_parent,_parent,_right,data,data,keys,left,length,numChildren,parent,parent,randomValue,right,root,root,size,values,add,clear,clear,clear,clear,containsKey,containsValue,count,dispose,findAt,flush,getAt,getBy,getBy,getChildAt,getDepth,isEmpty,isLeft,isRight,push,put,removeBy,reset,setAt,shift,showSetting,toArray,toArray,toArray,toString,traverse"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.data:GTree">
         <apiName>GTree</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GTree,gear.data.GTree,_children,_data,_data,_left,_parent,_parent,_right,data,data,keys,left,length,numChildren,parent,parent,randomValue,right,root,root,size,values,add,clear,clear,clear,clear,containsKey,containsValue,count,dispose,findAt,flush,getAt,getBy,getBy,getChildAt,getDepth,isEmpty,isLeft,isRight,push,put,removeBy,reset,setAt,shift,showSetting,toArray,toArray,toArray,toString,traverse"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.data:GBinaryNode">
         <apiName>GBinaryNode</apiName>
         <shortdesc>
	 二叉树结点
	 
	 </shortdesc>
         <prolog>
            <author>BrightLi
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121112
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GBinaryNode,gear.data.GBinaryNode,_children,_data,_data,_left,_parent,_parent,_right,data,data,keys,left,length,numChildren,parent,parent,randomValue,right,root,root,size,values,add,clear,clear,clear,clear,containsKey,containsValue,count,dispose,findAt,flush,getAt,getBy,getBy,getChildAt,getDepth,isEmpty,isLeft,isRight,push,put,removeBy,reset,setAt,shift,showSetting,toArray,toArray,toArray,toString,traverse"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.core:IDispose</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 二叉树结点
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.core:IDispose"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.data:GLocalSO">
         <apiName>GLocalSO</apiName>
         <shortdesc>
	 本地共享对象类
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130110
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GLocalSO,gear.data.GLocalSO,add,clear,clear,clear,clear,containsKey,containsValue,count,dispose,findAt,flush,getAt,getBy,getBy,getChildAt,getDepth,isEmpty,isLeft,isRight,push,put,removeBy,reset,setAt,shift,showSetting,toArray,toArray,toArray,toString,traverse"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 本地共享对象类
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.data:GBinaryTree">
         <apiName>GBinaryTree</apiName>
         <shortdesc>
	 二叉树
	 
	 </shortdesc>
         <prolog>
            <author>BrightLi
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121112
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GBinaryTree,gear.data.GBinaryTree,_children,_data,_data,_left,_parent,_parent,_right,data,data,keys,left,length,numChildren,parent,parent,randomValue,right,root,root,size,values,add,clear,clear,clear,clear,containsKey,containsValue,count,dispose,findAt,flush,getAt,getBy,getBy,getChildAt,getDepth,isEmpty,isLeft,isRight,push,put,removeBy,reset,setAt,shift,showSetting,toArray,toArray,toArray,toString,traverse"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 二叉树
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.data:GHashMap">
         <apiName>GHashMap</apiName>
         <shortdesc>
	 哈希表
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130116
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GHashMap,gear.data.GHashMap,_children,_data,_data,_left,_parent,_parent,_right,data,data,keys,left,length,numChildren,parent,parent,randomValue,right,root,root,size,values,add,clear,clear,clear,clear,containsKey,containsValue,count,dispose,findAt,flush,getAt,getBy,getBy,getChildAt,getDepth,isEmpty,isLeft,isRight,push,put,removeBy,reset,setAt,shift,showSetting,toArray,toArray,toArray,toString,traverse"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 哈希表
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.data:GBinaryHeap">
         <apiName>GBinaryHeap</apiName>
         <shortdesc>
	 二叉堆
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130104
	 
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GBinaryHeap,gear.data.GBinaryHeap,_children,_data,_data,_left,_parent,_parent,_right,data,data,keys,left,length,numChildren,parent,parent,randomValue,right,root,root,size,values,add,clear,clear,clear,clear,containsKey,containsValue,count,dispose,findAt,flush,getAt,getBy,getBy,getChildAt,getDepth,isEmpty,isLeft,isRight,push,put,removeBy,reset,setAt,shift,showSetting,toArray,toArray,toArray,toString,traverse"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 二叉堆
	 
	 </apiDesc>
            <example>
	              <list version="3.0">
	 var bh:GBinaryHeap=new GBinaryHeap();
	 bh.comparse=function(source:int,target:int){
	     return source-target;
	 }
	 bh.push(3);
	 bh.push(1);
	 trace(bh.shift()) // 输出1
	 </list>
	           </example>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.effect.ghost">
      <apiName>gear.effect.ghost</apiName>
      <apiDetail/>
      <apiClassifier id="gear.effect.ghost:Ghost">
         <apiName>Ghost</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>flashpf
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="Ghost,gear.effect.ghost.Ghost,_bitmap,_count,_unit,pool,refresh,reset"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.render:IGFrame</apiBaseInterface>
               <apiBaseClassifier>flash.display:Sprite</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.render:IGFrame"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.effect">
      <apiName>gear.effect</apiName>
      <apiDetail/>
      <apiClassifier id="gear.effect:GEffect">
         <apiName>GEffect</apiName>
         <shortdesc>
	 Game Effect
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20101008
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GEffect,gear.effect.GEffect,END,_delay,_duration,_target,_timer,duration,target,dispose,next,onChangeTarget,start,stop"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 Game Effect
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="flash.events:EventDispatcher"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.game.hit">
      <apiName>gear.game.hit</apiName>
      <apiDetail/>
      <apiClassifier id="gear.game.hit:GBlock">
         <apiName>GBlock</apiName>
         <shortdesc>
	 障碍定义
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130105
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GBlock,gear.game.hit.GBlock,_halfH,_halfW,_hitRect,_x,_y,halfH,halfW,hitRect,x,y,isHit,moveTo,setTo"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 障碍定义
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.game.move">
      <apiName>gear.game.move</apiName>
      <apiDetail/>
      <apiClassifier id="gear.game.move:IGMove">
         <apiName>IGMove</apiName>
         <shortdesc>
	 移动接口
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121225
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="IGMove,gear.game.move.IGMove,ADD,AIR,SUB,UNIFORM,_current,_dist,_dropG,_dropS,_dropT,_end,_g,_mode,_moveX,_moveY,_moveZ,_s,_speed,_speedX,_speedY,_speedZ,_start,_step,_time,_time,_total,_total,_upG,_upS,_upT,_wait,current,current,dist,dist,hasNext,mode,mode,moveX,moveY,moveZ,speed,speed,total,total,total,total,bounce,next,next,next,next,reset,setMode,setSpeed,setTo,setTo"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiInterface/>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier/>
            </apiClassifierDef>
            <apiDesc>
	 移动接口
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id=""/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors>
                  <Implementor id="gear.game.move:GMoveBase"/>
               </Implementors>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.game.move:GMoveMode">
         <apiName>GMoveMode</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GMoveMode,gear.game.move.GMoveMode,ADD,AIR,SUB,UNIFORM,_current,_dist,_dropG,_dropS,_dropT,_end,_g,_mode,_moveX,_moveY,_moveZ,_s,_speed,_speedX,_speedY,_speedZ,_start,_step,_time,_time,_total,_total,_upG,_upS,_upT,_wait,current,current,dist,dist,hasNext,mode,mode,moveX,moveY,moveZ,speed,speed,total,total,total,total"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.game.move:GMove3d">
         <apiName>GMove3d</apiName>
         <shortdesc>
	 移动控制
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121225
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GMove3d,gear.game.move.GMove3d,ADD,AIR,SUB,UNIFORM,_current,_dist,_dropG,_dropS,_dropT,_end,_g,_mode,_moveX,_moveY,_moveZ,_s,_speed,_speedX,_speedY,_speedZ,_start,_step,_time,_time,_total,_total,_upG,_upS,_upT,_wait,current,current,dist,dist,hasNext,mode,mode,moveX,moveY,moveZ,speed,speed,total,total,total,total,bounce,next,next,next,next,reset,setMode,setSpeed,setTo,setTo"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 移动控制
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.game.move:GAirMove">
         <apiName>GAirMove</apiName>
         <shortdesc>
	 浮空移动
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130124
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GAirMove,gear.game.move.GAirMove,ADD,AIR,SUB,UNIFORM,_current,_dist,_dropG,_dropS,_dropT,_end,_g,_mode,_moveX,_moveY,_moveZ,_s,_speed,_speedX,_speedY,_speedZ,_start,_step,_time,_time,_total,_total,_upG,_upS,_upT,_wait,current,current,dist,dist,hasNext,mode,mode,moveX,moveY,moveZ,speed,speed,total,total,total,total,bounce,next,next,next,next,reset,setMode,setSpeed,setTo,setTo"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.game.move:GMoveBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 浮空移动
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.game.move:GMoveBase"/>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.game.move:GLineMove">
         <apiName>GLineMove</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GLineMove,gear.game.move.GLineMove,ADD,AIR,SUB,UNIFORM,_current,_dist,_dropG,_dropS,_dropT,_end,_g,_mode,_moveX,_moveY,_moveZ,_s,_speed,_speedX,_speedY,_speedZ,_start,_step,_time,_time,_total,_total,_upG,_upS,_upT,_wait,current,current,dist,dist,hasNext,mode,mode,moveX,moveY,moveZ,speed,speed,total,total,total,total,bounce,next,next,next,next,reset,setMode,setSpeed,setTo,setTo"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.game.move:GMoveBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.game.move:GMoveBase"/>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.game.move:GMoveBase">
         <apiName>GMoveBase</apiName>
         <shortdesc>
	 移动基类
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130107
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GMoveBase,gear.game.move.GMoveBase,ADD,AIR,SUB,UNIFORM,_current,_dist,_dropG,_dropS,_dropT,_end,_g,_mode,_moveX,_moveY,_moveZ,_s,_speed,_speedX,_speedY,_speedZ,_start,_step,_time,_time,_total,_total,_upG,_upS,_upT,_wait,current,current,dist,dist,hasNext,mode,mode,moveX,moveY,moveZ,speed,speed,total,total,total,total,bounce,next,next,next,next,reset,setMode,setSpeed,setTo,setTo"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.game.move:IGMove</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 移动基类
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.game.move:IGMove"/>
               </Implements>
               <Subclasses>
                  <class id="gear.game.move:GAirMove"/>
                  <class id="gear.game.move:GLineMove"/>
               </Subclasses>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.game.path">
      <apiName>gear.game.path</apiName>
      <apiDetail/>
      <apiClassifier id="gear.game.path:GBStar">
         <apiName>GBStar</apiName>
         <shortdesc>
	 B路算法
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130108
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GBStar,gear.game.path.GBStar,_block,_block,_blocks,_gh,_goal,_goal,_grid,_gw,_heuristic,_map,_map,_openList,_start,_start,_th,_tw,block,block,closed,dirs,f,g,gh,goal,goal,gw,h,map,map,opened,parent,start,start,th,tw,x,y,bresenhamLine,checkAdjacent,clear,clear,compareNode,diagonal,equal,euclidian,getNode,getNode,getPath,isBlock,isHitOrOut,isOut,isOut,manhattan,parseObj,replan,replan,setBlock,setTo,setTo,smoothingPath,toObject,toString,walkable,walkable"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 B路算法
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.game.path:IGMap">
         <apiName>IGMap</apiName>
         <shortdesc>
	 地图接口
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130107
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="IGMap,gear.game.path.IGMap,bresenhamLine,checkAdjacent,clear,clear,compareNode,diagonal,equal,euclidian,getNode,getNode,getPath,isBlock,isHitOrOut,isOut,isOut,manhattan,parseObj,replan,replan,setBlock,setTo,setTo,smoothingPath,toObject,toString,walkable,walkable"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiInterface/>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier/>
            </apiClassifierDef>
            <apiDesc>
	 地图接口
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id=""/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.game.path:GNode">
         <apiName>GNode</apiName>
         <shortdesc>
	 地图节点
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130107
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GNode,gear.game.path.GNode,_block,_block,_blocks,_gh,_goal,_goal,_grid,_gw,_heuristic,_map,_map,_openList,_start,_start,_th,_tw,block,block,closed,dirs,f,g,gh,goal,goal,gw,h,map,map,opened,parent,start,start,th,tw,x,y,bresenhamLine,checkAdjacent,clear,clear,compareNode,diagonal,equal,euclidian,getNode,getNode,getPath,isBlock,isHitOrOut,isOut,isOut,manhattan,parseObj,replan,replan,setBlock,setTo,setTo,smoothingPath,toObject,toString,walkable,walkable"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 地图节点
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.game.path:GNavMesh">
         <apiName>GNavMesh</apiName>
         <shortdesc>
	 导航网格
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords" content="GNavMesh,gear.game.path.GNavMesh"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 导航网格
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.game.path:GGridBlock">
         <apiName>GGridBlock</apiName>
         <shortdesc>
	 每2位存储一个标识,每字节存储4个标识
	 0 通路
	 1 障碍
	 2 透明
	 3 保留
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130108
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GGridBlock,gear.game.path.GGridBlock,_block,_block,_blocks,_gh,_goal,_goal,_grid,_gw,_heuristic,_map,_map,_openList,_start,_start,_th,_tw,block,block,closed,dirs,f,g,gh,goal,goal,gw,h,map,map,opened,parent,start,start,th,tw,x,y,bresenhamLine,checkAdjacent,clear,clear,compareNode,diagonal,equal,euclidian,getNode,getNode,getPath,isBlock,isHitOrOut,isOut,isOut,manhattan,parseObj,replan,replan,setBlock,setTo,setTo,smoothingPath,toObject,toString,walkable,walkable"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 每2位存储一个标识,每字节存储4个标识
	 0 通路
	 1 障碍
	 2 透明
	 3 保留
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.game.path:GPathUtil">
         <apiName>GPathUtil</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GPathUtil,gear.game.path.GPathUtil,_block,_block,_blocks,_gh,_goal,_goal,_grid,_gw,_heuristic,_map,_map,_openList,_start,_start,_th,_tw,block,block,closed,dirs,f,g,gh,goal,goal,gw,h,map,map,opened,parent,start,start,th,tw,x,y,bresenhamLine,checkAdjacent,clear,clear,compareNode,diagonal,equal,euclidian,getNode,getNode,getPath,isBlock,isHitOrOut,isOut,isOut,manhattan,parseObj,replan,replan,setBlock,setTo,setTo,smoothingPath,toObject,toString,walkable,walkable"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.game.path:GPathFinder">
         <apiName>GPathFinder</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords" content="GPathFinder,gear.game.path.GPathFinder"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.game.path:GAStar">
         <apiName>GAStar</apiName>
         <shortdesc>
	 A路算法
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130108
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GAStar,gear.game.path.GAStar,_block,_block,_blocks,_gh,_goal,_goal,_grid,_gw,_heuristic,_map,_map,_openList,_start,_start,_th,_tw,block,block,closed,dirs,f,g,gh,goal,goal,gw,h,map,map,opened,parent,start,start,th,tw,x,y,bresenhamLine,checkAdjacent,clear,clear,compareNode,diagonal,equal,euclidian,getNode,getNode,getPath,isBlock,isHitOrOut,isOut,isOut,manhattan,parseObj,replan,replan,setBlock,setTo,setTo,smoothingPath,toObject,toString,walkable,walkable"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 A路算法
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.game">
      <apiName>gear.game</apiName>
      <apiDetail/>
      <apiClassifier id="gear.game:GDepthSort">
         <apiName>GDepthSort</apiName>
         <shortdesc>
	 GDepthSort 快速深度排序(二分算法优化)
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121127
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords" content="GDepthSort,gear.game.GDepthSort,add,reset,toString"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 GDepthSort 快速深度排序(二分算法优化)
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.geom">
      <apiName>gear.geom</apiName>
      <apiDetail/>
      <apiClassifier id="gear.geom:GSize">
         <apiName>GSize</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121204
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords" content="GSize,gear.geom.GSize,height,width,width,x,y"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.geom:GHLine">
         <apiName>GHLine</apiName>
         <shortdesc>
	 水平线-可用于出生线配置
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121204
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GHLine,gear.geom.GHLine,height,width,width,x,y,getRandomPoint,toString"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 水平线-可用于出生线配置
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.gui.bd">
      <apiName>gear.gui.bd</apiName>
      <apiDetail/>
      <apiClassifier id="gear.gui.bd:GBDUnit">
         <apiName>GBDUnit</apiName>
         <shortdesc>
	 位图单元
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20111008
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GBDUnit,gear.gui.bd.GBDUnit,_bitmap,_change,_cmf,_cols,_complete,_count,_current,_delay,_delay,_dir,_dirChange,_dirs,_frame,_frames,_frames,_isTurn,_list,_loop,_loop,_offset,_oldDir,_onChange,_onComplete,_reverse,_shadow,_wait,bd,bitmap,bound,change,complete,current,delay,delay,dir,dirs,frame,frames,frames,hasFlipH,hasShadow,isPlay,key,length,list,list,loop,loop,maxHeight,maxWidth,offsetX,offsetY,onChange,onComplete,pool,pool,reverse,scale,scale,shadow,text,total,unit,wait,width,adjustColor,adjustColor,alpha,changeFrames,clearAdjustColor,clone,clone,concat,create,create,dispose,dispose,dispose,dispose,getAt,getShadowAt,insertFrames,mergeBD,nextFrame,onShow,parseObj,playBy,play,preinit,preinit,prevFrame,refresh,replay,resetBD,resetFrames,setAt,stop,update,update"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseInterface>gear.core:IDispose</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 位图单元
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.core:IDispose"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.bd:GBDPlayer">
         <apiName>GBDPlayer</apiName>
         <shortdesc>
	 位图播放器
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121205
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GBDPlayer,gear.gui.bd.GBDPlayer,_bitmap,_change,_cmf,_cols,_complete,_count,_current,_delay,_delay,_dir,_dirChange,_dirs,_frame,_frames,_frames,_isTurn,_list,_loop,_loop,_offset,_oldDir,_onChange,_onComplete,_reverse,_shadow,_wait,bd,bitmap,bound,change,complete,current,delay,delay,dir,dirs,frame,frames,frames,hasFlipH,hasShadow,isPlay,key,length,list,list,loop,loop,maxHeight,maxWidth,offsetX,offsetY,onChange,onComplete,pool,pool,reverse,scale,scale,shadow,text,total,unit,wait,width,adjustColor,adjustColor,alpha,changeFrames,clearAdjustColor,clone,clone,concat,create,create,dispose,dispose,dispose,dispose,getAt,getShadowAt,insertFrames,mergeBD,nextFrame,onShow,parseObj,playBy,play,preinit,preinit,prevFrame,refresh,replay,resetBD,resetFrames,setAt,stop,update,update"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.render:IGFrame</apiBaseInterface>
               <apiBaseInterface>gear.core:IDispose</apiBaseInterface>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 位图播放器
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.render:IGFrame"/>
                  <Implement id="gear.core:IDispose"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.bd:GBDList">
         <apiName>GBDList</apiName>
         <shortdesc>
	 位图数据定义
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121107
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GBDList,gear.gui.bd.GBDList,_bitmap,_change,_cmf,_cols,_complete,_count,_current,_delay,_delay,_dir,_dirChange,_dirs,_frame,_frames,_frames,_isTurn,_list,_loop,_loop,_offset,_oldDir,_onChange,_onComplete,_reverse,_shadow,_wait,bd,bitmap,bound,change,complete,current,delay,delay,dir,dirs,frame,frames,frames,hasFlipH,hasShadow,isPlay,key,length,list,list,loop,loop,maxHeight,maxWidth,offsetX,offsetY,onChange,onComplete,pool,pool,reverse,scale,scale,shadow,text,total,unit,wait,width,adjustColor,adjustColor,alpha,changeFrames,clearAdjustColor,clone,clone,concat,create,create,dispose,dispose,dispose,dispose,getAt,getShadowAt,insertFrames,mergeBD,nextFrame,onShow,parseObj,playBy,play,preinit,preinit,prevFrame,refresh,replay,resetBD,resetFrames,setAt,stop,update,update"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseInterface>gear.core:IDispose</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 位图数据定义
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.core:IDispose"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.bd:GPlayData">
         <apiName>GPlayData</apiName>
         <shortdesc>
	 播放数据定义
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121227
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GPlayData,gear.gui.bd.GPlayData,_bitmap,_change,_cmf,_cols,_complete,_count,_current,_delay,_delay,_dir,_dirChange,_dirs,_frame,_frames,_frames,_isTurn,_list,_loop,_loop,_offset,_oldDir,_onChange,_onComplete,_reverse,_shadow,_wait,bd,bitmap,bound,change,complete,current,delay,delay,dir,dirs,frame,frames,frames,hasFlipH,hasShadow,isPlay,key,length,list,list,loop,loop,maxHeight,maxWidth,offsetX,offsetY,onChange,onComplete,pool,pool,reverse,scale,scale,shadow,text,total,unit,wait,width,adjustColor,adjustColor,alpha,changeFrames,clearAdjustColor,clone,clone,concat,create,create,dispose,dispose,dispose,dispose,getAt,getShadowAt,insertFrames,mergeBD,nextFrame,onShow,parseObj,playBy,play,preinit,preinit,prevFrame,refresh,replay,resetBD,resetFrames,setAt,stop,update,update"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 播放数据定义
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
         <related-links>
            <link href="gear.gui.bd.xml#GBDPlayer">
               <linktext>gear.gui.bd.GBDPlayer</linktext>
            </link>
         </related-links>
      </apiClassifier>
      <apiClassifier id="gear.gui.bd:GBDFont">
         <apiName>GBDFont</apiName>
         <shortdesc>
	 位图字体
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121212
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GBDFont,gear.gui.bd.GBDFont,_bitmap,_change,_cmf,_cols,_complete,_count,_current,_delay,_delay,_dir,_dirChange,_dirs,_frame,_frames,_frames,_isTurn,_list,_loop,_loop,_offset,_oldDir,_onChange,_onComplete,_reverse,_shadow,_wait,bd,bitmap,bound,change,complete,current,delay,delay,dir,dirs,frame,frames,frames,hasFlipH,hasShadow,isPlay,key,length,list,list,loop,loop,maxHeight,maxWidth,offsetX,offsetY,onChange,onComplete,pool,pool,reverse,scale,scale,shadow,text,total,unit,wait,width,adjustColor,adjustColor,alpha,changeFrames,clearAdjustColor,clone,clone,concat,create,create,dispose,dispose,dispose,dispose,getAt,getShadowAt,insertFrames,mergeBD,nextFrame,onShow,parseObj,playBy,play,preinit,preinit,prevFrame,refresh,replay,resetBD,resetFrames,setAt,stop,update,update"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseInterface>gear.core:IDispose</apiBaseInterface>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 位图字体
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.core:IDispose"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.gui.cell">
      <apiName>gear.gui.cell</apiName>
      <apiDetail/>
      <apiClassifier id="gear.gui.cell:GCell">
         <apiName>GCell</apiName>
         <shortdesc>
	 单元格控件
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130116
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GCell,gear.gui.cell.GCell,_label,_phase,_selected,_skin,selected,source,create,mouseHandler,onShow,preinit,resize,updatePhase,updateSelected"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 单元格控件
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.gui.containers">
      <apiName>gear.gui.containers</apiName>
      <apiDetail/>
      <apiClassifier id="gear.gui.containers:GScroller">
         <apiName>GScroller</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GScroller,gear.gui.containers.GScroller,_bgSkin,_bounds,_content,_content,_hScrollBar,_modal,_modalSkin,_onClose,_scrollRect,_vScrollBar,bgSkin,modal,onClose,add,add,create,create,onHValueChange,onShow,onStageResize,onVValueChange,preinit,preinit,resize,resize,updateBounds,updateModal,updateScroll"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.containers:GPanel">
         <apiName>GPanel</apiName>
         <shortdesc>
	 面板控件
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130116
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GPanel,gear.gui.containers.GPanel,_bgSkin,_bounds,_content,_content,_hScrollBar,_modal,_modalSkin,_onClose,_scrollRect,_vScrollBar,bgSkin,modal,onClose,add,add,create,create,onHValueChange,onShow,onStageResize,onVValueChange,preinit,preinit,resize,resize,updateBounds,updateModal,updateScroll"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 面板控件
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses>
                  <class id="gear.core:GLoaderPanel"/>
                  <class id="gear.gui.controls:GAlert"/>
                  <class id="gear.gui:GLoadMonitor"/>
                  <class id="gear.log4a:GUIAppender"/>
               </Subclasses>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.gui.controls">
      <apiName>gear.gui.controls</apiName>
      <apiDetail/>
      <apiClassifier id="gear.gui.controls:GStats">
         <apiName>GStats</apiName>
         <shortdesc>
	 GStatus 性能监视器
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121210
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GStats,gear.gui.controls.GStats,addCell,append,appendGroup,appendHtmlText,cellMouseDownHandler,clear,clear,clear,clickHandler,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,focusHandler,focusHandler,getFormat,keyUpHandler,mouseHandler,mouseHandler,mouseHandler,mouseUpHandler,mouseUpHandler,mouseWheelHandler,moveCells,onArrowClick,onArrowClick,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onHide,onHide,onModelChange,onModelChange,onModelChange,onNextClick,onPrevClick,onSelect,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onValueChange,onValueChange,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,refresh,removeCell,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,selectAll,setFocus,setLabelPhaseColor,setPhaseColor,setPhaseColor,setTo,setTo,stage_mouseMoveHandler,stage_mouseMoveHandler,textFieldScrollHandler,textInputHandler,thumb_mouseDownHandler,thumb_mouseDownHandler,track_mouseDownHandler,track_mouseDownHandler,update,update,update,update,update,updateCell,updateCells,updateChanges,updateChanges,updateChanges,updateContent,updateFlag,updateHtmlText,updateLabel,updateLabel,updateLayout,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updateScroll,updateScroll,updateSelected,updateSelected,updateSelected,updateText,updateText,updateText,updateThumb,updateThumb,updateType,viewSkin"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.render:IGFrame</apiBaseInterface>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 GStatus 性能监视器
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.render:IGFrame"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GGrid">
         <apiName>GGrid</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GGrid,gear.gui.controls.GGrid,CANCEL,MANUAL,NO,NONE,OK,POLLED,YES,_appender,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_barSkin,_bgSkin,_bgSkin,_bgSkin,_bitmap,_bitmapData,_borderSkin,_borderSkin,_buttons,_cell,_cellHeight,_cells,_changes,_changes,_changes,_content,_content,_context,_direction,_direction,_down_btn,_down_btn,_down_btn,_down_btn,_editable,_edlim,_flag,_group,_hgap,_icon,_icon,_icon,_label,_label,_label,_label,_label,_label,_label,_list,_lock,_lockPhase,_max,_max,_max,_max,_max,_maxLines,_min,_min,_min,_min,_mode,_model,_model,_model,_next_btn,_onChange,_onClick,_onEnter,_onValueChange,_onValueChange,_pageSize,_pageSize,_phase,_phase,_phase,_phase,_phase,_phase,_phaseColor,_phaseColor,_position,_position,_prev_btn,_repeatDelay,_repeatDelay,_scale9Grid,_scrollBar,_scrollRect,_selected,_selectedIndex,_selectedIndex,_selected,_skin,_skin,_skin,_step,_step,_step,_text,_text,_textAlignIcon,_textField,_textField,_textField,_textFormat,_textInput,_textInput,_textInput,_thumbIcon,_thumbIcon,_thumbScrollOffset,_thumbScrollOffset,_thumbSkin,_thumbSkin,_thumb_btn,_thumb_btn,_trackSkin,_trackSkin,_trackSkin,_track_btn,_track_btn,_up_btn,_up_btn,_up_btn,_up_btn,_vScrollBar,_vScrollBar,_vScrollBar,_value,_value,_value,_vgap,barSkin,bitmapData,displayAsPassword,editable,flag,group,icon,icon,icon,label,label,lockPhase,maxLines,model,model,model,onChange,onClick,onEnter,onValueChange,onValueChange,phase,selected,selected,selectedIndex,selectedIndex,selection,skin,skin,skin,styleSheet,text,text,text,text,text,text,textFieldFilters,trackSkin,value,value,addCell,append,appendGroup,appendHtmlText,cellMouseDownHandler,clear,clear,clear,clickHandler,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,focusHandler,focusHandler,getFormat,keyUpHandler,mouseHandler,mouseHandler,mouseHandler,mouseUpHandler,mouseUpHandler,mouseWheelHandler,moveCells,onArrowClick,onArrowClick,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onHide,onHide,onModelChange,onModelChange,onModelChange,onNextClick,onPrevClick,onSelect,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onValueChange,onValueChange,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,refresh,removeCell,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,selectAll,setFocus,setLabelPhaseColor,setPhaseColor,setPhaseColor,setTo,setTo,stage_mouseMoveHandler,stage_mouseMoveHandler,textFieldScrollHandler,textInputHandler,thumb_mouseDownHandler,thumb_mouseDownHandler,track_mouseDownHandler,track_mouseDownHandler,update,update,update,update,update,updateCell,updateCells,updateChanges,updateChanges,updateChanges,updateContent,updateFlag,updateHtmlText,updateLabel,updateLabel,updateLayout,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updateScroll,updateScroll,updateSelected,updateSelected,updateSelected,updateText,updateText,updateText,updateThumb,updateThumb,updateType,viewSkin"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GRichTextArea">
         <apiName>GRichTextArea</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GRichTextArea,gear.gui.controls.GRichTextArea,CANCEL,MANUAL,NO,NONE,OK,POLLED,YES,_appender,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_barSkin,_bgSkin,_bgSkin,_bgSkin,_bitmap,_bitmapData,_borderSkin,_borderSkin,_buttons,_cell,_cellHeight,_cells,_changes,_changes,_changes,_content,_content,_context,_direction,_direction,_down_btn,_down_btn,_down_btn,_down_btn,_editable,_edlim,_flag,_group,_hgap,_icon,_icon,_icon,_label,_label,_label,_label,_label,_label,_label,_list,_lock,_lockPhase,_max,_max,_max,_max,_max,_maxLines,_min,_min,_min,_min,_mode,_model,_model,_model,_next_btn,_onChange,_onClick,_onEnter,_onValueChange,_onValueChange,_pageSize,_pageSize,_phase,_phase,_phase,_phase,_phase,_phase,_phaseColor,_phaseColor,_position,_position,_prev_btn,_repeatDelay,_repeatDelay,_scale9Grid,_scrollBar,_scrollRect,_selected,_selectedIndex,_selectedIndex,_selected,_skin,_skin,_skin,_step,_step,_step,_text,_text,_textAlignIcon,_textField,_textField,_textField,_textFormat,_textInput,_textInput,_textInput,_thumbIcon,_thumbIcon,_thumbScrollOffset,_thumbScrollOffset,_thumbSkin,_thumbSkin,_thumb_btn,_thumb_btn,_trackSkin,_trackSkin,_trackSkin,_track_btn,_track_btn,_up_btn,_up_btn,_up_btn,_up_btn,_vScrollBar,_vScrollBar,_vScrollBar,_value,_value,_value,_vgap,barSkin,bitmapData,displayAsPassword,editable,flag,group,icon,icon,icon,label,label,lockPhase,maxLines,model,model,model,onChange,onClick,onEnter,onValueChange,onValueChange,phase,selected,selected,selectedIndex,selectedIndex,selection,skin,skin,skin,styleSheet,text,text,text,text,text,text,textFieldFilters,trackSkin,value,value,addCell,append,appendGroup,appendHtmlText,cellMouseDownHandler,clear,clear,clear,clickHandler,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,focusHandler,focusHandler,getFormat,keyUpHandler,mouseHandler,mouseHandler,mouseHandler,mouseUpHandler,mouseUpHandler,mouseWheelHandler,moveCells,onArrowClick,onArrowClick,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onHide,onHide,onModelChange,onModelChange,onModelChange,onNextClick,onPrevClick,onSelect,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onValueChange,onValueChange,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,refresh,removeCell,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,selectAll,setFocus,setLabelPhaseColor,setPhaseColor,setPhaseColor,setTo,setTo,stage_mouseMoveHandler,stage_mouseMoveHandler,textFieldScrollHandler,textInputHandler,thumb_mouseDownHandler,thumb_mouseDownHandler,track_mouseDownHandler,track_mouseDownHandler,update,update,update,update,update,updateCell,updateCells,updateChanges,updateChanges,updateChanges,updateContent,updateFlag,updateHtmlText,updateLabel,updateLabel,updateLayout,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updateScroll,updateScroll,updateSelected,updateSelected,updateSelected,updateText,updateText,updateText,updateThumb,updateThumb,updateType,viewSkin"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GStar">
         <apiName>GStar</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords" content="GStar,gear.gui.controls.GStar"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GTree">
         <apiName>GTree</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GTree,gear.gui.controls.GTree,CANCEL,MANUAL,NO,NONE,OK,POLLED,YES,_appender,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_barSkin,_bgSkin,_bgSkin,_bgSkin,_bitmap,_bitmapData,_borderSkin,_borderSkin,_buttons,_cell,_cellHeight,_cells,_changes,_changes,_changes,_content,_content,_context,_direction,_direction,_down_btn,_down_btn,_down_btn,_down_btn,_editable,_edlim,_flag,_group,_hgap,_icon,_icon,_icon,_label,_label,_label,_label,_label,_label,_label,_list,_lock,_lockPhase,_max,_max,_max,_max,_max,_maxLines,_min,_min,_min,_min,_mode,_model,_model,_model,_next_btn,_onChange,_onClick,_onEnter,_onValueChange,_onValueChange,_pageSize,_pageSize,_phase,_phase,_phase,_phase,_phase,_phase,_phaseColor,_phaseColor,_position,_position,_prev_btn,_repeatDelay,_repeatDelay,_scale9Grid,_scrollBar,_scrollRect,_selected,_selectedIndex,_selectedIndex,_selected,_skin,_skin,_skin,_step,_step,_step,_text,_text,_textAlignIcon,_textField,_textField,_textField,_textFormat,_textInput,_textInput,_textInput,_thumbIcon,_thumbIcon,_thumbScrollOffset,_thumbScrollOffset,_thumbSkin,_thumbSkin,_thumb_btn,_thumb_btn,_trackSkin,_trackSkin,_trackSkin,_track_btn,_track_btn,_up_btn,_up_btn,_up_btn,_up_btn,_vScrollBar,_vScrollBar,_vScrollBar,_value,_value,_value,_vgap,barSkin,bitmapData,displayAsPassword,editable,flag,group,icon,icon,icon,label,label,lockPhase,maxLines,model,model,model,onChange,onClick,onEnter,onValueChange,onValueChange,phase,selected,selected,selectedIndex,selectedIndex,selection,skin,skin,skin,styleSheet,text,text,text,text,text,text,textFieldFilters,trackSkin,value,value"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GVSlider">
         <apiName>GVSlider</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords" content="GVSlider,gear.gui.controls.GVSlider"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GList">
         <apiName>GList</apiName>
         <shortdesc>
	 列表控件
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130121
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GList,gear.gui.controls.GList,CANCEL,MANUAL,NO,NONE,OK,POLLED,YES,_appender,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_barSkin,_bgSkin,_bgSkin,_bgSkin,_bitmap,_bitmapData,_borderSkin,_borderSkin,_buttons,_cell,_cellHeight,_cells,_changes,_changes,_changes,_content,_content,_context,_direction,_direction,_down_btn,_down_btn,_down_btn,_down_btn,_editable,_edlim,_flag,_group,_hgap,_icon,_icon,_icon,_label,_label,_label,_label,_label,_label,_label,_list,_lock,_lockPhase,_max,_max,_max,_max,_max,_maxLines,_min,_min,_min,_min,_mode,_model,_model,_model,_next_btn,_onChange,_onClick,_onEnter,_onValueChange,_onValueChange,_pageSize,_pageSize,_phase,_phase,_phase,_phase,_phase,_phase,_phaseColor,_phaseColor,_position,_position,_prev_btn,_repeatDelay,_repeatDelay,_scale9Grid,_scrollBar,_scrollRect,_selected,_selectedIndex,_selectedIndex,_selected,_skin,_skin,_skin,_step,_step,_step,_text,_text,_textAlignIcon,_textField,_textField,_textField,_textFormat,_textInput,_textInput,_textInput,_thumbIcon,_thumbIcon,_thumbScrollOffset,_thumbScrollOffset,_thumbSkin,_thumbSkin,_thumb_btn,_thumb_btn,_trackSkin,_trackSkin,_trackSkin,_track_btn,_track_btn,_up_btn,_up_btn,_up_btn,_up_btn,_vScrollBar,_vScrollBar,_vScrollBar,_value,_value,_value,_vgap,barSkin,bitmapData,displayAsPassword,editable,flag,group,icon,icon,icon,label,label,lockPhase,maxLines,model,model,model,onChange,onClick,onEnter,onValueChange,onValueChange,phase,selected,selected,selectedIndex,selectedIndex,selection,skin,skin,skin,styleSheet,text,text,text,text,text,text,textFieldFilters,trackSkin,value,value,addCell,append,appendGroup,appendHtmlText,cellMouseDownHandler,clear,clear,clear,clickHandler,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,focusHandler,focusHandler,getFormat,keyUpHandler,mouseHandler,mouseHandler,mouseHandler,mouseUpHandler,mouseUpHandler,mouseWheelHandler,moveCells,onArrowClick,onArrowClick,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onHide,onHide,onModelChange,onModelChange,onModelChange,onNextClick,onPrevClick,onSelect,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onValueChange,onValueChange,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,refresh,removeCell,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,selectAll,setFocus,setLabelPhaseColor,setPhaseColor,setPhaseColor,setTo,setTo,stage_mouseMoveHandler,stage_mouseMoveHandler,textFieldScrollHandler,textInputHandler,thumb_mouseDownHandler,thumb_mouseDownHandler,track_mouseDownHandler,track_mouseDownHandler,update,update,update,update,update,updateCell,updateCells,updateChanges,updateChanges,updateChanges,updateContent,updateFlag,updateHtmlText,updateLabel,updateLabel,updateLayout,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updateScroll,updateScroll,updateSelected,updateSelected,updateSelected,updateText,updateText,updateText,updateThumb,updateThumb,updateType,viewSkin"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 列表控件
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GLabel">
         <apiName>GLabel</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121129
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GLabel,gear.gui.controls.GLabel,CANCEL,MANUAL,NO,NONE,OK,POLLED,YES,_appender,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_barSkin,_bgSkin,_bgSkin,_bgSkin,_bitmap,_bitmapData,_borderSkin,_borderSkin,_buttons,_cell,_cellHeight,_cells,_changes,_changes,_changes,_content,_content,_context,_direction,_direction,_down_btn,_down_btn,_down_btn,_down_btn,_editable,_edlim,_flag,_group,_hgap,_icon,_icon,_icon,_label,_label,_label,_label,_label,_label,_label,_list,_lock,_lockPhase,_max,_max,_max,_max,_max,_maxLines,_min,_min,_min,_min,_mode,_model,_model,_model,_next_btn,_onChange,_onClick,_onEnter,_onValueChange,_onValueChange,_pageSize,_pageSize,_phase,_phase,_phase,_phase,_phase,_phase,_phaseColor,_phaseColor,_position,_position,_prev_btn,_repeatDelay,_repeatDelay,_scale9Grid,_scrollBar,_scrollRect,_selected,_selectedIndex,_selectedIndex,_selected,_skin,_skin,_skin,_step,_step,_step,_text,_text,_textAlignIcon,_textField,_textField,_textField,_textFormat,_textInput,_textInput,_textInput,_thumbIcon,_thumbIcon,_thumbScrollOffset,_thumbScrollOffset,_thumbSkin,_thumbSkin,_thumb_btn,_thumb_btn,_trackSkin,_trackSkin,_trackSkin,_track_btn,_track_btn,_up_btn,_up_btn,_up_btn,_up_btn,_vScrollBar,_vScrollBar,_vScrollBar,_value,_value,_value,_vgap,barSkin,bitmapData,displayAsPassword,editable,flag,group,icon,icon,icon,label,label,lockPhase,maxLines,model,model,model,onChange,onClick,onEnter,onValueChange,onValueChange,phase,selected,selected,selectedIndex,selectedIndex,selection,skin,skin,skin,styleSheet,text,text,text,text,text,text,textFieldFilters,trackSkin,value,value,addCell,append,appendGroup,appendHtmlText,cellMouseDownHandler,clear,clear,clear,clickHandler,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,focusHandler,focusHandler,getFormat,keyUpHandler,mouseHandler,mouseHandler,mouseHandler,mouseUpHandler,mouseUpHandler,mouseWheelHandler,moveCells,onArrowClick,onArrowClick,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onHide,onHide,onModelChange,onModelChange,onModelChange,onNextClick,onPrevClick,onSelect,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onValueChange,onValueChange,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,refresh,removeCell,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,selectAll,setFocus,setLabelPhaseColor,setPhaseColor,setPhaseColor,setTo,setTo,stage_mouseMoveHandler,stage_mouseMoveHandler,textFieldScrollHandler,textInputHandler,thumb_mouseDownHandler,thumb_mouseDownHandler,track_mouseDownHandler,track_mouseDownHandler,update,update,update,update,update,updateCell,updateCells,updateChanges,updateChanges,updateChanges,updateContent,updateFlag,updateHtmlText,updateLabel,updateLabel,updateLayout,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updateScroll,updateScroll,updateSelected,updateSelected,updateSelected,updateText,updateText,updateText,updateThumb,updateThumb,updateType,viewSkin"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GButtonBar">
         <apiName>GButtonBar</apiName>
         <shortdesc>
	 
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121208
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords" content="GButtonBar,gear.gui.controls.GButtonBar"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GColorChooser">
         <apiName>GColorChooser</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords" content="GColorChooser,gear.gui.controls.GColorChooser"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GProgressBar">
         <apiName>GProgressBar</apiName>
         <shortdesc>
	 进度条控件
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121210
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GProgressBar,gear.gui.controls.GProgressBar,CANCEL,MANUAL,NO,NONE,OK,POLLED,YES,_appender,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_barSkin,_bgSkin,_bgSkin,_bgSkin,_bitmap,_bitmapData,_borderSkin,_borderSkin,_buttons,_cell,_cellHeight,_cells,_changes,_changes,_changes,_content,_content,_context,_direction,_direction,_down_btn,_down_btn,_down_btn,_down_btn,_editable,_edlim,_flag,_group,_hgap,_icon,_icon,_icon,_label,_label,_label,_label,_label,_label,_label,_list,_lock,_lockPhase,_max,_max,_max,_max,_max,_maxLines,_min,_min,_min,_min,_mode,_model,_model,_model,_next_btn,_onChange,_onClick,_onEnter,_onValueChange,_onValueChange,_pageSize,_pageSize,_phase,_phase,_phase,_phase,_phase,_phase,_phaseColor,_phaseColor,_position,_position,_prev_btn,_repeatDelay,_repeatDelay,_scale9Grid,_scrollBar,_scrollRect,_selected,_selectedIndex,_selectedIndex,_selected,_skin,_skin,_skin,_step,_step,_step,_text,_text,_textAlignIcon,_textField,_textField,_textField,_textFormat,_textInput,_textInput,_textInput,_thumbIcon,_thumbIcon,_thumbScrollOffset,_thumbScrollOffset,_thumbSkin,_thumbSkin,_thumb_btn,_thumb_btn,_trackSkin,_trackSkin,_trackSkin,_track_btn,_track_btn,_up_btn,_up_btn,_up_btn,_up_btn,_vScrollBar,_vScrollBar,_vScrollBar,_value,_value,_value,_vgap,barSkin,bitmapData,displayAsPassword,editable,flag,group,icon,icon,icon,label,label,lockPhase,maxLines,model,model,model,onChange,onClick,onEnter,onValueChange,onValueChange,phase,selected,selected,selectedIndex,selectedIndex,selection,skin,skin,skin,styleSheet,text,text,text,text,text,text,textFieldFilters,trackSkin,value,value,addCell,append,appendGroup,appendHtmlText,cellMouseDownHandler,clear,clear,clear,clickHandler,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,focusHandler,focusHandler,getFormat,keyUpHandler,mouseHandler,mouseHandler,mouseHandler,mouseUpHandler,mouseUpHandler,mouseWheelHandler,moveCells,onArrowClick,onArrowClick,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onHide,onHide,onModelChange,onModelChange,onModelChange,onNextClick,onPrevClick,onSelect,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onValueChange,onValueChange,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,refresh,removeCell,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,selectAll,setFocus,setLabelPhaseColor,setPhaseColor,setPhaseColor,setTo,setTo,stage_mouseMoveHandler,stage_mouseMoveHandler,textFieldScrollHandler,textInputHandler,thumb_mouseDownHandler,thumb_mouseDownHandler,track_mouseDownHandler,track_mouseDownHandler,update,update,update,update,update,updateCell,updateCells,updateChanges,updateChanges,updateChanges,updateContent,updateFlag,updateHtmlText,updateLabel,updateLabel,updateLayout,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updateScroll,updateScroll,updateSelected,updateSelected,updateSelected,updateText,updateText,updateText,updateThumb,updateThumb,updateType,viewSkin"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 进度条控件
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GHSlider">
         <apiName>GHSlider</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords" content="GHSlider,gear.gui.controls.GHSlider"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GSwitch">
         <apiName>GSwitch</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords" content="GSwitch,gear.gui.controls.GSwitch"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GToggleButton">
         <apiName>GToggleButton</apiName>
         <shortdesc>
	 按钮控件
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121204
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GToggleButton,gear.gui.controls.GToggleButton,CANCEL,MANUAL,NO,NONE,OK,POLLED,YES,_appender,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_barSkin,_bgSkin,_bgSkin,_bgSkin,_bitmap,_bitmapData,_borderSkin,_borderSkin,_buttons,_cell,_cellHeight,_cells,_changes,_changes,_changes,_content,_content,_context,_direction,_direction,_down_btn,_down_btn,_down_btn,_down_btn,_editable,_edlim,_flag,_group,_hgap,_icon,_icon,_icon,_label,_label,_label,_label,_label,_label,_label,_list,_lock,_lockPhase,_max,_max,_max,_max,_max,_maxLines,_min,_min,_min,_min,_mode,_model,_model,_model,_next_btn,_onChange,_onClick,_onEnter,_onValueChange,_onValueChange,_pageSize,_pageSize,_phase,_phase,_phase,_phase,_phase,_phase,_phaseColor,_phaseColor,_position,_position,_prev_btn,_repeatDelay,_repeatDelay,_scale9Grid,_scrollBar,_scrollRect,_selected,_selectedIndex,_selectedIndex,_selected,_skin,_skin,_skin,_step,_step,_step,_text,_text,_textAlignIcon,_textField,_textField,_textField,_textFormat,_textInput,_textInput,_textInput,_thumbIcon,_thumbIcon,_thumbScrollOffset,_thumbScrollOffset,_thumbSkin,_thumbSkin,_thumb_btn,_thumb_btn,_trackSkin,_trackSkin,_trackSkin,_track_btn,_track_btn,_up_btn,_up_btn,_up_btn,_up_btn,_vScrollBar,_vScrollBar,_vScrollBar,_value,_value,_value,_vgap,barSkin,bitmapData,displayAsPassword,editable,flag,group,icon,icon,icon,label,label,lockPhase,maxLines,model,model,model,onChange,onClick,onEnter,onValueChange,onValueChange,phase,selected,selected,selectedIndex,selectedIndex,selection,skin,skin,skin,styleSheet,text,text,text,text,text,text,textFieldFilters,trackSkin,value,value,addCell,append,appendGroup,appendHtmlText,cellMouseDownHandler,clear,clear,clear,clickHandler,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,focusHandler,focusHandler,getFormat,keyUpHandler,mouseHandler,mouseHandler,mouseHandler,mouseUpHandler,mouseUpHandler,mouseWheelHandler,moveCells,onArrowClick,onArrowClick,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onHide,onHide,onModelChange,onModelChange,onModelChange,onNextClick,onPrevClick,onSelect,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onValueChange,onValueChange,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,refresh,removeCell,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,selectAll,setFocus,setLabelPhaseColor,setPhaseColor,setPhaseColor,setTo,setTo,stage_mouseMoveHandler,stage_mouseMoveHandler,textFieldScrollHandler,textInputHandler,thumb_mouseDownHandler,thumb_mouseDownHandler,track_mouseDownHandler,track_mouseDownHandler,update,update,update,update,update,updateCell,updateCells,updateChanges,updateChanges,updateChanges,updateContent,updateFlag,updateHtmlText,updateLabel,updateLabel,updateLayout,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updateScroll,updateScroll,updateSelected,updateSelected,updateSelected,updateText,updateText,updateText,updateThumb,updateThumb,updateType,viewSkin"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.controls:GToggleBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 按钮控件
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.controls:GToggleBase"/>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GIcon">
         <apiName>GIcon</apiName>
         <shortdesc>
	 图标控件
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121204
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GIcon,gear.gui.controls.GIcon,CANCEL,MANUAL,NO,NONE,OK,POLLED,YES,_appender,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_barSkin,_bgSkin,_bgSkin,_bgSkin,_bitmap,_bitmapData,_borderSkin,_borderSkin,_buttons,_cell,_cellHeight,_cells,_changes,_changes,_changes,_content,_content,_context,_direction,_direction,_down_btn,_down_btn,_down_btn,_down_btn,_editable,_edlim,_flag,_group,_hgap,_icon,_icon,_icon,_label,_label,_label,_label,_label,_label,_label,_list,_lock,_lockPhase,_max,_max,_max,_max,_max,_maxLines,_min,_min,_min,_min,_mode,_model,_model,_model,_next_btn,_onChange,_onClick,_onEnter,_onValueChange,_onValueChange,_pageSize,_pageSize,_phase,_phase,_phase,_phase,_phase,_phase,_phaseColor,_phaseColor,_position,_position,_prev_btn,_repeatDelay,_repeatDelay,_scale9Grid,_scrollBar,_scrollRect,_selected,_selectedIndex,_selectedIndex,_selected,_skin,_skin,_skin,_step,_step,_step,_text,_text,_textAlignIcon,_textField,_textField,_textField,_textFormat,_textInput,_textInput,_textInput,_thumbIcon,_thumbIcon,_thumbScrollOffset,_thumbScrollOffset,_thumbSkin,_thumbSkin,_thumb_btn,_thumb_btn,_trackSkin,_trackSkin,_trackSkin,_track_btn,_track_btn,_up_btn,_up_btn,_up_btn,_up_btn,_vScrollBar,_vScrollBar,_vScrollBar,_value,_value,_value,_vgap,barSkin,bitmapData,displayAsPassword,editable,flag,group,icon,icon,icon,label,label,lockPhase,maxLines,model,model,model,onChange,onClick,onEnter,onValueChange,onValueChange,phase,selected,selected,selectedIndex,selectedIndex,selection,skin,skin,skin,styleSheet,text,text,text,text,text,text,textFieldFilters,trackSkin,value,value,addCell,append,appendGroup,appendHtmlText,cellMouseDownHandler,clear,clear,clear,clickHandler,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,focusHandler,focusHandler,getFormat,keyUpHandler,mouseHandler,mouseHandler,mouseHandler,mouseUpHandler,mouseUpHandler,mouseWheelHandler,moveCells,onArrowClick,onArrowClick,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onHide,onHide,onModelChange,onModelChange,onModelChange,onNextClick,onPrevClick,onSelect,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onValueChange,onValueChange,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,refresh,removeCell,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,selectAll,setFocus,setLabelPhaseColor,setPhaseColor,setPhaseColor,setTo,setTo,stage_mouseMoveHandler,stage_mouseMoveHandler,textFieldScrollHandler,textInputHandler,thumb_mouseDownHandler,thumb_mouseDownHandler,track_mouseDownHandler,track_mouseDownHandler,update,update,update,update,update,updateCell,updateCells,updateChanges,updateChanges,updateChanges,updateContent,updateFlag,updateHtmlText,updateLabel,updateLabel,updateLayout,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updateScroll,updateScroll,updateSelected,updateSelected,updateSelected,updateText,updateText,updateText,updateThumb,updateThumb,updateType,viewSkin"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 图标控件
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GTextInput">
         <apiName>GTextInput</apiName>
         <shortdesc>
	 文本输入框控件
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130307
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GTextInput,gear.gui.controls.GTextInput,CANCEL,MANUAL,NO,NONE,OK,POLLED,YES,_appender,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_barSkin,_bgSkin,_bgSkin,_bgSkin,_bitmap,_bitmapData,_borderSkin,_borderSkin,_buttons,_cell,_cellHeight,_cells,_changes,_changes,_changes,_content,_content,_context,_direction,_direction,_down_btn,_down_btn,_down_btn,_down_btn,_editable,_edlim,_flag,_group,_hgap,_icon,_icon,_icon,_label,_label,_label,_label,_label,_label,_label,_list,_lock,_lockPhase,_max,_max,_max,_max,_max,_maxLines,_min,_min,_min,_min,_mode,_model,_model,_model,_next_btn,_onChange,_onClick,_onEnter,_onValueChange,_onValueChange,_pageSize,_pageSize,_phase,_phase,_phase,_phase,_phase,_phase,_phaseColor,_phaseColor,_position,_position,_prev_btn,_repeatDelay,_repeatDelay,_scale9Grid,_scrollBar,_scrollRect,_selected,_selectedIndex,_selectedIndex,_selected,_skin,_skin,_skin,_step,_step,_step,_text,_text,_textAlignIcon,_textField,_textField,_textField,_textFormat,_textInput,_textInput,_textInput,_thumbIcon,_thumbIcon,_thumbScrollOffset,_thumbScrollOffset,_thumbSkin,_thumbSkin,_thumb_btn,_thumb_btn,_trackSkin,_trackSkin,_trackSkin,_track_btn,_track_btn,_up_btn,_up_btn,_up_btn,_up_btn,_vScrollBar,_vScrollBar,_vScrollBar,_value,_value,_value,_vgap,barSkin,bitmapData,displayAsPassword,editable,flag,group,icon,icon,icon,label,label,lockPhase,maxLines,model,model,model,onChange,onClick,onEnter,onValueChange,onValueChange,phase,selected,selected,selectedIndex,selectedIndex,selection,skin,skin,skin,styleSheet,text,text,text,text,text,text,textFieldFilters,trackSkin,value,value,addCell,append,appendGroup,appendHtmlText,cellMouseDownHandler,clear,clear,clear,clickHandler,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,focusHandler,focusHandler,getFormat,keyUpHandler,mouseHandler,mouseHandler,mouseHandler,mouseUpHandler,mouseUpHandler,mouseWheelHandler,moveCells,onArrowClick,onArrowClick,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onHide,onHide,onModelChange,onModelChange,onModelChange,onNextClick,onPrevClick,onSelect,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onValueChange,onValueChange,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,refresh,removeCell,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,selectAll,setFocus,setLabelPhaseColor,setPhaseColor,setPhaseColor,setTo,setTo,stage_mouseMoveHandler,stage_mouseMoveHandler,textFieldScrollHandler,textInputHandler,thumb_mouseDownHandler,thumb_mouseDownHandler,track_mouseDownHandler,track_mouseDownHandler,update,update,update,update,update,updateCell,updateCells,updateChanges,updateChanges,updateChanges,updateContent,updateFlag,updateHtmlText,updateLabel,updateLabel,updateLayout,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updateScroll,updateScroll,updateSelected,updateSelected,updateSelected,updateText,updateText,updateText,updateThumb,updateThumb,updateType,viewSkin"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 文本输入框控件
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GHScrollBar">
         <apiName>GHScrollBar</apiName>
         <shortdesc>
	 滚动条控件
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130118
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GHScrollBar,gear.gui.controls.GHScrollBar,CANCEL,MANUAL,NO,NONE,OK,POLLED,YES,_appender,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_barSkin,_bgSkin,_bgSkin,_bgSkin,_bitmap,_bitmapData,_borderSkin,_borderSkin,_buttons,_cell,_cellHeight,_cells,_changes,_changes,_changes,_content,_content,_context,_direction,_direction,_down_btn,_down_btn,_down_btn,_down_btn,_editable,_edlim,_flag,_group,_hgap,_icon,_icon,_icon,_label,_label,_label,_label,_label,_label,_label,_list,_lock,_lockPhase,_max,_max,_max,_max,_max,_maxLines,_min,_min,_min,_min,_mode,_model,_model,_model,_next_btn,_onChange,_onClick,_onEnter,_onValueChange,_onValueChange,_pageSize,_pageSize,_phase,_phase,_phase,_phase,_phase,_phase,_phaseColor,_phaseColor,_position,_position,_prev_btn,_repeatDelay,_repeatDelay,_scale9Grid,_scrollBar,_scrollRect,_selected,_selectedIndex,_selectedIndex,_selected,_skin,_skin,_skin,_step,_step,_step,_text,_text,_textAlignIcon,_textField,_textField,_textField,_textFormat,_textInput,_textInput,_textInput,_thumbIcon,_thumbIcon,_thumbScrollOffset,_thumbScrollOffset,_thumbSkin,_thumbSkin,_thumb_btn,_thumb_btn,_trackSkin,_trackSkin,_trackSkin,_track_btn,_track_btn,_up_btn,_up_btn,_up_btn,_up_btn,_vScrollBar,_vScrollBar,_vScrollBar,_value,_value,_value,_vgap,barSkin,bitmapData,displayAsPassword,editable,flag,group,icon,icon,icon,label,label,lockPhase,maxLines,model,model,model,onChange,onClick,onEnter,onValueChange,onValueChange,phase,selected,selected,selectedIndex,selectedIndex,selection,skin,skin,skin,styleSheet,text,text,text,text,text,text,textFieldFilters,trackSkin,value,value,addCell,append,appendGroup,appendHtmlText,cellMouseDownHandler,clear,clear,clear,clickHandler,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,focusHandler,focusHandler,getFormat,keyUpHandler,mouseHandler,mouseHandler,mouseHandler,mouseUpHandler,mouseUpHandler,mouseWheelHandler,moveCells,onArrowClick,onArrowClick,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onHide,onHide,onModelChange,onModelChange,onModelChange,onNextClick,onPrevClick,onSelect,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onValueChange,onValueChange,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,refresh,removeCell,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,selectAll,setFocus,setLabelPhaseColor,setPhaseColor,setPhaseColor,setTo,setTo,stage_mouseMoveHandler,stage_mouseMoveHandler,textFieldScrollHandler,textInputHandler,thumb_mouseDownHandler,thumb_mouseDownHandler,track_mouseDownHandler,track_mouseDownHandler,update,update,update,update,update,updateCell,updateCells,updateChanges,updateChanges,updateChanges,updateContent,updateFlag,updateHtmlText,updateLabel,updateLabel,updateLayout,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updateScroll,updateScroll,updateSelected,updateSelected,updateSelected,updateText,updateText,updateText,updateThumb,updateThumb,updateType,viewSkin"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 滚动条控件
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GVScrollBar">
         <apiName>GVScrollBar</apiName>
         <shortdesc>
	 滚动条控件
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130118
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GVScrollBar,gear.gui.controls.GVScrollBar,CANCEL,MANUAL,NO,NONE,OK,POLLED,YES,_appender,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_barSkin,_bgSkin,_bgSkin,_bgSkin,_bitmap,_bitmapData,_borderSkin,_borderSkin,_buttons,_cell,_cellHeight,_cells,_changes,_changes,_changes,_content,_content,_context,_direction,_direction,_down_btn,_down_btn,_down_btn,_down_btn,_editable,_edlim,_flag,_group,_hgap,_icon,_icon,_icon,_label,_label,_label,_label,_label,_label,_label,_list,_lock,_lockPhase,_max,_max,_max,_max,_max,_maxLines,_min,_min,_min,_min,_mode,_model,_model,_model,_next_btn,_onChange,_onClick,_onEnter,_onValueChange,_onValueChange,_pageSize,_pageSize,_phase,_phase,_phase,_phase,_phase,_phase,_phaseColor,_phaseColor,_position,_position,_prev_btn,_repeatDelay,_repeatDelay,_scale9Grid,_scrollBar,_scrollRect,_selected,_selectedIndex,_selectedIndex,_selected,_skin,_skin,_skin,_step,_step,_step,_text,_text,_textAlignIcon,_textField,_textField,_textField,_textFormat,_textInput,_textInput,_textInput,_thumbIcon,_thumbIcon,_thumbScrollOffset,_thumbScrollOffset,_thumbSkin,_thumbSkin,_thumb_btn,_thumb_btn,_trackSkin,_trackSkin,_trackSkin,_track_btn,_track_btn,_up_btn,_up_btn,_up_btn,_up_btn,_vScrollBar,_vScrollBar,_vScrollBar,_value,_value,_value,_vgap,barSkin,bitmapData,displayAsPassword,editable,flag,group,icon,icon,icon,label,label,lockPhase,maxLines,model,model,model,onChange,onClick,onEnter,onValueChange,onValueChange,phase,selected,selected,selectedIndex,selectedIndex,selection,skin,skin,skin,styleSheet,text,text,text,text,text,text,textFieldFilters,trackSkin,value,value,addCell,append,appendGroup,appendHtmlText,cellMouseDownHandler,clear,clear,clear,clickHandler,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,focusHandler,focusHandler,getFormat,keyUpHandler,mouseHandler,mouseHandler,mouseHandler,mouseUpHandler,mouseUpHandler,mouseWheelHandler,moveCells,onArrowClick,onArrowClick,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onHide,onHide,onModelChange,onModelChange,onModelChange,onNextClick,onPrevClick,onSelect,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onValueChange,onValueChange,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,refresh,removeCell,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,selectAll,setFocus,setLabelPhaseColor,setPhaseColor,setPhaseColor,setTo,setTo,stage_mouseMoveHandler,stage_mouseMoveHandler,textFieldScrollHandler,textInputHandler,thumb_mouseDownHandler,thumb_mouseDownHandler,track_mouseDownHandler,track_mouseDownHandler,update,update,update,update,update,updateCell,updateCells,updateChanges,updateChanges,updateChanges,updateContent,updateFlag,updateHtmlText,updateLabel,updateLabel,updateLayout,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updateScroll,updateScroll,updateSelected,updateSelected,updateSelected,updateText,updateText,updateText,updateThumb,updateThumb,updateType,viewSkin"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 滚动条控件
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GTextArea">
         <apiName>GTextArea</apiName>
         <shortdesc>
	 文本框控件
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130118
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GTextArea,gear.gui.controls.GTextArea,CANCEL,MANUAL,NO,NONE,OK,POLLED,YES,_appender,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_barSkin,_bgSkin,_bgSkin,_bgSkin,_bitmap,_bitmapData,_borderSkin,_borderSkin,_buttons,_cell,_cellHeight,_cells,_changes,_changes,_changes,_content,_content,_context,_direction,_direction,_down_btn,_down_btn,_down_btn,_down_btn,_editable,_edlim,_flag,_group,_hgap,_icon,_icon,_icon,_label,_label,_label,_label,_label,_label,_label,_list,_lock,_lockPhase,_max,_max,_max,_max,_max,_maxLines,_min,_min,_min,_min,_mode,_model,_model,_model,_next_btn,_onChange,_onClick,_onEnter,_onValueChange,_onValueChange,_pageSize,_pageSize,_phase,_phase,_phase,_phase,_phase,_phase,_phaseColor,_phaseColor,_position,_position,_prev_btn,_repeatDelay,_repeatDelay,_scale9Grid,_scrollBar,_scrollRect,_selected,_selectedIndex,_selectedIndex,_selected,_skin,_skin,_skin,_step,_step,_step,_text,_text,_textAlignIcon,_textField,_textField,_textField,_textFormat,_textInput,_textInput,_textInput,_thumbIcon,_thumbIcon,_thumbScrollOffset,_thumbScrollOffset,_thumbSkin,_thumbSkin,_thumb_btn,_thumb_btn,_trackSkin,_trackSkin,_trackSkin,_track_btn,_track_btn,_up_btn,_up_btn,_up_btn,_up_btn,_vScrollBar,_vScrollBar,_vScrollBar,_value,_value,_value,_vgap,barSkin,bitmapData,displayAsPassword,editable,flag,group,icon,icon,icon,label,label,lockPhase,maxLines,model,model,model,onChange,onClick,onEnter,onValueChange,onValueChange,phase,selected,selected,selectedIndex,selectedIndex,selection,skin,skin,skin,styleSheet,text,text,text,text,text,text,textFieldFilters,trackSkin,value,value,addCell,append,appendGroup,appendHtmlText,cellMouseDownHandler,clear,clear,clear,clickHandler,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,focusHandler,focusHandler,getFormat,keyUpHandler,mouseHandler,mouseHandler,mouseHandler,mouseUpHandler,mouseUpHandler,mouseWheelHandler,moveCells,onArrowClick,onArrowClick,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onHide,onHide,onModelChange,onModelChange,onModelChange,onNextClick,onPrevClick,onSelect,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onValueChange,onValueChange,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,refresh,removeCell,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,selectAll,setFocus,setLabelPhaseColor,setPhaseColor,setPhaseColor,setTo,setTo,stage_mouseMoveHandler,stage_mouseMoveHandler,textFieldScrollHandler,textInputHandler,thumb_mouseDownHandler,thumb_mouseDownHandler,track_mouseDownHandler,track_mouseDownHandler,update,update,update,update,update,updateCell,updateCells,updateChanges,updateChanges,updateChanges,updateContent,updateFlag,updateHtmlText,updateLabel,updateLabel,updateLayout,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updateScroll,updateScroll,updateSelected,updateSelected,updateSelected,updateText,updateText,updateText,updateThumb,updateThumb,updateType,viewSkin"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 文本框控件
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GCheckBox">
         <apiName>GCheckBox</apiName>
         <shortdesc>
	 复选框控件
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121207
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GCheckBox,gear.gui.controls.GCheckBox,CANCEL,MANUAL,NO,NONE,OK,POLLED,YES,_appender,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_barSkin,_bgSkin,_bgSkin,_bgSkin,_bitmap,_bitmapData,_borderSkin,_borderSkin,_buttons,_cell,_cellHeight,_cells,_changes,_changes,_changes,_content,_content,_context,_direction,_direction,_down_btn,_down_btn,_down_btn,_down_btn,_editable,_edlim,_flag,_group,_hgap,_icon,_icon,_icon,_label,_label,_label,_label,_label,_label,_label,_list,_lock,_lockPhase,_max,_max,_max,_max,_max,_maxLines,_min,_min,_min,_min,_mode,_model,_model,_model,_next_btn,_onChange,_onClick,_onEnter,_onValueChange,_onValueChange,_pageSize,_pageSize,_phase,_phase,_phase,_phase,_phase,_phase,_phaseColor,_phaseColor,_position,_position,_prev_btn,_repeatDelay,_repeatDelay,_scale9Grid,_scrollBar,_scrollRect,_selected,_selectedIndex,_selectedIndex,_selected,_skin,_skin,_skin,_step,_step,_step,_text,_text,_textAlignIcon,_textField,_textField,_textField,_textFormat,_textInput,_textInput,_textInput,_thumbIcon,_thumbIcon,_thumbScrollOffset,_thumbScrollOffset,_thumbSkin,_thumbSkin,_thumb_btn,_thumb_btn,_trackSkin,_trackSkin,_trackSkin,_track_btn,_track_btn,_up_btn,_up_btn,_up_btn,_up_btn,_vScrollBar,_vScrollBar,_vScrollBar,_value,_value,_value,_vgap,barSkin,bitmapData,displayAsPassword,editable,flag,group,icon,icon,icon,label,label,lockPhase,maxLines,model,model,model,onChange,onClick,onEnter,onValueChange,onValueChange,phase,selected,selected,selectedIndex,selectedIndex,selection,skin,skin,skin,styleSheet,text,text,text,text,text,text,textFieldFilters,trackSkin,value,value,addCell,append,appendGroup,appendHtmlText,cellMouseDownHandler,clear,clear,clear,clickHandler,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,focusHandler,focusHandler,getFormat,keyUpHandler,mouseHandler,mouseHandler,mouseHandler,mouseUpHandler,mouseUpHandler,mouseWheelHandler,moveCells,onArrowClick,onArrowClick,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onHide,onHide,onModelChange,onModelChange,onModelChange,onNextClick,onPrevClick,onSelect,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onValueChange,onValueChange,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,refresh,removeCell,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,selectAll,setFocus,setLabelPhaseColor,setPhaseColor,setPhaseColor,setTo,setTo,stage_mouseMoveHandler,stage_mouseMoveHandler,textFieldScrollHandler,textInputHandler,thumb_mouseDownHandler,thumb_mouseDownHandler,track_mouseDownHandler,track_mouseDownHandler,update,update,update,update,update,updateCell,updateCells,updateChanges,updateChanges,updateChanges,updateContent,updateFlag,updateHtmlText,updateLabel,updateLabel,updateLayout,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updateScroll,updateScroll,updateSelected,updateSelected,updateSelected,updateText,updateText,updateText,updateThumb,updateThumb,updateType,viewSkin"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 复选框控件
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GButton">
         <apiName>GButton</apiName>
         <shortdesc>
	 按钮控件
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130116
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GButton,gear.gui.controls.GButton,CANCEL,MANUAL,NO,NONE,OK,POLLED,YES,_appender,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_barSkin,_bgSkin,_bgSkin,_bgSkin,_bitmap,_bitmapData,_borderSkin,_borderSkin,_buttons,_cell,_cellHeight,_cells,_changes,_changes,_changes,_content,_content,_context,_direction,_direction,_down_btn,_down_btn,_down_btn,_down_btn,_editable,_edlim,_flag,_group,_hgap,_icon,_icon,_icon,_label,_label,_label,_label,_label,_label,_label,_list,_lock,_lockPhase,_max,_max,_max,_max,_max,_maxLines,_min,_min,_min,_min,_mode,_model,_model,_model,_next_btn,_onChange,_onClick,_onEnter,_onValueChange,_onValueChange,_pageSize,_pageSize,_phase,_phase,_phase,_phase,_phase,_phase,_phaseColor,_phaseColor,_position,_position,_prev_btn,_repeatDelay,_repeatDelay,_scale9Grid,_scrollBar,_scrollRect,_selected,_selectedIndex,_selectedIndex,_selected,_skin,_skin,_skin,_step,_step,_step,_text,_text,_textAlignIcon,_textField,_textField,_textField,_textFormat,_textInput,_textInput,_textInput,_thumbIcon,_thumbIcon,_thumbScrollOffset,_thumbScrollOffset,_thumbSkin,_thumbSkin,_thumb_btn,_thumb_btn,_trackSkin,_trackSkin,_trackSkin,_track_btn,_track_btn,_up_btn,_up_btn,_up_btn,_up_btn,_vScrollBar,_vScrollBar,_vScrollBar,_value,_value,_value,_vgap,barSkin,bitmapData,displayAsPassword,editable,flag,group,icon,icon,icon,label,label,lockPhase,maxLines,model,model,model,onChange,onClick,onEnter,onValueChange,onValueChange,phase,selected,selected,selectedIndex,selectedIndex,selection,skin,skin,skin,styleSheet,text,text,text,text,text,text,textFieldFilters,trackSkin,value,value,addCell,append,appendGroup,appendHtmlText,cellMouseDownHandler,clear,clear,clear,clickHandler,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,focusHandler,focusHandler,getFormat,keyUpHandler,mouseHandler,mouseHandler,mouseHandler,mouseUpHandler,mouseUpHandler,mouseWheelHandler,moveCells,onArrowClick,onArrowClick,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onHide,onHide,onModelChange,onModelChange,onModelChange,onNextClick,onPrevClick,onSelect,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onValueChange,onValueChange,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,refresh,removeCell,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,selectAll,setFocus,setLabelPhaseColor,setPhaseColor,setPhaseColor,setTo,setTo,stage_mouseMoveHandler,stage_mouseMoveHandler,textFieldScrollHandler,textInputHandler,thumb_mouseDownHandler,thumb_mouseDownHandler,track_mouseDownHandler,track_mouseDownHandler,update,update,update,update,update,updateCell,updateCells,updateChanges,updateChanges,updateChanges,updateContent,updateFlag,updateHtmlText,updateLabel,updateLabel,updateLayout,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updateScroll,updateScroll,updateSelected,updateSelected,updateSelected,updateText,updateText,updateText,updateThumb,updateThumb,updateType,viewSkin"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 按钮控件
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GSpinner">
         <apiName>GSpinner</apiName>
         <shortdesc>
	 选项器控件
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GSpinner,gear.gui.controls.GSpinner,CANCEL,MANUAL,NO,NONE,OK,POLLED,YES,_appender,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_barSkin,_bgSkin,_bgSkin,_bgSkin,_bitmap,_bitmapData,_borderSkin,_borderSkin,_buttons,_cell,_cellHeight,_cells,_changes,_changes,_changes,_content,_content,_context,_direction,_direction,_down_btn,_down_btn,_down_btn,_down_btn,_editable,_edlim,_flag,_group,_hgap,_icon,_icon,_icon,_label,_label,_label,_label,_label,_label,_label,_list,_lock,_lockPhase,_max,_max,_max,_max,_max,_maxLines,_min,_min,_min,_min,_mode,_model,_model,_model,_next_btn,_onChange,_onClick,_onEnter,_onValueChange,_onValueChange,_pageSize,_pageSize,_phase,_phase,_phase,_phase,_phase,_phase,_phaseColor,_phaseColor,_position,_position,_prev_btn,_repeatDelay,_repeatDelay,_scale9Grid,_scrollBar,_scrollRect,_selected,_selectedIndex,_selectedIndex,_selected,_skin,_skin,_skin,_step,_step,_step,_text,_text,_textAlignIcon,_textField,_textField,_textField,_textFormat,_textInput,_textInput,_textInput,_thumbIcon,_thumbIcon,_thumbScrollOffset,_thumbScrollOffset,_thumbSkin,_thumbSkin,_thumb_btn,_thumb_btn,_trackSkin,_trackSkin,_trackSkin,_track_btn,_track_btn,_up_btn,_up_btn,_up_btn,_up_btn,_vScrollBar,_vScrollBar,_vScrollBar,_value,_value,_value,_vgap,barSkin,bitmapData,displayAsPassword,editable,flag,group,icon,icon,icon,label,label,lockPhase,maxLines,model,model,model,onChange,onClick,onEnter,onValueChange,onValueChange,phase,selected,selected,selectedIndex,selectedIndex,selection,skin,skin,skin,styleSheet,text,text,text,text,text,text,textFieldFilters,trackSkin,value,value"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 选项器控件
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GRadioButton">
         <apiName>GRadioButton</apiName>
         <shortdesc>
	 单选按钮控件
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121204
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GRadioButton,gear.gui.controls.GRadioButton,CANCEL,MANUAL,NO,NONE,OK,POLLED,YES,_appender,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_barSkin,_bgSkin,_bgSkin,_bgSkin,_bitmap,_bitmapData,_borderSkin,_borderSkin,_buttons,_cell,_cellHeight,_cells,_changes,_changes,_changes,_content,_content,_context,_direction,_direction,_down_btn,_down_btn,_down_btn,_down_btn,_editable,_edlim,_flag,_group,_hgap,_icon,_icon,_icon,_label,_label,_label,_label,_label,_label,_label,_list,_lock,_lockPhase,_max,_max,_max,_max,_max,_maxLines,_min,_min,_min,_min,_mode,_model,_model,_model,_next_btn,_onChange,_onClick,_onEnter,_onValueChange,_onValueChange,_pageSize,_pageSize,_phase,_phase,_phase,_phase,_phase,_phase,_phaseColor,_phaseColor,_position,_position,_prev_btn,_repeatDelay,_repeatDelay,_scale9Grid,_scrollBar,_scrollRect,_selected,_selectedIndex,_selectedIndex,_selected,_skin,_skin,_skin,_step,_step,_step,_text,_text,_textAlignIcon,_textField,_textField,_textField,_textFormat,_textInput,_textInput,_textInput,_thumbIcon,_thumbIcon,_thumbScrollOffset,_thumbScrollOffset,_thumbSkin,_thumbSkin,_thumb_btn,_thumb_btn,_trackSkin,_trackSkin,_trackSkin,_track_btn,_track_btn,_up_btn,_up_btn,_up_btn,_up_btn,_vScrollBar,_vScrollBar,_vScrollBar,_value,_value,_value,_vgap,barSkin,bitmapData,displayAsPassword,editable,flag,group,icon,icon,icon,label,label,lockPhase,maxLines,model,model,model,onChange,onClick,onEnter,onValueChange,onValueChange,phase,selected,selected,selectedIndex,selectedIndex,selection,skin,skin,skin,styleSheet,text,text,text,text,text,text,textFieldFilters,trackSkin,value,value,addCell,append,appendGroup,appendHtmlText,cellMouseDownHandler,clear,clear,clear,clickHandler,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,focusHandler,focusHandler,getFormat,keyUpHandler,mouseHandler,mouseHandler,mouseHandler,mouseUpHandler,mouseUpHandler,mouseWheelHandler,moveCells,onArrowClick,onArrowClick,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onHide,onHide,onModelChange,onModelChange,onModelChange,onNextClick,onPrevClick,onSelect,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onValueChange,onValueChange,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,refresh,removeCell,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,selectAll,setFocus,setLabelPhaseColor,setPhaseColor,setPhaseColor,setTo,setTo,stage_mouseMoveHandler,stage_mouseMoveHandler,textFieldScrollHandler,textInputHandler,thumb_mouseDownHandler,thumb_mouseDownHandler,track_mouseDownHandler,track_mouseDownHandler,update,update,update,update,update,updateCell,updateCells,updateChanges,updateChanges,updateChanges,updateContent,updateFlag,updateHtmlText,updateLabel,updateLabel,updateLayout,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updateScroll,updateScroll,updateSelected,updateSelected,updateSelected,updateText,updateText,updateText,updateThumb,updateThumb,updateType,viewSkin"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.controls:GToggleBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 单选按钮控件
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.controls:GToggleBase"/>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GStepper">
         <apiName>GStepper</apiName>
         <shortdesc>
	 步进器控件
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GStepper,gear.gui.controls.GStepper,CANCEL,MANUAL,NO,NONE,OK,POLLED,YES,_appender,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_barSkin,_bgSkin,_bgSkin,_bgSkin,_bitmap,_bitmapData,_borderSkin,_borderSkin,_buttons,_cell,_cellHeight,_cells,_changes,_changes,_changes,_content,_content,_context,_direction,_direction,_down_btn,_down_btn,_down_btn,_down_btn,_editable,_edlim,_flag,_group,_hgap,_icon,_icon,_icon,_label,_label,_label,_label,_label,_label,_label,_list,_lock,_lockPhase,_max,_max,_max,_max,_max,_maxLines,_min,_min,_min,_min,_mode,_model,_model,_model,_next_btn,_onChange,_onClick,_onEnter,_onValueChange,_onValueChange,_pageSize,_pageSize,_phase,_phase,_phase,_phase,_phase,_phase,_phaseColor,_phaseColor,_position,_position,_prev_btn,_repeatDelay,_repeatDelay,_scale9Grid,_scrollBar,_scrollRect,_selected,_selectedIndex,_selectedIndex,_selected,_skin,_skin,_skin,_step,_step,_step,_text,_text,_textAlignIcon,_textField,_textField,_textField,_textFormat,_textInput,_textInput,_textInput,_thumbIcon,_thumbIcon,_thumbScrollOffset,_thumbScrollOffset,_thumbSkin,_thumbSkin,_thumb_btn,_thumb_btn,_trackSkin,_trackSkin,_trackSkin,_track_btn,_track_btn,_up_btn,_up_btn,_up_btn,_up_btn,_vScrollBar,_vScrollBar,_vScrollBar,_value,_value,_value,_vgap,barSkin,bitmapData,displayAsPassword,editable,flag,group,icon,icon,icon,label,label,lockPhase,maxLines,model,model,model,onChange,onClick,onEnter,onValueChange,onValueChange,phase,selected,selected,selectedIndex,selectedIndex,selection,skin,skin,skin,styleSheet,text,text,text,text,text,text,textFieldFilters,trackSkin,value,value"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 步进器控件
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GToggleBase">
         <apiName>GToggleBase</apiName>
         <shortdesc>
	 双模基础控件
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20101018
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GToggleBase,gear.gui.controls.GToggleBase,CANCEL,MANUAL,NO,NONE,OK,POLLED,YES,_appender,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_barSkin,_bgSkin,_bgSkin,_bgSkin,_bitmap,_bitmapData,_borderSkin,_borderSkin,_buttons,_cell,_cellHeight,_cells,_changes,_changes,_changes,_content,_content,_context,_direction,_direction,_down_btn,_down_btn,_down_btn,_down_btn,_editable,_edlim,_flag,_group,_hgap,_icon,_icon,_icon,_label,_label,_label,_label,_label,_label,_label,_list,_lock,_lockPhase,_max,_max,_max,_max,_max,_maxLines,_min,_min,_min,_min,_mode,_model,_model,_model,_next_btn,_onChange,_onClick,_onEnter,_onValueChange,_onValueChange,_pageSize,_pageSize,_phase,_phase,_phase,_phase,_phase,_phase,_phaseColor,_phaseColor,_position,_position,_prev_btn,_repeatDelay,_repeatDelay,_scale9Grid,_scrollBar,_scrollRect,_selected,_selectedIndex,_selectedIndex,_selected,_skin,_skin,_skin,_step,_step,_step,_text,_text,_textAlignIcon,_textField,_textField,_textField,_textFormat,_textInput,_textInput,_textInput,_thumbIcon,_thumbIcon,_thumbScrollOffset,_thumbScrollOffset,_thumbSkin,_thumbSkin,_thumb_btn,_thumb_btn,_trackSkin,_trackSkin,_trackSkin,_track_btn,_track_btn,_up_btn,_up_btn,_up_btn,_up_btn,_vScrollBar,_vScrollBar,_vScrollBar,_value,_value,_value,_vgap,barSkin,bitmapData,displayAsPassword,editable,flag,group,icon,icon,icon,label,label,lockPhase,maxLines,model,model,model,onChange,onClick,onEnter,onValueChange,onValueChange,phase,selected,selected,selectedIndex,selectedIndex,selection,skin,skin,skin,styleSheet,text,text,text,text,text,text,textFieldFilters,trackSkin,value,value,addCell,append,appendGroup,appendHtmlText,cellMouseDownHandler,clear,clear,clear,clickHandler,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,focusHandler,focusHandler,getFormat,keyUpHandler,mouseHandler,mouseHandler,mouseHandler,mouseUpHandler,mouseUpHandler,mouseWheelHandler,moveCells,onArrowClick,onArrowClick,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onHide,onHide,onModelChange,onModelChange,onModelChange,onNextClick,onPrevClick,onSelect,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onValueChange,onValueChange,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,refresh,removeCell,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,selectAll,setFocus,setLabelPhaseColor,setPhaseColor,setPhaseColor,setTo,setTo,stage_mouseMoveHandler,stage_mouseMoveHandler,textFieldScrollHandler,textInputHandler,thumb_mouseDownHandler,thumb_mouseDownHandler,track_mouseDownHandler,track_mouseDownHandler,update,update,update,update,update,updateCell,updateCells,updateChanges,updateChanges,updateChanges,updateContent,updateFlag,updateHtmlText,updateLabel,updateLabel,updateLayout,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updateScroll,updateScroll,updateSelected,updateSelected,updateSelected,updateText,updateText,updateText,updateThumb,updateThumb,updateType,viewSkin"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 双模基础控件
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses>
                  <class id="gear.gui.controls:GToggleButton"/>
                  <class id="gear.gui.controls:GRadioButton"/>
               </Subclasses>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GSelector">
         <apiName>GSelector</apiName>
         <shortdesc>
	 选择器控件
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130121
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GSelector,gear.gui.controls.GSelector,CANCEL,MANUAL,NO,NONE,OK,POLLED,YES,_appender,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_barSkin,_bgSkin,_bgSkin,_bgSkin,_bitmap,_bitmapData,_borderSkin,_borderSkin,_buttons,_cell,_cellHeight,_cells,_changes,_changes,_changes,_content,_content,_context,_direction,_direction,_down_btn,_down_btn,_down_btn,_down_btn,_editable,_edlim,_flag,_group,_hgap,_icon,_icon,_icon,_label,_label,_label,_label,_label,_label,_label,_list,_lock,_lockPhase,_max,_max,_max,_max,_max,_maxLines,_min,_min,_min,_min,_mode,_model,_model,_model,_next_btn,_onChange,_onClick,_onEnter,_onValueChange,_onValueChange,_pageSize,_pageSize,_phase,_phase,_phase,_phase,_phase,_phase,_phaseColor,_phaseColor,_position,_position,_prev_btn,_repeatDelay,_repeatDelay,_scale9Grid,_scrollBar,_scrollRect,_selected,_selectedIndex,_selectedIndex,_selected,_skin,_skin,_skin,_step,_step,_step,_text,_text,_textAlignIcon,_textField,_textField,_textField,_textFormat,_textInput,_textInput,_textInput,_thumbIcon,_thumbIcon,_thumbScrollOffset,_thumbScrollOffset,_thumbSkin,_thumbSkin,_thumb_btn,_thumb_btn,_trackSkin,_trackSkin,_trackSkin,_track_btn,_track_btn,_up_btn,_up_btn,_up_btn,_up_btn,_vScrollBar,_vScrollBar,_vScrollBar,_value,_value,_value,_vgap,barSkin,bitmapData,displayAsPassword,editable,flag,group,icon,icon,icon,label,label,lockPhase,maxLines,model,model,model,onChange,onClick,onEnter,onValueChange,onValueChange,phase,selected,selected,selectedIndex,selectedIndex,selection,skin,skin,skin,styleSheet,text,text,text,text,text,text,textFieldFilters,trackSkin,value,value,addCell,append,appendGroup,appendHtmlText,cellMouseDownHandler,clear,clear,clear,clickHandler,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,focusHandler,focusHandler,getFormat,keyUpHandler,mouseHandler,mouseHandler,mouseHandler,mouseUpHandler,mouseUpHandler,mouseWheelHandler,moveCells,onArrowClick,onArrowClick,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onHide,onHide,onModelChange,onModelChange,onModelChange,onNextClick,onPrevClick,onSelect,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onValueChange,onValueChange,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,refresh,removeCell,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,selectAll,setFocus,setLabelPhaseColor,setPhaseColor,setPhaseColor,setTo,setTo,stage_mouseMoveHandler,stage_mouseMoveHandler,textFieldScrollHandler,textInputHandler,thumb_mouseDownHandler,thumb_mouseDownHandler,track_mouseDownHandler,track_mouseDownHandler,update,update,update,update,update,updateCell,updateCells,updateChanges,updateChanges,updateChanges,updateContent,updateFlag,updateHtmlText,updateLabel,updateLabel,updateLayout,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updateScroll,updateScroll,updateSelected,updateSelected,updateSelected,updateText,updateText,updateText,updateThumb,updateThumb,updateType,viewSkin"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 选择器控件
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.controls:GAlert">
         <apiName>GAlert</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GAlert,gear.gui.controls.GAlert,CANCEL,MANUAL,NO,NONE,OK,POLLED,YES,_appender,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowDownSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_arrowUpSkin,_barSkin,_bgSkin,_bgSkin,_bgSkin,_bitmap,_bitmapData,_borderSkin,_borderSkin,_buttons,_cell,_cellHeight,_cells,_changes,_changes,_changes,_content,_content,_context,_direction,_direction,_down_btn,_down_btn,_down_btn,_down_btn,_editable,_edlim,_flag,_group,_hgap,_icon,_icon,_icon,_label,_label,_label,_label,_label,_label,_label,_list,_lock,_lockPhase,_max,_max,_max,_max,_max,_maxLines,_min,_min,_min,_min,_mode,_model,_model,_model,_next_btn,_onChange,_onClick,_onEnter,_onValueChange,_onValueChange,_pageSize,_pageSize,_phase,_phase,_phase,_phase,_phase,_phase,_phaseColor,_phaseColor,_position,_position,_prev_btn,_repeatDelay,_repeatDelay,_scale9Grid,_scrollBar,_scrollRect,_selected,_selectedIndex,_selectedIndex,_selected,_skin,_skin,_skin,_step,_step,_step,_text,_text,_textAlignIcon,_textField,_textField,_textField,_textFormat,_textInput,_textInput,_textInput,_thumbIcon,_thumbIcon,_thumbScrollOffset,_thumbScrollOffset,_thumbSkin,_thumbSkin,_thumb_btn,_thumb_btn,_trackSkin,_trackSkin,_trackSkin,_track_btn,_track_btn,_up_btn,_up_btn,_up_btn,_up_btn,_vScrollBar,_vScrollBar,_vScrollBar,_value,_value,_value,_vgap,barSkin,bitmapData,displayAsPassword,editable,flag,group,icon,icon,icon,label,label,lockPhase,maxLines,model,model,model,onChange,onClick,onEnter,onValueChange,onValueChange,phase,selected,selected,selectedIndex,selectedIndex,selection,skin,skin,skin,styleSheet,text,text,text,text,text,text,textFieldFilters,trackSkin,value,value,addCell,append,appendGroup,appendHtmlText,cellMouseDownHandler,clear,clear,clear,clickHandler,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,create,focusHandler,focusHandler,getFormat,keyUpHandler,mouseHandler,mouseHandler,mouseHandler,mouseUpHandler,mouseUpHandler,mouseWheelHandler,moveCells,onArrowClick,onArrowClick,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onEnabled,onHide,onHide,onModelChange,onModelChange,onModelChange,onNextClick,onPrevClick,onSelect,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onShow,onValueChange,onValueChange,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,preinit,refresh,removeCell,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,resize,selectAll,setFocus,setLabelPhaseColor,setPhaseColor,setPhaseColor,setTo,setTo,stage_mouseMoveHandler,stage_mouseMoveHandler,textFieldScrollHandler,textInputHandler,thumb_mouseDownHandler,thumb_mouseDownHandler,track_mouseDownHandler,track_mouseDownHandler,update,update,update,update,update,updateCell,updateCells,updateChanges,updateChanges,updateChanges,updateContent,updateFlag,updateHtmlText,updateLabel,updateLabel,updateLayout,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updatePhase,updateScroll,updateScroll,updateSelected,updateSelected,updateSelected,updateText,updateText,updateText,updateThumb,updateThumb,updateType,viewSkin"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.containers:GPanel</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.containers:GPanel"/>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.gui.core">
      <apiName>gear.gui.core</apiName>
      <apiDetail/>
      <apiClassifier id="gear.gui.core:GBase">
         <apiName>GBase</apiName>
         <shortdesc>
	 控件基类
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130110
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GBase,gear.gui.core.GBase,AUTO_HEIGHT,AUTO_SIZE,AUTO_WIDTH,BEVEL_BOTTOM_LEFT,BEVEL_BOTTOM_RGIHT,BEVEL_TOP_LEFT,BEVEL_TOP_RIGHT,BLACK,BLUE,BOTTOM_CENTER,BOTTOM_LEFT,BOTTOM_RIGHT,CENTER,CENTER,CYAN,DISABLED,DOWN,FIT_HEIGHT,FIT_SIZE,FIT_WIDTH,FOCUS,FULL,GRAY,GREEN,LEFT_BOTTOM,LEFT_CENTER,LEFT_TOP,LIGHT_BLUE,LIGHT_GREEN,LIGHT_RED,LIGHT_YELLOW,NONE,NONE,ORANGE,OVER,RED,RIGHT_BOTTOM,RIGHT_CENTER,RIGHT_TOP,SCALE,SELECTED_DISABLED,SELECTED_DOWN,SELECTED_OVER,SELECTED_UP,TOP_CENTER,TOP_LEFT,TOP_RIGHT,UP,WHITE,YELLOW,_align,_autoSize,_bottom,_enabled,_events,_height,_horizontalCenter,_isRender,_isTop,_left,_maxHeight,_maxWidth,_minHeight,_minWidth,_padding,_parent,_renders,_right,_scaleMode,_sizeRender,_source,_top,_verticalCenter,_width,align,bottom,bottom,bottom,brightness,contrast,dist,enabled,hdist,height,horizontalCenter,hue,isEmpty,left,left,padding,right,right,right,saturation,scaleMode,source,top,top,vdist,verticalCenter,width,addEvent,addRender,addToStageHandler,clone,create,forceSize,getBy,hide,init,layout,layout,layoutTarget,moveTo,onEnabled,onHide,onShow,onStageResize,preinit,removeAllEvent,removeEvent,removedFromStageHandler,render,renderHandler,reset,resize,setAt,setMaxSize,setMinSize,setParent,setSize,show,stageResizeHandler,toString,toString"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>flash.display:Sprite</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 控件基类
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses>
                  <class id="gear.gui.bd:GBDPlayer"/>
                  <class id="gear.gui.bd:GBDFont"/>
                  <class id="gear.gui.cell:GCell"/>
                  <class id="gear.gui.containers:GScroller"/>
                  <class id="gear.gui.containers:GPanel"/>
                  <class id="gear.gui.controls:GStats"/>
                  <class id="gear.gui.controls:GGrid"/>
                  <class id="gear.gui.controls:GRichTextArea"/>
                  <class id="gear.gui.controls:GStar"/>
                  <class id="gear.gui.controls:GList"/>
                  <class id="gear.gui.controls:GLabel"/>
                  <class id="gear.gui.controls:GButtonBar"/>
                  <class id="gear.gui.controls:GColorChooser"/>
                  <class id="gear.gui.controls:GProgressBar"/>
                  <class id="gear.gui.controls:GIcon"/>
                  <class id="gear.gui.controls:GTextInput"/>
                  <class id="gear.gui.controls:GHScrollBar"/>
                  <class id="gear.gui.controls:GVScrollBar"/>
                  <class id="gear.gui.controls:GTextArea"/>
                  <class id="gear.gui.controls:GCheckBox"/>
                  <class id="gear.gui.controls:GButton"/>
                  <class id="gear.gui.controls:GSpinner"/>
                  <class id="gear.gui.controls:GStepper"/>
                  <class id="gear.gui.controls:GToggleBase"/>
                  <class id="gear.gui.controls:GSelector"/>
                  <class id="gear.gui.game:GBloodBar"/>
               </Subclasses>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.core:GAlign">
         <apiName>GAlign</apiName>
         <shortdesc>
	 对齐定义
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121217
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GAlign,gear.gui.core.GAlign,AUTO_HEIGHT,AUTO_SIZE,AUTO_WIDTH,BEVEL_BOTTOM_LEFT,BEVEL_BOTTOM_RGIHT,BEVEL_TOP_LEFT,BEVEL_TOP_RIGHT,BLACK,BLUE,BOTTOM_CENTER,BOTTOM_LEFT,BOTTOM_RIGHT,CENTER,CENTER,CYAN,DISABLED,DOWN,FIT_HEIGHT,FIT_SIZE,FIT_WIDTH,FOCUS,FULL,GRAY,GREEN,LEFT_BOTTOM,LEFT_CENTER,LEFT_TOP,LIGHT_BLUE,LIGHT_GREEN,LIGHT_RED,LIGHT_YELLOW,NONE,NONE,ORANGE,OVER,RED,RIGHT_BOTTOM,RIGHT_CENTER,RIGHT_TOP,SCALE,SELECTED_DISABLED,SELECTED_DOWN,SELECTED_OVER,SELECTED_UP,TOP_CENTER,TOP_LEFT,TOP_RIGHT,UP,WHITE,YELLOW,_align,_autoSize,_bottom,_enabled,_events,_height,_horizontalCenter,_isRender,_isTop,_left,_maxHeight,_maxWidth,_minHeight,_minWidth,_padding,_parent,_renders,_right,_scaleMode,_sizeRender,_source,_top,_verticalCenter,_width,align,bottom,bottom,bottom,brightness,contrast,dist,enabled,hdist,height,horizontalCenter,hue,isEmpty,left,left,padding,right,right,right,saturation,scaleMode,source,top,top,vdist,verticalCenter,width,addEvent,addRender,addToStageHandler,clone,create,forceSize,getBy,hide,init,layout,layout,layoutTarget,moveTo,onEnabled,onHide,onShow,onStageResize,preinit,removeAllEvent,removeEvent,removedFromStageHandler,render,renderHandler,reset,resize,setAt,setMaxSize,setMinSize,setParent,setSize,show,stageResizeHandler,toString,toString"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 对齐定义
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.core:GAutoSizeMode">
         <apiName>GAutoSizeMode</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GAutoSizeMode,gear.gui.core.GAutoSizeMode,AUTO_HEIGHT,AUTO_SIZE,AUTO_WIDTH,BEVEL_BOTTOM_LEFT,BEVEL_BOTTOM_RGIHT,BEVEL_TOP_LEFT,BEVEL_TOP_RIGHT,BLACK,BLUE,BOTTOM_CENTER,BOTTOM_LEFT,BOTTOM_RIGHT,CENTER,CENTER,CYAN,DISABLED,DOWN,FIT_HEIGHT,FIT_SIZE,FIT_WIDTH,FOCUS,FULL,GRAY,GREEN,LEFT_BOTTOM,LEFT_CENTER,LEFT_TOP,LIGHT_BLUE,LIGHT_GREEN,LIGHT_RED,LIGHT_YELLOW,NONE,NONE,ORANGE,OVER,RED,RIGHT_BOTTOM,RIGHT_CENTER,RIGHT_TOP,SCALE,SELECTED_DISABLED,SELECTED_DOWN,SELECTED_OVER,SELECTED_UP,TOP_CENTER,TOP_LEFT,TOP_RIGHT,UP,WHITE,YELLOW,_align,_autoSize,_bottom,_enabled,_events,_height,_horizontalCenter,_isRender,_isTop,_left,_maxHeight,_maxWidth,_minHeight,_minWidth,_padding,_parent,_renders,_right,_scaleMode,_sizeRender,_source,_top,_verticalCenter,_width,align,bottom,bottom,bottom,brightness,contrast,dist,enabled,hdist,height,horizontalCenter,hue,isEmpty,left,left,padding,right,right,right,saturation,scaleMode,source,top,top,vdist,verticalCenter,width"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.core:GScaleMode">
         <apiName>GScaleMode</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GScaleMode,gear.gui.core.GScaleMode,AUTO_HEIGHT,AUTO_SIZE,AUTO_WIDTH,BEVEL_BOTTOM_LEFT,BEVEL_BOTTOM_RGIHT,BEVEL_TOP_LEFT,BEVEL_TOP_RIGHT,BLACK,BLUE,BOTTOM_CENTER,BOTTOM_LEFT,BOTTOM_RIGHT,CENTER,CENTER,CYAN,DISABLED,DOWN,FIT_HEIGHT,FIT_SIZE,FIT_WIDTH,FOCUS,FULL,GRAY,GREEN,LEFT_BOTTOM,LEFT_CENTER,LEFT_TOP,LIGHT_BLUE,LIGHT_GREEN,LIGHT_RED,LIGHT_YELLOW,NONE,NONE,ORANGE,OVER,RED,RIGHT_BOTTOM,RIGHT_CENTER,RIGHT_TOP,SCALE,SELECTED_DISABLED,SELECTED_DOWN,SELECTED_OVER,SELECTED_UP,TOP_CENTER,TOP_LEFT,TOP_RIGHT,UP,WHITE,YELLOW,_align,_autoSize,_bottom,_enabled,_events,_height,_horizontalCenter,_isRender,_isTop,_left,_maxHeight,_maxWidth,_minHeight,_minWidth,_padding,_parent,_renders,_right,_scaleMode,_sizeRender,_source,_top,_verticalCenter,_width,align,bottom,bottom,bottom,brightness,contrast,dist,enabled,hdist,height,horizontalCenter,hue,isEmpty,left,left,padding,right,right,right,saturation,scaleMode,source,top,top,vdist,verticalCenter,width"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.core:GAlignLayout">
         <apiName>GAlignLayout</apiName>
         <shortdesc>
	 布局管理器
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121128
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GAlignLayout,gear.gui.core.GAlignLayout,addEvent,addRender,addToStageHandler,clone,create,forceSize,getBy,hide,init,layout,layout,layoutTarget,moveTo,onEnabled,onHide,onShow,onStageResize,preinit,removeAllEvent,removeEvent,removedFromStageHandler,render,renderHandler,reset,resize,setAt,setMaxSize,setMinSize,setParent,setSize,show,stageResizeHandler,toString,toString"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 布局管理器
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.core:GColor">
         <apiName>GColor</apiName>
         <shortdesc>
	 颜色
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130106
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GColor,gear.gui.core.GColor,AUTO_HEIGHT,AUTO_SIZE,AUTO_WIDTH,BEVEL_BOTTOM_LEFT,BEVEL_BOTTOM_RGIHT,BEVEL_TOP_LEFT,BEVEL_TOP_RIGHT,BLACK,BLUE,BOTTOM_CENTER,BOTTOM_LEFT,BOTTOM_RIGHT,CENTER,CENTER,CYAN,DISABLED,DOWN,FIT_HEIGHT,FIT_SIZE,FIT_WIDTH,FOCUS,FULL,GRAY,GREEN,LEFT_BOTTOM,LEFT_CENTER,LEFT_TOP,LIGHT_BLUE,LIGHT_GREEN,LIGHT_RED,LIGHT_YELLOW,NONE,NONE,ORANGE,OVER,RED,RIGHT_BOTTOM,RIGHT_CENTER,RIGHT_TOP,SCALE,SELECTED_DISABLED,SELECTED_DOWN,SELECTED_OVER,SELECTED_UP,TOP_CENTER,TOP_LEFT,TOP_RIGHT,UP,WHITE,YELLOW,_align,_autoSize,_bottom,_enabled,_events,_height,_horizontalCenter,_isRender,_isTop,_left,_maxHeight,_maxWidth,_minHeight,_minWidth,_padding,_parent,_renders,_right,_scaleMode,_sizeRender,_source,_top,_verticalCenter,_width,align,bottom,bottom,bottom,brightness,contrast,dist,enabled,hdist,height,horizontalCenter,hue,isEmpty,left,left,padding,right,right,right,saturation,scaleMode,source,top,top,vdist,verticalCenter,width"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 颜色
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.core:GAlignMode">
         <apiName>GAlignMode</apiName>
         <shortdesc>
	 0  1, 2, 3  4
	 5           9
	 6     8     10
	 7           11
	 12 13,14,15 16 
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121129
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GAlignMode,gear.gui.core.GAlignMode,AUTO_HEIGHT,AUTO_SIZE,AUTO_WIDTH,BEVEL_BOTTOM_LEFT,BEVEL_BOTTOM_RGIHT,BEVEL_TOP_LEFT,BEVEL_TOP_RIGHT,BLACK,BLUE,BOTTOM_CENTER,BOTTOM_LEFT,BOTTOM_RIGHT,CENTER,CENTER,CYAN,DISABLED,DOWN,FIT_HEIGHT,FIT_SIZE,FIT_WIDTH,FOCUS,FULL,GRAY,GREEN,LEFT_BOTTOM,LEFT_CENTER,LEFT_TOP,LIGHT_BLUE,LIGHT_GREEN,LIGHT_RED,LIGHT_YELLOW,NONE,NONE,ORANGE,OVER,RED,RIGHT_BOTTOM,RIGHT_CENTER,RIGHT_TOP,SCALE,SELECTED_DISABLED,SELECTED_DOWN,SELECTED_OVER,SELECTED_UP,TOP_CENTER,TOP_LEFT,TOP_RIGHT,UP,WHITE,YELLOW,_align,_autoSize,_bottom,_enabled,_events,_height,_horizontalCenter,_isRender,_isTop,_left,_maxHeight,_maxWidth,_minHeight,_minWidth,_padding,_parent,_renders,_right,_scaleMode,_sizeRender,_source,_top,_verticalCenter,_width,align,bottom,bottom,bottom,brightness,contrast,dist,enabled,hdist,height,horizontalCenter,hue,isEmpty,left,left,padding,right,right,right,saturation,scaleMode,source,top,top,vdist,verticalCenter,width"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 0  1, 2, 3  4
	 5           9
	 6     8     10
	 7           11
	 12 13,14,15 16 
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.core:GAdjustColor">
         <apiName>GAdjustColor</apiName>
         <shortdesc>
	 亮度,对比度,饱和度,色相
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121212
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GAdjustColor,gear.gui.core.GAdjustColor,AUTO_HEIGHT,AUTO_SIZE,AUTO_WIDTH,BEVEL_BOTTOM_LEFT,BEVEL_BOTTOM_RGIHT,BEVEL_TOP_LEFT,BEVEL_TOP_RIGHT,BLACK,BLUE,BOTTOM_CENTER,BOTTOM_LEFT,BOTTOM_RIGHT,CENTER,CENTER,CYAN,DISABLED,DOWN,FIT_HEIGHT,FIT_SIZE,FIT_WIDTH,FOCUS,FULL,GRAY,GREEN,LEFT_BOTTOM,LEFT_CENTER,LEFT_TOP,LIGHT_BLUE,LIGHT_GREEN,LIGHT_RED,LIGHT_YELLOW,NONE,NONE,ORANGE,OVER,RED,RIGHT_BOTTOM,RIGHT_CENTER,RIGHT_TOP,SCALE,SELECTED_DISABLED,SELECTED_DOWN,SELECTED_OVER,SELECTED_UP,TOP_CENTER,TOP_LEFT,TOP_RIGHT,UP,WHITE,YELLOW,_align,_autoSize,_bottom,_enabled,_events,_height,_horizontalCenter,_isRender,_isTop,_left,_maxHeight,_maxWidth,_minHeight,_minWidth,_padding,_parent,_renders,_right,_scaleMode,_sizeRender,_source,_top,_verticalCenter,_width,align,bottom,bottom,bottom,brightness,contrast,dist,enabled,hdist,height,horizontalCenter,hue,isEmpty,left,left,padding,right,right,right,saturation,scaleMode,source,top,top,vdist,verticalCenter,width,addEvent,addRender,addToStageHandler,clone,create,forceSize,getBy,hide,init,layout,layout,layoutTarget,moveTo,onEnabled,onHide,onShow,onStageResize,preinit,removeAllEvent,removeEvent,removedFromStageHandler,render,renderHandler,reset,resize,setAt,setMaxSize,setMinSize,setParent,setSize,show,stageResizeHandler,toString,toString"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 亮度,对比度,饱和度,色相
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.core:GPhaseColor">
         <apiName>GPhaseColor</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121205
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GPhaseColor,gear.gui.core.GPhaseColor,addEvent,addRender,addToStageHandler,clone,create,forceSize,getBy,hide,init,layout,layout,layoutTarget,moveTo,onEnabled,onHide,onShow,onStageResize,preinit,removeAllEvent,removeEvent,removedFromStageHandler,render,renderHandler,reset,resize,setAt,setMaxSize,setMinSize,setParent,setSize,show,stageResizeHandler,toString,toString"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.core:GPadding">
         <apiName>GPadding</apiName>
         <shortdesc>
	 内边距
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121205
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GPadding,gear.gui.core.GPadding,AUTO_HEIGHT,AUTO_SIZE,AUTO_WIDTH,BEVEL_BOTTOM_LEFT,BEVEL_BOTTOM_RGIHT,BEVEL_TOP_LEFT,BEVEL_TOP_RIGHT,BLACK,BLUE,BOTTOM_CENTER,BOTTOM_LEFT,BOTTOM_RIGHT,CENTER,CENTER,CYAN,DISABLED,DOWN,FIT_HEIGHT,FIT_SIZE,FIT_WIDTH,FOCUS,FULL,GRAY,GREEN,LEFT_BOTTOM,LEFT_CENTER,LEFT_TOP,LIGHT_BLUE,LIGHT_GREEN,LIGHT_RED,LIGHT_YELLOW,NONE,NONE,ORANGE,OVER,RED,RIGHT_BOTTOM,RIGHT_CENTER,RIGHT_TOP,SCALE,SELECTED_DISABLED,SELECTED_DOWN,SELECTED_OVER,SELECTED_UP,TOP_CENTER,TOP_LEFT,TOP_RIGHT,UP,WHITE,YELLOW,_align,_autoSize,_bottom,_enabled,_events,_height,_horizontalCenter,_isRender,_isTop,_left,_maxHeight,_maxWidth,_minHeight,_minWidth,_padding,_parent,_renders,_right,_scaleMode,_sizeRender,_source,_top,_verticalCenter,_width,align,bottom,bottom,bottom,brightness,contrast,dist,enabled,hdist,height,horizontalCenter,hue,isEmpty,left,left,padding,right,right,right,saturation,scaleMode,source,top,top,vdist,verticalCenter,width"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 内边距
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.core:GPhase">
         <apiName>GPhase</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121205
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GPhase,gear.gui.core.GPhase,AUTO_HEIGHT,AUTO_SIZE,AUTO_WIDTH,BEVEL_BOTTOM_LEFT,BEVEL_BOTTOM_RGIHT,BEVEL_TOP_LEFT,BEVEL_TOP_RIGHT,BLACK,BLUE,BOTTOM_CENTER,BOTTOM_LEFT,BOTTOM_RIGHT,CENTER,CENTER,CYAN,DISABLED,DOWN,FIT_HEIGHT,FIT_SIZE,FIT_WIDTH,FOCUS,FULL,GRAY,GREEN,LEFT_BOTTOM,LEFT_CENTER,LEFT_TOP,LIGHT_BLUE,LIGHT_GREEN,LIGHT_RED,LIGHT_YELLOW,NONE,NONE,ORANGE,OVER,RED,RIGHT_BOTTOM,RIGHT_CENTER,RIGHT_TOP,SCALE,SELECTED_DISABLED,SELECTED_DOWN,SELECTED_OVER,SELECTED_UP,TOP_CENTER,TOP_LEFT,TOP_RIGHT,UP,WHITE,YELLOW,_align,_autoSize,_bottom,_enabled,_events,_height,_horizontalCenter,_isRender,_isTop,_left,_maxHeight,_maxWidth,_minHeight,_minWidth,_padding,_parent,_renders,_right,_scaleMode,_sizeRender,_source,_top,_verticalCenter,_width,align,bottom,bottom,bottom,brightness,contrast,dist,enabled,hdist,height,horizontalCenter,hue,isEmpty,left,left,padding,right,right,right,saturation,scaleMode,source,top,top,vdist,verticalCenter,width"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.gui.game">
      <apiName>gear.gui.game</apiName>
      <apiDetail/>
      <apiClassifier id="gear.gui.game:GBloodBar">
         <apiName>GBloodBar</apiName>
         <shortdesc>
	 血条控件
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121212
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GBloodBar,gear.gui.game.GBloodBar,_autoHide,_barSkin,_ease,_fade,_hide,_isSub,_model,_oldBarSkin,_trackSkin,autoHide,color,model,checkFade,create,hideWait,preinit,resetBars,resetFade,reset,resize"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.core:GBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 血条控件
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.gui.group">
      <apiName>gear.gui.group</apiName>
      <apiDetail/>
      <apiClassifier id="gear.gui.group:GToggleGroup">
         <apiName>GToggleGroup</apiName>
         <shortdesc>
	 双模组
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130106
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GToggleGroup,gear.gui.group.GToggleGroup,_enabled,_list,_onChange,_selectedIndex,enabled,onChange,selectedIndex,add,selected"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 双模组
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.gui.model">
      <apiName>gear.gui.model</apiName>
      <apiDetail/>
      <apiClassifier id="gear.gui.model:GRangeModel">
         <apiName>GRangeModel</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GRangeModel,gear.gui.model.GRangeModel,ADDED,REMOVED,RESET,UPDATE,_change,_index,_list,_max,_min,_oldPercent,_oldValue,_onChange,_percent,_source,_state,_value,_zeroPercent,hasNext,index,length,max,min,oldPercent,oldValue,onChange,onChange,percent,source,state,value,zeroPercenr,addAt,add,add,change,clear,getAt,removeAt,removeOnChange,remove,setAt,setTo,shift,update"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses>
                  <class id="gear.net:GLoadModel"/>
               </Subclasses>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.model:GListModel">
         <apiName>GListModel</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GListModel,gear.gui.model.GListModel,ADDED,REMOVED,RESET,UPDATE,_change,_index,_list,_max,_min,_oldPercent,_oldValue,_onChange,_percent,_source,_state,_value,_zeroPercent,hasNext,index,length,max,min,oldPercent,oldValue,onChange,onChange,percent,source,state,value,zeroPercenr,addAt,add,add,change,clear,getAt,removeAt,removeOnChange,remove,setAt,setTo,shift,update"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.model:GChangeList">
         <apiName>GChangeList</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GChangeList,gear.gui.model.GChangeList,ADDED,REMOVED,RESET,UPDATE,_change,_index,_list,_max,_min,_oldPercent,_oldValue,_onChange,_percent,_source,_state,_value,_zeroPercent,hasNext,index,length,max,min,oldPercent,oldValue,onChange,onChange,percent,source,state,value,zeroPercenr,addAt,add,add,change,clear,getAt,removeAt,removeOnChange,remove,setAt,setTo,shift,update"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.model:GChange">
         <apiName>GChange</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GChange,gear.gui.model.GChange,ADDED,REMOVED,RESET,UPDATE,_change,_index,_list,_max,_min,_oldPercent,_oldValue,_onChange,_percent,_source,_state,_value,_zeroPercent,hasNext,index,length,max,min,oldPercent,oldValue,onChange,onChange,percent,source,state,value,zeroPercenr"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.model:GBoundedRangeModel">
         <apiName>GBoundedRangeModel</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords" content="GBoundedRangeModel,gear.gui.model.GBoundedRangeModel"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.gui.skin.theme">
      <apiName>gear.gui.skin.theme</apiName>
      <apiDetail/>
      <apiClassifier id="gear.gui.skin.theme:IGTheme">
         <apiName>IGTheme</apiName>
         <shortdesc>
	 皮肤主题接口
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130110
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="IGTheme,gear.gui.skin.theme.IGTheme,buttonSkin,buttonSkin,cellSkin,cellSkin,checkBoxIcon,checkBoxIcon,emptySkin,emptySkin,hScrollBarArrowDownSkin,hScrollBarArrowDownSkin,hScrollBarArrowUpSkin,hScrollBarArrowUpSkin,hScrollBarThumbIcon,hScrollBarThumbIcon,hScrollBarThumbSkin,hScrollBarThumbSkin,hScrollBarTrackSkin,hScrollBarTrackSkin,leftArrowIcon,leftArrowIcon,listSkin,listSkin,modalSkin,modalSkin,panelBgSkin,panelBgSkin,progressBarBarSkin,progressBarBarSkin,progressBarTrackSkin,progressBarTrackSkin,radioButtonIcon,radioButtonIcon,rightArrowIcon,rightArrowIcon,textAreaBorderSkin,textAreaBorderSkin,textInputBorderSkin,textInputBorderSkin,toggleButtonSkin,toggleButtonSkin,vScrollBarArrowDownSkin,vScrollBarArrowDownSkin,vScrollBarArrowUpSkin,vScrollBarArrowUpSkin,vScrollBarThumbIcon,vScrollBarThumbIcon,vScrollBarThumbSkin,vScrollBarThumbSkin,vScrollBarTrackSkin,vScrollBarTrackSkin"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiInterface/>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier/>
            </apiClassifierDef>
            <apiDesc>
	 皮肤主题接口
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id=""/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors>
                  <Implementor id="gear.gui.skin.theme:GASTheme"/>
               </Implementors>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.skin.theme:GASTheme">
         <apiName>GASTheme</apiName>
         <shortdesc>
	 AS3主题皮肤
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121206 
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GASTheme,gear.gui.skin.theme.GASTheme,buttonSkin,buttonSkin,cellSkin,cellSkin,checkBoxIcon,checkBoxIcon,emptySkin,emptySkin,hScrollBarArrowDownSkin,hScrollBarArrowDownSkin,hScrollBarArrowUpSkin,hScrollBarArrowUpSkin,hScrollBarThumbIcon,hScrollBarThumbIcon,hScrollBarThumbSkin,hScrollBarThumbSkin,hScrollBarTrackSkin,hScrollBarTrackSkin,leftArrowIcon,leftArrowIcon,listSkin,listSkin,modalSkin,modalSkin,panelBgSkin,panelBgSkin,progressBarBarSkin,progressBarBarSkin,progressBarTrackSkin,progressBarTrackSkin,radioButtonIcon,radioButtonIcon,rightArrowIcon,rightArrowIcon,textAreaBorderSkin,textAreaBorderSkin,textInputBorderSkin,textInputBorderSkin,toggleButtonSkin,toggleButtonSkin,vScrollBarArrowDownSkin,vScrollBarArrowDownSkin,vScrollBarArrowUpSkin,vScrollBarArrowUpSkin,vScrollBarThumbIcon,vScrollBarThumbIcon,vScrollBarThumbSkin,vScrollBarThumbSkin,vScrollBarTrackSkin,vScrollBarTrackSkin"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseInterface>gear.gui.skin.theme:IGTheme</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 AS3主题皮肤
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.gui.skin.theme:IGTheme"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.gui.skin">
      <apiName>gear.gui.skin</apiName>
      <apiDetail/>
      <apiClassifier id="gear.gui.skin:IGSkin">
         <apiName>IGSkin</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121205
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="IGSkin,gear.gui.skin.IGSkin,_bitmap,_bitmap,_height,_height,_mask,_phase,_phase,_scale9Grid,_scale9Grid,_selected,_selected,_source,_source,_target,_target,_width,_width,height,height,height,name,name,name,phase,phase,phase,scale9Grid,scale9Grid,scale9Grid,selected,selected,selected,width,width,width,x,x,x,y,y,y,addTo,addTo,addTo,clone,clone,clone,moveTo,moveTo,moveTo,remove,remove,remove,setAt,setAt,setAt,setSize,setSize,setSize,update,update"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiInterface/>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier/>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id=""/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors>
                  <Implementor id="gear.gui.skin:GMaskSkin"/>
                  <Implementor id="gear.gui.skin:GPhaseSkin"/>
               </Implementors>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.skin:GProgressIndeterminateSkin">
         <apiName>GProgressIndeterminateSkin</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GProgressIndeterminateSkin,gear.gui.skin.GProgressIndeterminateSkin"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.skin:GPhaseSkin</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.skin:GPhaseSkin"/>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.skin:GMaskSkin">
         <apiName>GMaskSkin</apiName>
         <shortdesc>
	 遮罩皮肤
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121205
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GMaskSkin,gear.gui.skin.GMaskSkin,_bitmap,_bitmap,_height,_height,_mask,_phase,_phase,_scale9Grid,_scale9Grid,_selected,_selected,_source,_source,_target,_target,_width,_width,height,height,height,name,name,name,phase,phase,phase,scale9Grid,scale9Grid,scale9Grid,selected,selected,selected,width,width,width,x,x,x,y,y,y,addTo,addTo,addTo,clone,clone,clone,moveTo,moveTo,moveTo,remove,remove,remove,setAt,setAt,setAt,setSize,setSize,setSize,update,update"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.gui.skin:IGSkin</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 遮罩皮肤
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.gui.skin:IGSkin"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.gui.skin:GPhaseSkin">
         <apiName>GPhaseSkin</apiName>
         <shortdesc>
	 位图阶段皮肤
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121205
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GPhaseSkin,gear.gui.skin.GPhaseSkin,_bitmap,_bitmap,_height,_height,_mask,_phase,_phase,_scale9Grid,_scale9Grid,_selected,_selected,_source,_source,_target,_target,_width,_width,height,height,height,name,name,name,phase,phase,phase,scale9Grid,scale9Grid,scale9Grid,selected,selected,selected,width,width,width,x,x,x,y,y,y,addTo,addTo,addTo,clone,clone,clone,moveTo,moveTo,moveTo,remove,remove,remove,setAt,setAt,setAt,setSize,setSize,setSize,update,update"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.gui.skin:IGSkin</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 位图阶段皮肤
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.gui.skin:IGSkin"/>
               </Implements>
               <Subclasses>
                  <class id="gear.gui.skin:GProgressIndeterminateSkin"/>
               </Subclasses>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.gui.utils">
      <apiName>gear.gui.utils</apiName>
      <apiDetail/>
      <apiClassifier id="gear.gui.utils:GUIUtil">
         <apiName>GUIUtil</apiName>
         <shortdesc>
	 UI管理器
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130309
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GUIUtil,gear.gui.utils.GUIUtil,SHADOW,defaultCSS,defaultFontSize,defaultFont,stage,theme,tops,url,atParent,calcTotal,cloneSkin,getEdgeFilters,getInputTextField,getOffset,getTextField,getTextFormat,hitTest,init,replace,setFullScreen"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 UI管理器
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.gui">
      <apiName>gear.gui</apiName>
      <apiDetail/>
      <apiClassifier id="gear.gui:GLoadMonitor">
         <apiName>GLoadMonitor</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GLoadMonitor,gear.gui.GLoadMonitor,_label,_model,_time,_total_pb,model"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.gui.containers:GPanel</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.containers:GPanel"/>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.key">
      <apiName>gear.key</apiName>
      <apiDetail/>
      <apiClassifier id="gear.key:HotKeyData">
         <apiName>HotKeyData</apiName>
         <shortdesc>
	 热键定义
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20111201
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="HotKeyData,gear.key.HotKeyData,KEY_DOWN,KEY_UP,NONE,active,active,hasKeyDown,isKeyDown,keyCode,keyCode,lastKey,time,clear,convertKeyCode,getActive,isKeyDown,keyDownFliter,onKeyDown,onKeyUp,reset,reset,setActive,setHotKey"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 热键定义
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.key:IKeyControl">
         <apiName>IKeyControl</apiName>
         <shortdesc>
	 热键控制接口
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121014
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="IKeyControl,gear.key.IKeyControl,clear,convertKeyCode,getActive,isKeyDown,keyDownFliter,onKeyDown,onKeyUp,reset,reset,setActive,setHotKey"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiInterface/>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier/>
            </apiClassifierDef>
            <apiDesc>
	 热键控制接口
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id=""/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.key:KeyData">
         <apiName>KeyData</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>Administrator
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="KeyData,gear.key.KeyData,KEY_DOWN,KEY_UP,NONE,active,active,hasKeyDown,isKeyDown,keyCode,keyCode,lastKey,time,clear,convertKeyCode,getActive,isKeyDown,keyDownFliter,onKeyDown,onKeyUp,reset,reset,setActive,setHotKey"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.key:GHotKey">
         <apiName>GHotKey</apiName>
         <shortdesc>
	 热键控制
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121217
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GHotKey,gear.key.GHotKey,KEY_DOWN,KEY_UP,NONE,active,active,hasKeyDown,isKeyDown,keyCode,keyCode,lastKey,time,clear,convertKeyCode,getActive,isKeyDown,keyDownFliter,onKeyDown,onKeyUp,reset,reset,setActive,setHotKey"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 热键控制
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.log4a">
      <apiName>gear.log4a</apiName>
      <apiDetail/>
      <apiClassifier id="gear.log4a:GLevel">
         <apiName>GLevel</apiName>
         <shortdesc>
	 日志层级
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20101015
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GLevel,gear.log4a.GLevel,ALL_LEVEL,DEBUG_LEVEL,ERROR_LEVEL,FATAL_LEVEL,INFO_LEVEL,OFF_LEVEL,WARN_LEVEL,_close_btn,_commond_ti,_debug_ta,_debugger,_formatter,_run_btn,_styleSheet,level,message,name,styleSheet,timestamp,value,addAppender,append,append,append,append,compareTo,debug,debug,debug,error,fatal,format,format,format,format,info,initEvent,initView,keyDownHandler,keyUpHandler,onRun,onShow,setLevel,toString,warn"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 日志层级
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.log4a:GCSSLogFormatter">
         <apiName>GCSSLogFormatter</apiName>
         <shortdesc>
	 样式表日志格式化
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130116
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GCSSLogFormatter,gear.log4a.GCSSLogFormatter,ALL_LEVEL,DEBUG_LEVEL,ERROR_LEVEL,FATAL_LEVEL,INFO_LEVEL,OFF_LEVEL,WARN_LEVEL,_close_btn,_commond_ti,_debug_ta,_debugger,_formatter,_run_btn,_styleSheet,level,message,name,styleSheet,timestamp,value,addAppender,append,append,append,append,compareTo,debug,debug,debug,error,fatal,format,format,format,format,info,initEvent,initView,keyDownHandler,keyUpHandler,onRun,onShow,setLevel,toString,warn"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.log4a:IGLogFormatter</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 样式表日志格式化
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.log4a:IGLogFormatter"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.log4a:IGAppender">
         <apiName>IGAppender</apiName>
         <shortdesc>
	 日志输出源接口
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20101015
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="IGAppender,gear.log4a.IGAppender,addAppender,append,append,append,append,compareTo,debug,debug,debug,error,fatal,format,format,format,format,info,initEvent,initView,keyDownHandler,keyUpHandler,onRun,onShow,setLevel,toString,warn"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiInterface/>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier/>
            </apiClassifierDef>
            <apiDesc>
	 日志输出源接口
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id=""/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors>
                  <Implementor id="gear.log4a:GAppender"/>
                  <Implementor id="gear.log4a:GUIAppender"/>
               </Implementors>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.log4a:GLogData">
         <apiName>GLogData</apiName>
         <shortdesc>
	 日志数据
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130106
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GLogData,gear.log4a.GLogData,ALL_LEVEL,DEBUG_LEVEL,ERROR_LEVEL,FATAL_LEVEL,INFO_LEVEL,OFF_LEVEL,WARN_LEVEL,_close_btn,_commond_ti,_debug_ta,_debugger,_formatter,_run_btn,_styleSheet,level,message,name,styleSheet,timestamp,value,addAppender,append,append,append,append,compareTo,debug,debug,debug,error,fatal,format,format,format,format,info,initEvent,initView,keyDownHandler,keyUpHandler,onRun,onShow,setLevel,toString,warn"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 日志数据
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.log4a:GSimpleDebuger">
         <apiName>GSimpleDebuger</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20110916
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GSimpleDebuger,gear.log4a.GSimpleDebuger,addAppender,append,append,append,append,compareTo,debug,debug,debug,error,fatal,format,format,format,format,info,initEvent,initView,keyDownHandler,keyUpHandler,onRun,onShow,setLevel,toString,warn"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.log4a:IGDebugger</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.log4a:IGDebugger"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.log4a:GUIAppender">
         <apiName>GUIAppender</apiName>
         <shortdesc>
	 UI日志输出源
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130307
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GUIAppender,gear.log4a.GUIAppender,ALL_LEVEL,DEBUG_LEVEL,ERROR_LEVEL,FATAL_LEVEL,INFO_LEVEL,OFF_LEVEL,WARN_LEVEL,_close_btn,_commond_ti,_debug_ta,_debugger,_formatter,_run_btn,_styleSheet,level,message,name,styleSheet,timestamp,value,addAppender,append,append,append,append,compareTo,debug,debug,debug,error,fatal,format,format,format,format,info,initEvent,initView,keyDownHandler,keyUpHandler,onRun,onShow,setLevel,toString,warn"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.log4a:IGAppender</apiBaseInterface>
               <apiBaseClassifier>gear.gui.containers:GPanel</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 UI日志输出源
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.containers:GPanel"/>
                  <Inherit id="gear.gui.core:GBase"/>
                  <Inherit id="flash.display:Sprite"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.log4a:IGAppender"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.log4a:GTraceAppender">
         <apiName>GTraceAppender</apiName>
         <shortdesc>
	 trace日志输入源
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20101015
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GTraceAppender,gear.log4a.GTraceAppender,addAppender,append,append,append,append,compareTo,debug,debug,debug,error,fatal,format,format,format,format,info,initEvent,initView,keyDownHandler,keyUpHandler,onRun,onShow,setLevel,toString,warn"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.log4a:GAppender</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 trace日志输入源
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.log4a:GAppender"/>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.log4a:GAppender">
         <apiName>GAppender</apiName>
         <shortdesc>
	 日志输出源抽象类 
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121105
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GAppender,gear.log4a.GAppender,addAppender,append,append,append,append,compareTo,debug,debug,debug,error,fatal,format,format,format,format,info,initEvent,initView,keyDownHandler,keyUpHandler,onRun,onShow,setLevel,toString,warn"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.log4a:IGAppender</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 日志输出源抽象类 
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.log4a:IGAppender"/>
               </Implements>
               <Subclasses>
                  <class id="gear.log4a:GTraceAppender"/>
               </Subclasses>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.log4a:IGLogFormatter">
         <apiName>IGLogFormatter</apiName>
         <shortdesc>
	 日志格式化输出接口
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121105
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="IGLogFormatter,gear.log4a.IGLogFormatter,addAppender,append,append,append,append,compareTo,debug,debug,debug,error,fatal,format,format,format,format,info,initEvent,initView,keyDownHandler,keyUpHandler,onRun,onShow,setLevel,toString,warn"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiInterface/>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier/>
            </apiClassifierDef>
            <apiDesc>
	 日志格式化输出接口
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id=""/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors>
                  <Implementor id="gear.log4a:GCSSLogFormatter"/>
                  <Implementor id="gear.log4a:GSimpleLogFormatter"/>
               </Implementors>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.log4a:IGDebugger">
         <apiName>IGDebugger</apiName>
         <shortdesc>
	 调试器接口
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20110905
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="IGDebugger,gear.log4a.IGDebugger,addAppender,append,append,append,append,compareTo,debug,debug,debug,error,fatal,format,format,format,format,info,initEvent,initView,keyDownHandler,keyUpHandler,onRun,onShow,setLevel,toString,warn"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiInterface/>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier/>
            </apiClassifierDef>
            <apiDesc>
	 调试器接口
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id=""/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors>
                  <Implementor id="gear.log4a:GSimpleDebuger"/>
               </Implementors>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.log4a:GLogger">
         <apiName>GLogger</apiName>
         <shortdesc>
	 日志
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121025
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GLogger,gear.log4a.GLogger,addAppender,append,append,append,append,compareTo,debug,debug,debug,error,fatal,format,format,format,format,info,initEvent,initView,keyDownHandler,keyUpHandler,onRun,onShow,setLevel,toString,warn"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 日志
	 
	 </apiDesc>
            <example>
	              <codeblock rev="3.0"> 
	 GLogger使用示例:
	 GLogger.addAppender(new TraceAppender());
	 GLogger.setLevel(Level.INFO);
	 GLogger.debug("this is a debug!");
	 GLogger.info("this is a info!");
	 GLogger.warn("this is a warn!");
	 GLogger.error("this is a error!");
	 GLogger.fatal("this is a fatal!");
	 </codeblock> 
	           </example>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.log4a:GLogError">
         <apiName>GLogError</apiName>
         <shortdesc>
	 日志错误类
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20101012
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords" content="GLogError,gear.log4a.GLogError"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Error</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 日志错误类
	 
	 </apiDesc>
            <example>
	 throw new LogError("System Error");
	 </example>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Error"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.log4a:GSimpleLogFormatter">
         <apiName>GSimpleLogFormatter</apiName>
         <shortdesc>
	 简单日志格式化
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130116
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GSimpleLogFormatter,gear.log4a.GSimpleLogFormatter,addAppender,append,append,append,append,compareTo,debug,debug,debug,error,fatal,format,format,format,format,info,initEvent,initView,keyDownHandler,keyUpHandler,onRun,onShow,setLevel,toString,warn"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseInterface>gear.log4a:IGLogFormatter</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 简单日志格式化
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.log4a:IGLogFormatter"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.motion.easing">
      <apiName>gear.motion.easing</apiName>
      <apiDetail/>
      <apiClassifier id="gear.motion.easing:Linear">
         <apiName>Linear</apiName>
         <shortdesc/>
         <prolog>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="Linear,gear.motion.easing.Linear,easeInOut,easeInOut,easeInOut,easeInOut,easeInOut,easeInOut,easeIn,easeIn,easeIn,easeIn,easeIn,easeIn,easeNone,easeOut,easeOut,easeOut,easeOut,easeOut,easeOut"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.motion.easing:Cubic">
         <apiName>Cubic</apiName>
         <shortdesc/>
         <prolog>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="Cubic,gear.motion.easing.Cubic,easeInOut,easeInOut,easeInOut,easeInOut,easeInOut,easeInOut,easeIn,easeIn,easeIn,easeIn,easeIn,easeIn,easeNone,easeOut,easeOut,easeOut,easeOut,easeOut,easeOut"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.motion.easing:Sine">
         <apiName>Sine</apiName>
         <shortdesc/>
         <prolog>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="Sine,gear.motion.easing.Sine,easeInOut,easeInOut,easeInOut,easeInOut,easeInOut,easeInOut,easeIn,easeIn,easeIn,easeIn,easeIn,easeIn,easeNone,easeOut,easeOut,easeOut,easeOut,easeOut,easeOut"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.motion.easing:Quartic">
         <apiName>Quartic</apiName>
         <shortdesc/>
         <prolog>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="Quartic,gear.motion.easing.Quartic,easeInOut,easeInOut,easeInOut,easeInOut,easeInOut,easeInOut,easeIn,easeIn,easeIn,easeIn,easeIn,easeIn,easeNone,easeOut,easeOut,easeOut,easeOut,easeOut,easeOut"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.motion.easing:Quadratic">
         <apiName>Quadratic</apiName>
         <shortdesc/>
         <prolog>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="Quadratic,gear.motion.easing.Quadratic,easeInOut,easeInOut,easeInOut,easeInOut,easeInOut,easeInOut,easeIn,easeIn,easeIn,easeIn,easeIn,easeIn,easeNone,easeOut,easeOut,easeOut,easeOut,easeOut,easeOut"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.motion.easing:Quintic">
         <apiName>Quintic</apiName>
         <shortdesc/>
         <prolog>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="Quintic,gear.motion.easing.Quintic,easeInOut,easeInOut,easeInOut,easeInOut,easeInOut,easeInOut,easeIn,easeIn,easeIn,easeIn,easeIn,easeIn,easeNone,easeOut,easeOut,easeOut,easeOut,easeOut,easeOut"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.net">
      <apiName>gear.net</apiName>
      <apiDetail/>
      <apiClassifier id="gear.net:GLoadGroup">
         <apiName>GLoadGroup</apiName>
         <shortdesc>
	 加载组
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121108
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GLoadGroup,gear.net.GLoadGroup,BIN,COMPLETE,CSV,FAILED,GPK,JPG,JSON,LOADING,MAX,MP3,NONE,PLIST,PNG,PSD,SWF,WAITING,XLSX,XML,_list,bytesInfo,groups,isFinish,key,model,model,percent,speedInfo,add,adds,calcPercent,create,getBD,getByteArray,getClass,getCsvData,getGpkAMF,getGpkLBD,getGpkSBD,getGpk,getImg,getJsonObj,getKey,getMC,getMp3,getPlistOb,getSheet,getSound,getSprite,getType,getXML,load,load,loadNext,loadNext,onModelChange,reset,reset,startLoad"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 加载组
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.net:IGLoader">
         <apiName>IGLoader</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="IGLoader,gear.net.IGLoader,BIN,COMPLETE,CSV,FAILED,GPK,JPG,JSON,LOADING,MAX,MP3,NONE,PLIST,PNG,PSD,SWF,WAITING,XLSX,XML,_list,bytesInfo,groups,isFinish,key,model,model,percent,speedInfo"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiInterface/>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier/>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id=""/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.net:GLoadModel">
         <apiName>GLoadModel</apiName>
         <shortdesc>
	 加载模型
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121108
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GLoadModel,gear.net.GLoadModel,BIN,COMPLETE,CSV,FAILED,GPK,JPG,JSON,LOADING,MAX,MP3,NONE,PLIST,PNG,PSD,SWF,WAITING,XLSX,XML,_list,bytesInfo,groups,isFinish,key,model,model,percent,speedInfo,add,adds,calcPercent,create,getBD,getByteArray,getClass,getCsvData,getGpkAMF,getGpkLBD,getGpkSBD,getGpk,getImg,getJsonObj,getKey,getMC,getMp3,getPlistOb,getSheet,getSound,getSprite,getType,getXML,load,load,loadNext,loadNext,onModelChange,reset,reset,startLoad"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>gear.gui.model:GRangeModel</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 加载模型
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.gui.model:GRangeModel"/>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.net:GFileType">
         <apiName>GFileType</apiName>
         <shortdesc>
	 文件类型
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130305
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GFileType,gear.net.GFileType,BIN,COMPLETE,CSV,FAILED,GPK,JPG,JSON,LOADING,MAX,MP3,NONE,PLIST,PNG,PSD,SWF,WAITING,XLSX,XML,_list,bytesInfo,groups,isFinish,key,model,model,percent,speedInfo,add,adds,calcPercent,create,getBD,getByteArray,getClass,getCsvData,getGpkAMF,getGpkLBD,getGpkSBD,getGpk,getImg,getJsonObj,getKey,getMC,getMp3,getPlistOb,getSheet,getSound,getSprite,getType,getXML,load,load,loadNext,loadNext,onModelChange,reset,reset,startLoad"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 文件类型
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.net:GLoadUtil">
         <apiName>GLoadUtil</apiName>
         <shortdesc>
	 加载管理器
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121105
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GLoadUtil,gear.net.GLoadUtil,BIN,COMPLETE,CSV,FAILED,GPK,JPG,JSON,LOADING,MAX,MP3,NONE,PLIST,PNG,PSD,SWF,WAITING,XLSX,XML,_list,bytesInfo,groups,isFinish,key,model,model,percent,speedInfo,add,adds,calcPercent,create,getBD,getByteArray,getClass,getCsvData,getGpkAMF,getGpkLBD,getGpkSBD,getGpk,getImg,getJsonObj,getKey,getMC,getMp3,getPlistOb,getSheet,getSound,getSprite,getType,getXML,load,load,loadNext,loadNext,onModelChange,reset,reset,startLoad"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 加载管理器
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.net:GLoadState">
         <apiName>GLoadState</apiName>
         <shortdesc>
	 加载状态
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130116
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GLoadState,gear.net.GLoadState,BIN,COMPLETE,CSV,FAILED,GPK,JPG,JSON,LOADING,MAX,MP3,NONE,PLIST,PNG,PSD,SWF,WAITING,XLSX,XML,_list,bytesInfo,groups,isFinish,key,model,model,percent,speedInfo"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 加载状态
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.net:GLoadData">
         <apiName>GLoadData</apiName>
         <shortdesc>
	 加载数据
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121108
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GLoadData,gear.net.GLoadData,BIN,COMPLETE,CSV,FAILED,GPK,JPG,JSON,LOADING,MAX,MP3,NONE,PLIST,PNG,PSD,SWF,WAITING,XLSX,XML,_list,bytesInfo,groups,isFinish,key,model,model,percent,speedInfo,add,adds,calcPercent,create,getBD,getByteArray,getClass,getCsvData,getGpkAMF,getGpkLBD,getGpkSBD,getGpk,getImg,getJsonObj,getKey,getMC,getMp3,getPlistOb,getSheet,getSound,getSprite,getType,getXML,load,load,loadNext,loadNext,onModelChange,reset,reset,startLoad"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 加载数据
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="flash.events:EventDispatcher"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.particle.action">
      <apiName>gear.particle.action</apiName>
      <apiDetail/>
      <apiClassifier id="gear.particle.action:Age">
         <apiName>Age</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>Administrator
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="Age,gear.particle.action.Age,_easing,_priority,priority,addedToEmitter,removedFromEmitter,update,update,update,update,update"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.particle.action:ActionBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.particle.action:ActionBase"/>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.particle.action:Move">
         <apiName>Move</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>Administrator
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="Move,gear.particle.action.Move,addedToEmitter,removedFromEmitter,update,update,update,update,update"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.particle.action:ActionBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.particle.action:ActionBase"/>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.particle.action:RandomDrift">
         <apiName>RandomDrift</apiName>
         <shortdesc>
	 RandomDrift 随机飘动
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20111027
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="RandomDrift,gear.particle.action.RandomDrift,addedToEmitter,removedFromEmitter,update,update,update,update,update"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.particle.action:ActionBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 RandomDrift 随机飘动
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.particle.action:ActionBase"/>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.particle.action:IAction">
         <apiName>IAction</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20111027
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="IAction,gear.particle.action.IAction,addedToEmitter,removedFromEmitter,update,update,update,update,update"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiInterface/>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.particle.core:IBehaviour</apiBaseInterface>
               <apiBaseClassifier/>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface>
                  <Interface id="gear.particle.core:IBehaviour"/>
               </BaseInterface>
               <Inheritance>
                  <Inherit id=""/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.particle.core:IBehaviour"/>
               </Implements>
               <Subclasses/>
               <Implementors>
                  <Implementor id="gear.particle.action:ActionBase"/>
               </Implementors>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.particle.action:ActionBase">
         <apiName>ActionBase</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20111027
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="ActionBase,gear.particle.action.ActionBase,_easing,_priority,priority,addedToEmitter,removedFromEmitter,update,update,update,update,update"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.particle.action:IAction</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.particle.action:IAction"/>
               </Implements>
               <Subclasses>
                  <class id="gear.particle.action:Age"/>
                  <class id="gear.particle.action:Move"/>
                  <class id="gear.particle.action:RandomDrift"/>
                  <class id="gear.particle.zone:DeathZone"/>
               </Subclasses>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.particle.core">
      <apiName>gear.particle.core</apiName>
      <apiDetail/>
      <apiClassifier id="gear.particle.core:Emitter">
         <apiName>Emitter</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>Administrator
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="Emitter,gear.particle.core.Emitter,_actions,_buffer,_color,_counter,_ctf,_delay,_image,_inits,_isDead,_lifetime,_matrix,_offset,_oldColor,_oldX,_oldY,_output,_particles,_pool,_rotation,_running,_scale,_speedX,_speedY,_x,_y,age,collisionRadius,color,counter,energy,image,isDead,lifetime,mass,oldX,oldY,output,priority,rotation,running,scale,speedX,speedY,x,y,addAction,addInit,addedToEmitter,comparePriority,createParticle,getActionIndex,getInitIndex,moveTo,refresh,removedFromEmitter,render,reset,skipFrame,start,update"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.render:IGFrame</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.render:IGFrame"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.particle.core:IBehaviour">
         <apiName>IBehaviour</apiName>
         <shortdesc/>
         <prolog>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="IBehaviour,gear.particle.core.IBehaviour,_actions,_buffer,_color,_counter,_ctf,_delay,_image,_inits,_isDead,_lifetime,_matrix,_offset,_oldColor,_oldX,_oldY,_output,_particles,_pool,_rotation,_running,_scale,_speedX,_speedY,_x,_y,age,collisionRadius,color,counter,energy,image,isDead,lifetime,mass,oldX,oldY,output,priority,rotation,running,scale,speedX,speedY,x,y,addAction,addInit,addedToEmitter,comparePriority,createParticle,getActionIndex,getInitIndex,moveTo,refresh,removedFromEmitter,render,reset,skipFrame,start,update"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiInterface/>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier/>
            </apiClassifierDef>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id=""/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.particle.core:Particle">
         <apiName>Particle</apiName>
         <shortdesc/>
         <prolog>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="Particle,gear.particle.core.Particle,_actions,_buffer,_color,_counter,_ctf,_delay,_image,_inits,_isDead,_lifetime,_matrix,_offset,_oldColor,_oldX,_oldY,_output,_particles,_pool,_rotation,_running,_scale,_speedX,_speedY,_x,_y,age,collisionRadius,color,counter,energy,image,isDead,lifetime,mass,oldX,oldY,output,priority,rotation,running,scale,speedX,speedY,x,y,addAction,addInit,addedToEmitter,comparePriority,createParticle,getActionIndex,getInitIndex,moveTo,refresh,removedFromEmitter,render,reset,skipFrame,start,update"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.particle.core:BitmapDataRenderer">
         <apiName>BitmapDataRenderer</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>Administrator
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="BitmapDataRenderer,gear.particle.core.BitmapDataRenderer"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.particle.counter">
      <apiName>gear.particle.counter</apiName>
      <apiDetail/>
      <apiClassifier id="gear.particle.counter:ZeroCounter">
         <apiName>ZeroCounter</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20111027
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="ZeroCounter,gear.particle.counter.ZeroCounter,_rate,_rateInv,_running,_timeToNext,complete,complete,complete,running,running,running,resume,resume,resume,startEmitter,startEmitter,startEmitter,stop,stop,stop,updateEmitter,updateEmitter,updateEmitter"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.particle.counter:ICounter</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.particle.counter:ICounter"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.particle.counter:Steady">
         <apiName>Steady</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>Administrator
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="Steady,gear.particle.counter.Steady,_rate,_rateInv,_running,_timeToNext,complete,complete,complete,running,running,running,resume,resume,resume,startEmitter,startEmitter,startEmitter,stop,stop,stop,updateEmitter,updateEmitter,updateEmitter"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.particle.counter:ICounter</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.particle.counter:ICounter"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.particle.counter:ICounter">
         <apiName>ICounter</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>Administrator
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="ICounter,gear.particle.counter.ICounter,_rate,_rateInv,_running,_timeToNext,complete,complete,complete,running,running,running,resume,resume,resume,startEmitter,startEmitter,startEmitter,stop,stop,stop,updateEmitter,updateEmitter,updateEmitter"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiInterface/>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier/>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id=""/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors>
                  <Implementor id="gear.particle.counter:Steady"/>
                  <Implementor id="gear.particle.counter:ZeroCounter"/>
               </Implementors>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.particle.init">
      <apiName>gear.particle.init</apiName>
      <apiDetail/>
      <apiClassifier id="gear.particle.init:IInit">
         <apiName>IInit</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20111027
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="IInit,gear.particle.init.IInit,addedToEmitter,init,init,init,init,init,init,init,init,init,removedFromEmitter"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiInterface/>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.particle.core:IBehaviour</apiBaseInterface>
               <apiBaseClassifier/>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface>
                  <Interface id="gear.particle.core:IBehaviour"/>
               </BaseInterface>
               <Inheritance>
                  <Inherit id=""/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.particle.core:IBehaviour"/>
               </Implements>
               <Subclasses/>
               <Implementors>
                  <Implementor id="gear.particle.init:InitBase"/>
               </Implementors>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.particle.init:GPosition">
         <apiName>GPosition</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>Administrator
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GPosition,gear.particle.init.GPosition,_image,_max,_max,_max,_max,_min,_min,_min,_min,_priority,_zone,_zone,priority,addedToEmitter,init,init,init,init,init,init,init,init,init,removedFromEmitter"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.particle.init:InitBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.particle.init:InitBase"/>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.particle.init:Lifetime">
         <apiName>Lifetime</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>Administrator
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="Lifetime,gear.particle.init.Lifetime,_image,_max,_max,_max,_max,_min,_min,_min,_min,_priority,_zone,_zone,priority,addedToEmitter,init,init,init,init,init,init,init,init,init,removedFromEmitter"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.particle.init:InitBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.particle.init:InitBase"/>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.particle.init:SharedImage">
         <apiName>SharedImage</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>Administrator
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="SharedImage,gear.particle.init.SharedImage,_image,_max,_max,_max,_max,_min,_min,_min,_min,_priority,_zone,_zone,priority,addedToEmitter,init,init,init,init,init,init,init,init,init,removedFromEmitter"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.particle.init:InitBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.particle.init:InitBase"/>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.particle.init:GAlphaInit">
         <apiName>GAlphaInit</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130110
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GAlphaInit,gear.particle.init.GAlphaInit,_image,_max,_max,_max,_max,_min,_min,_min,_min,_priority,_zone,_zone,priority,addedToEmitter,init,init,init,init,init,init,init,init,init,removedFromEmitter"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.particle.init:InitBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.particle.init:InitBase"/>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.particle.init:GColorInit">
         <apiName>GColorInit</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>Administrator
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GColorInit,gear.particle.init.GColorInit,_image,_max,_max,_max,_max,_min,_min,_min,_min,_priority,_zone,_zone,priority,addedToEmitter,init,init,init,init,init,init,init,init,init,removedFromEmitter"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.particle.init:InitBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.particle.init:InitBase"/>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.particle.init:Velocity">
         <apiName>Velocity</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>Administrator
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="Velocity,gear.particle.init.Velocity,_image,_max,_max,_max,_max,_min,_min,_min,_min,_priority,_zone,_zone,priority,addedToEmitter,init,init,init,init,init,init,init,init,init,removedFromEmitter"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.particle.init:InitBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.particle.init:InitBase"/>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.particle.init:GScaleInit">
         <apiName>GScaleInit</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20111027
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GScaleInit,gear.particle.init.GScaleInit,_image,_max,_max,_max,_max,_min,_min,_min,_min,_priority,_zone,_zone,priority,addedToEmitter,init,init,init,init,init,init,init,init,init,removedFromEmitter"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>gear.particle.init:InitBase</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.particle.init:InitBase"/>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.particle.init:InitBase">
         <apiName>InitBase</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>Administrator
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="InitBase,gear.particle.init.InitBase,_image,_max,_max,_max,_max,_min,_min,_min,_min,_priority,_zone,_zone,priority,addedToEmitter,init,init,init,init,init,init,init,init,init,removedFromEmitter"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.particle.init:IInit</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.particle.init:IInit"/>
               </Implements>
               <Subclasses>
                  <class id="gear.particle.init:GPosition"/>
                  <class id="gear.particle.init:Lifetime"/>
                  <class id="gear.particle.init:SharedImage"/>
                  <class id="gear.particle.init:GAlphaInit"/>
                  <class id="gear.particle.init:GColorInit"/>
                  <class id="gear.particle.init:Velocity"/>
                  <class id="gear.particle.init:GScaleInit"/>
               </Subclasses>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.particle.shape">
      <apiName>gear.particle.shape</apiName>
      <apiDetail/>
      <apiClassifier id="gear.particle.shape:Ring">
         <apiName>Ring</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>Administrator
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="Ring,gear.particle.shape.Ring,_color,_color,_innerRadius,_matrix,_outerRadius,_radius,draw,draw"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>flash.display:Shape</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="flash.display:Shape"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.particle.shape:RadialDot">
         <apiName>RadialDot</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20111031
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="RadialDot,gear.particle.shape.RadialDot,_color,_color,_innerRadius,_matrix,_outerRadius,_radius,draw,draw"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>flash.display:Shape</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="flash.display:Shape"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.particle.zone">
      <apiName>gear.particle.zone</apiName>
      <apiDetail/>
      <apiClassifier id="gear.particle.zone:IZone">
         <apiName>IZone</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>Administrator
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="IZone,gear.particle.zone.IZone,collideParticle,collideParticle,collideParticle,collideParticle,contains,contains,contains,contains,getArea,getArea,getArea,getArea,getLocation,getLocation,getLocation,getLocation,setLengthAndNormal,update"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiInterface/>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier/>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id=""/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors>
                  <Implementor id="gear.particle.zone:LineZone"/>
                  <Implementor id="gear.particle.zone:PointZone"/>
                  <Implementor id="gear.particle.zone:RectZone"/>
               </Implementors>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.particle.zone:RectZone">
         <apiName>RectZone</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>Administrator
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="RectZone,gear.particle.zone.RectZone,_bottom,_end,_height,_left,_length,_normal,_parallel,_point,_right,_start,_top,_width,zoneIsSafe,zone,collideParticle,collideParticle,collideParticle,collideParticle,contains,contains,contains,contains,getArea,getArea,getArea,getArea,getLocation,getLocation,getLocation,getLocation,setLengthAndNormal,update"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.particle.zone:IZone</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.particle.zone:IZone"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.particle.zone:DeathZone">
         <apiName>DeathZone</apiName>
         <shortdesc/>
         <prolog>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="DeathZone,gear.particle.zone.DeathZone,_bottom,_end,_height,_left,_length,_normal,_parallel,_point,_right,_start,_top,_width,zoneIsSafe,zone,collideParticle,collideParticle,collideParticle,collideParticle,contains,contains,contains,contains,getArea,getArea,getArea,getArea,getLocation,getLocation,getLocation,getLocation,setLengthAndNormal,update"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>gear.particle.action:ActionBase</apiBaseClassifier>
            </apiClassifierDef>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="gear.particle.action:ActionBase"/>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.particle.zone:LineZone">
         <apiName>LineZone</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>Administrator
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="LineZone,gear.particle.zone.LineZone,_bottom,_end,_height,_left,_length,_normal,_parallel,_point,_right,_start,_top,_width,zoneIsSafe,zone,collideParticle,collideParticle,collideParticle,collideParticle,contains,contains,contains,contains,getArea,getArea,getArea,getArea,getLocation,getLocation,getLocation,getLocation,setLengthAndNormal,update"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.particle.zone:IZone</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.particle.zone:IZone"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.particle.zone:PointZone">
         <apiName>PointZone</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>Administrator
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="PointZone,gear.particle.zone.PointZone,_bottom,_end,_height,_left,_length,_normal,_parallel,_point,_right,_start,_top,_width,zoneIsSafe,zone,collideParticle,collideParticle,collideParticle,collideParticle,contains,contains,contains,contains,getArea,getArea,getArea,getArea,getLocation,getLocation,getLocation,getLocation,setLengthAndNormal,update"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.particle.zone:IZone</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.particle.zone:IZone"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.physic">
      <apiName>gear.physic</apiName>
      <apiDetail/>
      <apiClassifier id="gear.physic:Vector2D">
         <apiName>Vector2D</apiName>
         <shortdesc>
	 向量
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121029
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="Vector2D,gear.physic.Vector2D,angle,length,normal,x,y,copy,minusEquals,minus,plusEquals,plus,rotate,scaleEquals,scale,toString"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 向量
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.pool">
      <apiName>gear.pool</apiName>
      <apiDetail/>
      <apiClassifier id="gear.pool:ID">
         <apiName>ID</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="ID,gear.pool.ID,_free,_index,id,borrowObj,construct,dispose,free,returnObj"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.pool:GObjPool">
         <apiName>GObjPool</apiName>
         <shortdesc>
	 对象池
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130103
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GObjPool,gear.pool.GObjPool,borrowObj,construct,dispose,free,returnObj"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseInterface>gear.core:IDispose</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 对象池
	 
	 </apiDesc>
            <example>
	              <codeblock rev="3.0"> 
	 GObjPool对象池使用示例:
	 var pool:GObjPool=new GObjPool(Point);
	 var point:Point=pool.borrowObj(100,100);
	 trace(point.x,point.y);
	 pool.returnObj(point);
	 </codeblock>
	           </example>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.core:IDispose"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.render">
      <apiName>gear.render</apiName>
      <apiDetail/>
      <apiClassifier id="gear.render:GFrameRender">
         <apiName>GFrameRender</apiName>
         <shortdesc>
	 帧渲染控制器
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121107
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GFrameRender,gear.render.GFrameRender,count,delay,elapsed,instance,onLast,pause,running,stage,add,has,refresh,refresh,remove,render,reset"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 帧渲染控制器
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.render:GRenderCall">
         <apiName>GRenderCall</apiName>
         <shortdesc>
	 帧渲染回调
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121107
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GRenderCall,gear.render.GRenderCall,count,delay,elapsed,instance,onLast,pause,running,stage,add,has,refresh,refresh,remove,render,reset"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.render:IGFrame</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 帧渲染回调
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.render:IGFrame"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.render:IGFrame">
         <apiName>IGFrame</apiName>
         <shortdesc>
	 帧渲染器接口
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121107
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="IGFrame,gear.render.IGFrame,add,has,refresh,refresh,remove,render,reset"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiInterface/>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier/>
            </apiClassifierDef>
            <apiDesc>
	 帧渲染器接口
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id=""/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors>
                  <Implementor id="gear.particle.core:Emitter"/>
                  <Implementor id="gear.gui.bd:GBDPlayer"/>
                  <Implementor id="gear.render:GRenderCall"/>
                  <Implementor id="gear.gui.controls:GStats"/>
                  <Implementor id="gear.effect.ghost:Ghost"/>
               </Implementors>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
         <related-links>
            <link href="gear.render.xml#GFrameRender">
               <linktext>gear.render.GFrameRender</linktext>
            </link>
         </related-links>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.rpc">
      <apiName>gear.rpc</apiName>
      <apiDetail/>
      <apiClassifier id="gear.rpc:GRemotingService">
         <apiName>GRemotingService</apiName>
         <shortdesc>
	 Flash Remoting Client
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130124
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GRemotingService,gear.rpc.GRemotingService,INVALID_QUEST,TIME_OUT,args,endTime,method,params,prefix,timestamp,addCall,checkTimeout,merge,onResult,setTest,startPoll,stopPoll"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 Flash Remoting Client
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="flash.events:EventDispatcher"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.rpc:GAmf3Call">
         <apiName>GAmf3Call</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121025
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GAmf3Call,gear.rpc.GAmf3Call,INVALID_QUEST,TIME_OUT,args,endTime,method,params,prefix,timestamp,addCall,checkTimeout,merge,onResult,setTest,startPoll,stopPoll"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.socket">
      <apiName>gear.socket</apiName>
      <apiDetail/>
      <apiClassifier id="gear.socket:SocketData">
         <apiName>SocketData</apiName>
         <shortdesc>
	 Socket定义
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20100115
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="SocketData,gear.socket.SocketData,ADD_MY_USER,CLOSE,HOT,IO_ERROR,NEW,NONE,PRIVATE_MSG,SECURITY_ERROR,args,call,data,flag,host,invoke,isActive,method,method,name,nc,port,queue,readBytes,size,writeBytes,addCallback,addCallback,addRequest,add,call,clear,connect,connect,connected,disconnect,disconnect,dispose,equals,getCallback,parse,parse,removeCallback,removeCallback,setDealStrategy,setTest,stop,toObject,toString,toString"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 Socket定义
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.socket:OnlySyncModel">
         <apiName>OnlySyncModel</apiName>
         <shortdesc>
	 唯一同步模型
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20101020
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="OnlySyncModel,gear.socket.OnlySyncModel,addCallback,addCallback,addRequest,add,call,clear,connect,connect,connected,disconnect,disconnect,dispose,equals,getCallback,parse,parse,removeCallback,removeCallback,setDealStrategy,setTest,stop,toObject,toString,toString"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 唯一同步模型
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.socket:GCallData">
         <apiName>GCallData</apiName>
         <shortdesc>
	 反射数据类
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20111111
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GCallData,gear.socket.GCallData,ADD_MY_USER,CLOSE,HOT,IO_ERROR,NEW,NONE,PRIVATE_MSG,SECURITY_ERROR,args,call,data,flag,host,invoke,isActive,method,method,name,nc,port,queue,readBytes,size,writeBytes,addCallback,addCallback,addRequest,add,call,clear,connect,connect,connected,disconnect,disconnect,dispose,equals,getCallback,parse,parse,removeCallback,removeCallback,setDealStrategy,setTest,stop,toObject,toString,toString"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 反射数据类
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.socket:GCallPool">
         <apiName>GCallPool</apiName>
         <shortdesc>
	 CallPool 反射池
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20101008
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GCallPool,gear.socket.GCallPool,ADD_MY_USER,CLOSE,HOT,IO_ERROR,NEW,NONE,PRIVATE_MSG,SECURITY_ERROR,args,call,data,flag,host,invoke,isActive,method,method,name,nc,port,queue,readBytes,size,writeBytes,addCallback,addCallback,addRequest,add,call,clear,connect,connect,connected,disconnect,disconnect,dispose,equals,getCallback,parse,parse,removeCallback,removeCallback,setDealStrategy,setTest,stop,toObject,toString,toString"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseInterface>gear.core:IDispose</apiBaseInterface>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 CallPool 反射池
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements>
                  <Implement id="gear.core:IDispose"/>
               </Implements>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.socket:ISyncObject">
         <apiName>ISyncObject</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>BrightLi
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20100315
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="ISyncObject,gear.socket.ISyncObject,addCallback,addCallback,addRequest,add,call,clear,connect,connect,connected,disconnect,disconnect,dispose,equals,getCallback,parse,parse,removeCallback,removeCallback,setDealStrategy,setTest,stop,toObject,toString,toString"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiInterface/>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier/>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id=""/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.socket:SocketCall">
         <apiName>SocketCall</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>flashpf
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="SocketCall,gear.socket.SocketCall,ADD_MY_USER,CLOSE,HOT,IO_ERROR,NEW,NONE,PRIVATE_MSG,SECURITY_ERROR,args,call,data,flag,host,invoke,isActive,method,method,name,nc,port,queue,readBytes,size,writeBytes"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.socket:SocketFlag">
         <apiName>SocketFlag</apiName>
         <shortdesc>
	 Socket标识
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20101015
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="SocketFlag,gear.socket.SocketFlag,ADD_MY_USER,CLOSE,HOT,IO_ERROR,NEW,NONE,PRIVATE_MSG,SECURITY_ERROR,args,call,data,flag,host,invoke,isActive,method,method,name,nc,port,queue,readBytes,size,writeBytes"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 Socket标识
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.socket:RtmpClient">
         <apiName>RtmpClient</apiName>
         <shortdesc>
	 Rtmp客户端
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20101015
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="RtmpClient,gear.socket.RtmpClient,ADD_MY_USER,CLOSE,HOT,IO_ERROR,NEW,NONE,PRIVATE_MSG,SECURITY_ERROR,args,call,data,flag,host,invoke,isActive,method,method,name,nc,port,queue,readBytes,size,writeBytes,addCallback,addCallback,addRequest,add,call,clear,connect,connect,connected,disconnect,disconnect,dispose,equals,getCallback,parse,parse,removeCallback,removeCallback,setDealStrategy,setTest,stop,toObject,toString,toString"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 Rtmp客户端
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="flash.events:EventDispatcher"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.socket:SocketClient">
         <apiName>SocketClient</apiName>
         <shortdesc>
	 Socket客户端
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20111207
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="SocketClient,gear.socket.SocketClient,ADD_MY_USER,CLOSE,HOT,IO_ERROR,NEW,NONE,PRIVATE_MSG,SECURITY_ERROR,args,call,data,flag,host,invoke,isActive,method,method,name,nc,port,queue,readBytes,size,writeBytes,addCallback,addCallback,addRequest,add,call,clear,connect,connect,connected,disconnect,disconnect,dispose,equals,getCallback,parse,parse,removeCallback,removeCallback,setDealStrategy,setTest,stop,toObject,toString,toString"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 Socket客户端
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="flash.events:EventDispatcher"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.sound">
      <apiName>gear.sound</apiName>
      <apiDetail/>
      <apiClassifier id="gear.sound:GSoundUtil">
         <apiName>GSoundUtil</apiName>
         <shortdesc>
	 声音工具
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121212
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GSoundUtil,gear.sound.GSoundUtil,channel,instance,key,musicIsOpen,musicVolume,music,soundIsOpen,soundName,soundVolume,url,volume,delSound,ifHadSound,load,pause,playMusic,playSound,play,stop"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 声音工具
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.sound:GSoundItem">
         <apiName>GSoundItem</apiName>
         <shortdesc>
	 SoundItem
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121212
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GSoundItem,gear.sound.GSoundItem,channel,instance,key,musicIsOpen,musicVolume,music,soundIsOpen,soundName,soundVolume,url,volume,delSound,ifHadSound,load,pause,playMusic,playSound,play,stop"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 SoundItem
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="flash.events:EventDispatcher"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
   <apiPackage id="gear.utils">
      <apiName>gear.utils</apiName>
      <apiDetail/>
      <apiClassifier id="gear.utils:GRectUtil">
         <apiName>GRectUtil</apiName>
         <shortdesc>
	 矩形工具
	 
	 </shortdesc>
         <prolog>
            <author>brightli
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121107
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GRectUtil,gear.utils.GRectUtil,adjustBrightness,adjustBrightness,adjustBrightness2,adjustColor,adjustContrast,adjustHue,adjustSaturation,angleToRadian,append,applySharpen,binarySearch,ceil,changeBDColor,clamp,clear,copyUnique,cos,createMaskFromBitmap,createRef,createUID,createUniqueName,cutAlphaBD,cutBD,cutGridBD,drawFillBorder,drawFillLine,drawFillRect,drawGradientFillBorder,drawGradientFillRect,encodeBD,end,exit,filterXML,flipH,flipH,flipV,format,formatArray,formatByteArray,formatDate,formatObject,formatTime,formatVector,gc,getAirH,getAlphaColor,getAngle,getBDBy,getBDList,getBacks,getBrowserAgent,getBrowserType,getColorTransform,getCrossAngle,getCutRect,getDir,getDistance,getDwordLength,getInfo,getKeys,getMaxRect,getNowTime,getOffsetDir,getPageUrl,getPathName,getRotateMatrix,getSize,getThumbBD,getTotal,getTurnDir,getTwoPointAngle,getTwoPointDistance,getUniformBacks,getValues,hasFormat,isDebug,isEmail,isEmpty,isUID,isURL,mcToBDList,mergeBDUnit,min,multiplyMatrix,overlaps,randomAtArray,randomBoolean,random,rectToString,reload,repeat,resizeBD,rgbMultiply,rol,ror,rotate,round,scale9,shapeToBD,shuffle,sin,spriteToBD,start,stringToRect,toByteArray,toGaryBD,toHex,toIntRect,toString,toUAngle,transformRect,trim,trim,truncateToFit,uniquePush,xmlEncode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 矩形工具
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.utils:GPhysicUtil">
         <apiName>GPhysicUtil</apiName>
         <shortdesc>
	 物理工具类
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130115
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GPhysicUtil,gear.utils.GPhysicUtil,adjustBrightness,adjustBrightness,adjustBrightness2,adjustColor,adjustContrast,adjustHue,adjustSaturation,angleToRadian,append,applySharpen,binarySearch,ceil,changeBDColor,clamp,clear,copyUnique,cos,createMaskFromBitmap,createRef,createUID,createUniqueName,cutAlphaBD,cutBD,cutGridBD,drawFillBorder,drawFillLine,drawFillRect,drawGradientFillBorder,drawGradientFillRect,encodeBD,end,exit,filterXML,flipH,flipH,flipV,format,formatArray,formatByteArray,formatDate,formatObject,formatTime,formatVector,gc,getAirH,getAlphaColor,getAngle,getBDBy,getBDList,getBacks,getBrowserAgent,getBrowserType,getColorTransform,getCrossAngle,getCutRect,getDir,getDistance,getDwordLength,getInfo,getKeys,getMaxRect,getNowTime,getOffsetDir,getPageUrl,getPathName,getRotateMatrix,getSize,getThumbBD,getTotal,getTurnDir,getTwoPointAngle,getTwoPointDistance,getUniformBacks,getValues,hasFormat,isDebug,isEmail,isEmpty,isUID,isURL,mcToBDList,mergeBDUnit,min,multiplyMatrix,overlaps,randomAtArray,randomBoolean,random,rectToString,reload,repeat,resizeBD,rgbMultiply,rol,ror,rotate,round,scale9,shapeToBD,shuffle,sin,spriteToBD,start,stringToRect,toByteArray,toGaryBD,toHex,toIntRect,toString,toUAngle,transformRect,trim,trim,truncateToFit,uniquePush,xmlEncode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 物理工具类
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.utils:GJSUtil">
         <apiName>GJSUtil</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>admin
	 </author>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GJSUtil,gear.utils.GJSUtil,ERASE,GRAY_FILTER,GRAY,WRITE_FILTER,WRITE,ZERO_POINT,hasJS,version,adjustBrightness,adjustBrightness,adjustBrightness2,adjustColor,adjustContrast,adjustHue,adjustSaturation,angleToRadian,append,applySharpen,binarySearch,ceil,changeBDColor,clamp,clear,copyUnique,cos,createMaskFromBitmap,createRef,createUID,createUniqueName,cutAlphaBD,cutBD,cutGridBD,drawFillBorder,drawFillLine,drawFillRect,drawGradientFillBorder,drawGradientFillRect,encodeBD,end,exit,filterXML,flipH,flipH,flipV,format,formatArray,formatByteArray,formatDate,formatObject,formatTime,formatVector,gc,getAirH,getAlphaColor,getAngle,getBDBy,getBDList,getBacks,getBrowserAgent,getBrowserType,getColorTransform,getCrossAngle,getCutRect,getDir,getDistance,getDwordLength,getInfo,getKeys,getMaxRect,getNowTime,getOffsetDir,getPageUrl,getPathName,getRotateMatrix,getSize,getThumbBD,getTotal,getTurnDir,getTwoPointAngle,getTwoPointDistance,getUniformBacks,getValues,hasFormat,isDebug,isEmail,isEmpty,isUID,isURL,mcToBDList,mergeBDUnit,min,multiplyMatrix,overlaps,randomAtArray,randomBoolean,random,rectToString,reload,repeat,resizeBD,rgbMultiply,rol,ror,rotate,round,scale9,shapeToBD,shuffle,sin,spriteToBD,start,stringToRect,toByteArray,toGaryBD,toHex,toIntRect,toString,toUAngle,transformRect,trim,trim,truncateToFit,uniquePush,xmlEncode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.utils:GArrayUtil">
         <apiName>GArrayUtil</apiName>
         <shortdesc>
	 数组工具类
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121112
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GArrayUtil,gear.utils.GArrayUtil,adjustBrightness,adjustBrightness,adjustBrightness2,adjustColor,adjustContrast,adjustHue,adjustSaturation,angleToRadian,append,applySharpen,binarySearch,ceil,changeBDColor,clamp,clear,copyUnique,cos,createMaskFromBitmap,createRef,createUID,createUniqueName,cutAlphaBD,cutBD,cutGridBD,drawFillBorder,drawFillLine,drawFillRect,drawGradientFillBorder,drawGradientFillRect,encodeBD,end,exit,filterXML,flipH,flipH,flipV,format,formatArray,formatByteArray,formatDate,formatObject,formatTime,formatVector,gc,getAirH,getAlphaColor,getAngle,getBDBy,getBDList,getBacks,getBrowserAgent,getBrowserType,getColorTransform,getCrossAngle,getCutRect,getDir,getDistance,getDwordLength,getInfo,getKeys,getMaxRect,getNowTime,getOffsetDir,getPageUrl,getPathName,getRotateMatrix,getSize,getThumbBD,getTotal,getTurnDir,getTwoPointAngle,getTwoPointDistance,getUniformBacks,getValues,hasFormat,isDebug,isEmail,isEmpty,isUID,isURL,mcToBDList,mergeBDUnit,min,multiplyMatrix,overlaps,randomAtArray,randomBoolean,random,rectToString,reload,repeat,resizeBD,rgbMultiply,rol,ror,rotate,round,scale9,shapeToBD,shuffle,sin,spriteToBD,start,stringToRect,toByteArray,toGaryBD,toHex,toIntRect,toString,toUAngle,transformRect,trim,trim,truncateToFit,uniquePush,xmlEncode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 数组工具类
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.utils:GMathUtil">
         <apiName>GMathUtil</apiName>
         <shortdesc>
	 MathUtil 数学工具类
	 
 	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20111207
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GMathUtil,gear.utils.GMathUtil,ERASE,GRAY_FILTER,GRAY,WRITE_FILTER,WRITE,ZERO_POINT,hasJS,version,adjustBrightness,adjustBrightness,adjustBrightness2,adjustColor,adjustContrast,adjustHue,adjustSaturation,angleToRadian,append,applySharpen,binarySearch,ceil,changeBDColor,clamp,clear,copyUnique,cos,createMaskFromBitmap,createRef,createUID,createUniqueName,cutAlphaBD,cutBD,cutGridBD,drawFillBorder,drawFillLine,drawFillRect,drawGradientFillBorder,drawGradientFillRect,encodeBD,end,exit,filterXML,flipH,flipH,flipV,format,formatArray,formatByteArray,formatDate,formatObject,formatTime,formatVector,gc,getAirH,getAlphaColor,getAngle,getBDBy,getBDList,getBacks,getBrowserAgent,getBrowserType,getColorTransform,getCrossAngle,getCutRect,getDir,getDistance,getDwordLength,getInfo,getKeys,getMaxRect,getNowTime,getOffsetDir,getPageUrl,getPathName,getRotateMatrix,getSize,getThumbBD,getTotal,getTurnDir,getTwoPointAngle,getTwoPointDistance,getUniformBacks,getValues,hasFormat,isDebug,isEmail,isEmpty,isUID,isURL,mcToBDList,mergeBDUnit,min,multiplyMatrix,overlaps,randomAtArray,randomBoolean,random,rectToString,reload,repeat,resizeBD,rgbMultiply,rol,ror,rotate,round,scale9,shapeToBD,shuffle,sin,spriteToBD,start,stringToRect,toByteArray,toGaryBD,toHex,toIntRect,toString,toUAngle,transformRect,trim,trim,truncateToFit,uniquePush,xmlEncode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 MathUtil 数学工具类
	 
 	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.utils:GDictUtil">
         <apiName>GDictUtil</apiName>
         <shortdesc>
	 字典工具类
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121112
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GDictUtil,gear.utils.GDictUtil,adjustBrightness,adjustBrightness,adjustBrightness2,adjustColor,adjustContrast,adjustHue,adjustSaturation,angleToRadian,append,applySharpen,binarySearch,ceil,changeBDColor,clamp,clear,copyUnique,cos,createMaskFromBitmap,createRef,createUID,createUniqueName,cutAlphaBD,cutBD,cutGridBD,drawFillBorder,drawFillLine,drawFillRect,drawGradientFillBorder,drawGradientFillRect,encodeBD,end,exit,filterXML,flipH,flipH,flipV,format,formatArray,formatByteArray,formatDate,formatObject,formatTime,formatVector,gc,getAirH,getAlphaColor,getAngle,getBDBy,getBDList,getBacks,getBrowserAgent,getBrowserType,getColorTransform,getCrossAngle,getCutRect,getDir,getDistance,getDwordLength,getInfo,getKeys,getMaxRect,getNowTime,getOffsetDir,getPageUrl,getPathName,getRotateMatrix,getSize,getThumbBD,getTotal,getTurnDir,getTwoPointAngle,getTwoPointDistance,getUniformBacks,getValues,hasFormat,isDebug,isEmail,isEmpty,isUID,isURL,mcToBDList,mergeBDUnit,min,multiplyMatrix,overlaps,randomAtArray,randomBoolean,random,rectToString,reload,repeat,resizeBD,rgbMultiply,rol,ror,rotate,round,scale9,shapeToBD,shuffle,sin,spriteToBD,start,stringToRect,toByteArray,toGaryBD,toHex,toIntRect,toString,toUAngle,transformRect,trim,trim,truncateToFit,uniquePush,xmlEncode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 字典工具类
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.utils:GIntUtil">
         <apiName>GIntUtil</apiName>
         <shortdesc>
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121107
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GIntUtil,gear.utils.GIntUtil,adjustBrightness,adjustBrightness,adjustBrightness2,adjustColor,adjustContrast,adjustHue,adjustSaturation,angleToRadian,append,applySharpen,binarySearch,ceil,changeBDColor,clamp,clear,copyUnique,cos,createMaskFromBitmap,createRef,createUID,createUniqueName,cutAlphaBD,cutBD,cutGridBD,drawFillBorder,drawFillLine,drawFillRect,drawGradientFillBorder,drawGradientFillRect,encodeBD,end,exit,filterXML,flipH,flipH,flipV,format,formatArray,formatByteArray,formatDate,formatObject,formatTime,formatVector,gc,getAirH,getAlphaColor,getAngle,getBDBy,getBDList,getBacks,getBrowserAgent,getBrowserType,getColorTransform,getCrossAngle,getCutRect,getDir,getDistance,getDwordLength,getInfo,getKeys,getMaxRect,getNowTime,getOffsetDir,getPageUrl,getPathName,getRotateMatrix,getSize,getThumbBD,getTotal,getTurnDir,getTwoPointAngle,getTwoPointDistance,getUniformBacks,getValues,hasFormat,isDebug,isEmail,isEmpty,isUID,isURL,mcToBDList,mergeBDUnit,min,multiplyMatrix,overlaps,randomAtArray,randomBoolean,random,rectToString,reload,repeat,resizeBD,rgbMultiply,rol,ror,rotate,round,scale9,shapeToBD,shuffle,sin,spriteToBD,start,stringToRect,toByteArray,toGaryBD,toHex,toIntRect,toString,toUAngle,transformRect,trim,trim,truncateToFit,uniquePush,xmlEncode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.utils:GUIDUtil">
         <apiName>GUIDUtil</apiName>
         <shortdesc>
	 UID工具类
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121112
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GUIDUtil,gear.utils.GUIDUtil,adjustBrightness,adjustBrightness,adjustBrightness2,adjustColor,adjustContrast,adjustHue,adjustSaturation,angleToRadian,append,applySharpen,binarySearch,ceil,changeBDColor,clamp,clear,copyUnique,cos,createMaskFromBitmap,createRef,createUID,createUniqueName,cutAlphaBD,cutBD,cutGridBD,drawFillBorder,drawFillLine,drawFillRect,drawGradientFillBorder,drawGradientFillRect,encodeBD,end,exit,filterXML,flipH,flipH,flipV,format,formatArray,formatByteArray,formatDate,formatObject,formatTime,formatVector,gc,getAirH,getAlphaColor,getAngle,getBDBy,getBDList,getBacks,getBrowserAgent,getBrowserType,getColorTransform,getCrossAngle,getCutRect,getDir,getDistance,getDwordLength,getInfo,getKeys,getMaxRect,getNowTime,getOffsetDir,getPageUrl,getPathName,getRotateMatrix,getSize,getThumbBD,getTotal,getTurnDir,getTwoPointAngle,getTwoPointDistance,getUniformBacks,getValues,hasFormat,isDebug,isEmail,isEmpty,isUID,isURL,mcToBDList,mergeBDUnit,min,multiplyMatrix,overlaps,randomAtArray,randomBoolean,random,rectToString,reload,repeat,resizeBD,rgbMultiply,rol,ror,rotate,round,scale9,shapeToBD,shuffle,sin,spriteToBD,start,stringToRect,toByteArray,toGaryBD,toHex,toIntRect,toString,toUAngle,transformRect,trim,trim,truncateToFit,uniquePush,xmlEncode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 UID工具类
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.utils:GObjectUtil">
         <apiName>GObjectUtil</apiName>
         <shortdesc>
	 对象工具类
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130124
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GObjectUtil,gear.utils.GObjectUtil,adjustBrightness,adjustBrightness,adjustBrightness2,adjustColor,adjustContrast,adjustHue,adjustSaturation,angleToRadian,append,applySharpen,binarySearch,ceil,changeBDColor,clamp,clear,copyUnique,cos,createMaskFromBitmap,createRef,createUID,createUniqueName,cutAlphaBD,cutBD,cutGridBD,drawFillBorder,drawFillLine,drawFillRect,drawGradientFillBorder,drawGradientFillRect,encodeBD,end,exit,filterXML,flipH,flipH,flipV,format,formatArray,formatByteArray,formatDate,formatObject,formatTime,formatVector,gc,getAirH,getAlphaColor,getAngle,getBDBy,getBDList,getBacks,getBrowserAgent,getBrowserType,getColorTransform,getCrossAngle,getCutRect,getDir,getDistance,getDwordLength,getInfo,getKeys,getMaxRect,getNowTime,getOffsetDir,getPageUrl,getPathName,getRotateMatrix,getSize,getThumbBD,getTotal,getTurnDir,getTwoPointAngle,getTwoPointDistance,getUniformBacks,getValues,hasFormat,isDebug,isEmail,isEmpty,isUID,isURL,mcToBDList,mergeBDUnit,min,multiplyMatrix,overlaps,randomAtArray,randomBoolean,random,rectToString,reload,repeat,resizeBD,rgbMultiply,rol,ror,rotate,round,scale9,shapeToBD,shuffle,sin,spriteToBD,start,stringToRect,toByteArray,toGaryBD,toHex,toIntRect,toString,toUAngle,transformRect,trim,trim,truncateToFit,uniquePush,xmlEncode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 对象工具类
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.utils:GSystemUtil">
         <apiName>GSystemUtil</apiName>
         <shortdesc>
	 系统工具类
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130115
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GSystemUtil,gear.utils.GSystemUtil,ERASE,GRAY_FILTER,GRAY,WRITE_FILTER,WRITE,ZERO_POINT,hasJS,version,adjustBrightness,adjustBrightness,adjustBrightness2,adjustColor,adjustContrast,adjustHue,adjustSaturation,angleToRadian,append,applySharpen,binarySearch,ceil,changeBDColor,clamp,clear,copyUnique,cos,createMaskFromBitmap,createRef,createUID,createUniqueName,cutAlphaBD,cutBD,cutGridBD,drawFillBorder,drawFillLine,drawFillRect,drawGradientFillBorder,drawGradientFillRect,encodeBD,end,exit,filterXML,flipH,flipH,flipV,format,formatArray,formatByteArray,formatDate,formatObject,formatTime,formatVector,gc,getAirH,getAlphaColor,getAngle,getBDBy,getBDList,getBacks,getBrowserAgent,getBrowserType,getColorTransform,getCrossAngle,getCutRect,getDir,getDistance,getDwordLength,getInfo,getKeys,getMaxRect,getNowTime,getOffsetDir,getPageUrl,getPathName,getRotateMatrix,getSize,getThumbBD,getTotal,getTurnDir,getTwoPointAngle,getTwoPointDistance,getUniformBacks,getValues,hasFormat,isDebug,isEmail,isEmpty,isUID,isURL,mcToBDList,mergeBDUnit,min,multiplyMatrix,overlaps,randomAtArray,randomBoolean,random,rectToString,reload,repeat,resizeBD,rgbMultiply,rol,ror,rotate,round,scale9,shapeToBD,shuffle,sin,spriteToBD,start,stringToRect,toByteArray,toGaryBD,toHex,toIntRect,toString,toUAngle,transformRect,trim,trim,truncateToFit,uniquePush,xmlEncode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 系统工具类
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.utils:GDrawUtil">
         <apiName>GDrawUtil</apiName>
         <shortdesc>
	 绘制工具
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121212
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GDrawUtil,gear.utils.GDrawUtil,adjustBrightness,adjustBrightness,adjustBrightness2,adjustColor,adjustContrast,adjustHue,adjustSaturation,angleToRadian,append,applySharpen,binarySearch,ceil,changeBDColor,clamp,clear,copyUnique,cos,createMaskFromBitmap,createRef,createUID,createUniqueName,cutAlphaBD,cutBD,cutGridBD,drawFillBorder,drawFillLine,drawFillRect,drawGradientFillBorder,drawGradientFillRect,encodeBD,end,exit,filterXML,flipH,flipH,flipV,format,formatArray,formatByteArray,formatDate,formatObject,formatTime,formatVector,gc,getAirH,getAlphaColor,getAngle,getBDBy,getBDList,getBacks,getBrowserAgent,getBrowserType,getColorTransform,getCrossAngle,getCutRect,getDir,getDistance,getDwordLength,getInfo,getKeys,getMaxRect,getNowTime,getOffsetDir,getPageUrl,getPathName,getRotateMatrix,getSize,getThumbBD,getTotal,getTurnDir,getTwoPointAngle,getTwoPointDistance,getUniformBacks,getValues,hasFormat,isDebug,isEmail,isEmpty,isUID,isURL,mcToBDList,mergeBDUnit,min,multiplyMatrix,overlaps,randomAtArray,randomBoolean,random,rectToString,reload,repeat,resizeBD,rgbMultiply,rol,ror,rotate,round,scale9,shapeToBD,shuffle,sin,spriteToBD,start,stringToRect,toByteArray,toGaryBD,toHex,toIntRect,toString,toUAngle,transformRect,trim,trim,truncateToFit,uniquePush,xmlEncode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 绘制工具
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.utils:GColorMatrixUtil">
         <apiName>GColorMatrixUtil</apiName>
         <shortdesc>
	 色彩矩阵工具类
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121112
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GColorMatrixUtil,gear.utils.GColorMatrixUtil,ERASE,GRAY_FILTER,GRAY,WRITE_FILTER,WRITE,ZERO_POINT,hasJS,version,adjustBrightness,adjustBrightness,adjustBrightness2,adjustColor,adjustContrast,adjustHue,adjustSaturation,angleToRadian,append,applySharpen,binarySearch,ceil,changeBDColor,clamp,clear,copyUnique,cos,createMaskFromBitmap,createRef,createUID,createUniqueName,cutAlphaBD,cutBD,cutGridBD,drawFillBorder,drawFillLine,drawFillRect,drawGradientFillBorder,drawGradientFillRect,encodeBD,end,exit,filterXML,flipH,flipH,flipV,format,formatArray,formatByteArray,formatDate,formatObject,formatTime,formatVector,gc,getAirH,getAlphaColor,getAngle,getBDBy,getBDList,getBacks,getBrowserAgent,getBrowserType,getColorTransform,getCrossAngle,getCutRect,getDir,getDistance,getDwordLength,getInfo,getKeys,getMaxRect,getNowTime,getOffsetDir,getPageUrl,getPathName,getRotateMatrix,getSize,getThumbBD,getTotal,getTurnDir,getTwoPointAngle,getTwoPointDistance,getUniformBacks,getValues,hasFormat,isDebug,isEmail,isEmpty,isUID,isURL,mcToBDList,mergeBDUnit,min,multiplyMatrix,overlaps,randomAtArray,randomBoolean,random,rectToString,reload,repeat,resizeBD,rgbMultiply,rol,ror,rotate,round,scale9,shapeToBD,shuffle,sin,spriteToBD,start,stringToRect,toByteArray,toGaryBD,toHex,toIntRect,toString,toUAngle,transformRect,trim,trim,truncateToFit,uniquePush,xmlEncode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 色彩矩阵工具类
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.utils:GColorUtil">
         <apiName>GColorUtil</apiName>
         <shortdesc>
	 色彩工具类
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121112
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GColorUtil,gear.utils.GColorUtil,adjustBrightness,adjustBrightness,adjustBrightness2,adjustColor,adjustContrast,adjustHue,adjustSaturation,angleToRadian,append,applySharpen,binarySearch,ceil,changeBDColor,clamp,clear,copyUnique,cos,createMaskFromBitmap,createRef,createUID,createUniqueName,cutAlphaBD,cutBD,cutGridBD,drawFillBorder,drawFillLine,drawFillRect,drawGradientFillBorder,drawGradientFillRect,encodeBD,end,exit,filterXML,flipH,flipH,flipV,format,formatArray,formatByteArray,formatDate,formatObject,formatTime,formatVector,gc,getAirH,getAlphaColor,getAngle,getBDBy,getBDList,getBacks,getBrowserAgent,getBrowserType,getColorTransform,getCrossAngle,getCutRect,getDir,getDistance,getDwordLength,getInfo,getKeys,getMaxRect,getNowTime,getOffsetDir,getPageUrl,getPathName,getRotateMatrix,getSize,getThumbBD,getTotal,getTurnDir,getTwoPointAngle,getTwoPointDistance,getUniformBacks,getValues,hasFormat,isDebug,isEmail,isEmpty,isUID,isURL,mcToBDList,mergeBDUnit,min,multiplyMatrix,overlaps,randomAtArray,randomBoolean,random,rectToString,reload,repeat,resizeBD,rgbMultiply,rol,ror,rotate,round,scale9,shapeToBD,shuffle,sin,spriteToBD,start,stringToRect,toByteArray,toGaryBD,toHex,toIntRect,toString,toUAngle,transformRect,trim,trim,truncateToFit,uniquePush,xmlEncode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 色彩工具类
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.utils:GBDUtil">
         <apiName>GBDUtil</apiName>
         <shortdesc>
	 位图工具类
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121112
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GBDUtil,gear.utils.GBDUtil,adjustBrightness,adjustBrightness,adjustBrightness2,adjustColor,adjustContrast,adjustHue,adjustSaturation,angleToRadian,append,applySharpen,binarySearch,ceil,changeBDColor,clamp,clear,copyUnique,cos,createMaskFromBitmap,createRef,createUID,createUniqueName,cutAlphaBD,cutBD,cutGridBD,drawFillBorder,drawFillLine,drawFillRect,drawGradientFillBorder,drawGradientFillRect,encodeBD,end,exit,filterXML,flipH,flipH,flipV,format,formatArray,formatByteArray,formatDate,formatObject,formatTime,formatVector,gc,getAirH,getAlphaColor,getAngle,getBDBy,getBDList,getBacks,getBrowserAgent,getBrowserType,getColorTransform,getCrossAngle,getCutRect,getDir,getDistance,getDwordLength,getInfo,getKeys,getMaxRect,getNowTime,getOffsetDir,getPageUrl,getPathName,getRotateMatrix,getSize,getThumbBD,getTotal,getTurnDir,getTwoPointAngle,getTwoPointDistance,getUniformBacks,getValues,hasFormat,isDebug,isEmail,isEmpty,isUID,isURL,mcToBDList,mergeBDUnit,min,multiplyMatrix,overlaps,randomAtArray,randomBoolean,random,rectToString,reload,repeat,resizeBD,rgbMultiply,rol,ror,rotate,round,scale9,shapeToBD,shuffle,sin,spriteToBD,start,stringToRect,toByteArray,toGaryBD,toHex,toIntRect,toString,toUAngle,transformRect,trim,trim,truncateToFit,uniquePush,xmlEncode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 位图工具类
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.utils:GStringUtil">
         <apiName>GStringUtil</apiName>
         <shortdesc>
	 字符串工具类
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20130116
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GStringUtil,gear.utils.GStringUtil,adjustBrightness,adjustBrightness,adjustBrightness2,adjustColor,adjustContrast,adjustHue,adjustSaturation,angleToRadian,append,applySharpen,binarySearch,ceil,changeBDColor,clamp,clear,copyUnique,cos,createMaskFromBitmap,createRef,createUID,createUniqueName,cutAlphaBD,cutBD,cutGridBD,drawFillBorder,drawFillLine,drawFillRect,drawGradientFillBorder,drawGradientFillRect,encodeBD,end,exit,filterXML,flipH,flipH,flipV,format,formatArray,formatByteArray,formatDate,formatObject,formatTime,formatVector,gc,getAirH,getAlphaColor,getAngle,getBDBy,getBDList,getBacks,getBrowserAgent,getBrowserType,getColorTransform,getCrossAngle,getCutRect,getDir,getDistance,getDwordLength,getInfo,getKeys,getMaxRect,getNowTime,getOffsetDir,getPageUrl,getPathName,getRotateMatrix,getSize,getThumbBD,getTotal,getTurnDir,getTwoPointAngle,getTwoPointDistance,getUniformBacks,getValues,hasFormat,isDebug,isEmail,isEmpty,isUID,isURL,mcToBDList,mergeBDUnit,min,multiplyMatrix,overlaps,randomAtArray,randomBoolean,random,rectToString,reload,repeat,resizeBD,rgbMultiply,rol,ror,rotate,round,scale9,shapeToBD,shuffle,sin,spriteToBD,start,stringToRect,toByteArray,toGaryBD,toHex,toIntRect,toString,toUAngle,transformRect,trim,trim,truncateToFit,uniquePush,xmlEncode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 字符串工具类
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.utils:GTimeUtil">
         <apiName>GTimeUtil</apiName>
         <shortdesc>
	 时间工具类
	 
	 </shortdesc>
         <prolog>
            <author>bright
	 </author>
            <asMetadata/>
            <asCustoms>
               <version>20121112
	 </version>
            </asCustoms>
         </prolog>
            <meta name="keywords"
               content="GTimeUtil,gear.utils.GTimeUtil,adjustBrightness,adjustBrightness,adjustBrightness2,adjustColor,adjustContrast,adjustHue,adjustSaturation,angleToRadian,append,applySharpen,binarySearch,ceil,changeBDColor,clamp,clear,copyUnique,cos,createMaskFromBitmap,createRef,createUID,createUniqueName,cutAlphaBD,cutBD,cutGridBD,drawFillBorder,drawFillLine,drawFillRect,drawGradientFillBorder,drawGradientFillRect,encodeBD,end,exit,filterXML,flipH,flipH,flipV,format,formatArray,formatByteArray,formatDate,formatObject,formatTime,formatVector,gc,getAirH,getAlphaColor,getAngle,getBDBy,getBDList,getBacks,getBrowserAgent,getBrowserType,getColorTransform,getCrossAngle,getCutRect,getDir,getDistance,getDwordLength,getInfo,getKeys,getMaxRect,getNowTime,getOffsetDir,getPageUrl,getPathName,getRotateMatrix,getSize,getThumbBD,getTotal,getTurnDir,getTwoPointAngle,getTwoPointDistance,getUniformBacks,getValues,hasFormat,isDebug,isEmail,isEmpty,isUID,isURL,mcToBDList,mergeBDUnit,min,multiplyMatrix,overlaps,randomAtArray,randomBoolean,random,rectToString,reload,repeat,resizeBD,rgbMultiply,rol,ror,rotate,round,scale9,shapeToBD,shuffle,sin,spriteToBD,start,stringToRect,toByteArray,toGaryBD,toHex,toIntRect,toString,toUAngle,transformRect,trim,trim,truncateToFit,uniquePush,xmlEncode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <apiDesc>
	 时间工具类
	 
	 </apiDesc>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
      <apiClassifier id="gear.utils:GNameUtil">
         <apiName>GNameUtil</apiName>
         <shortdesc/>
         <prolog>
            <asMetadata/>
         </prolog>
            <meta name="keywords"
               content="GNameUtil,gear.utils.GNameUtil,adjustBrightness,adjustBrightness,adjustBrightness2,adjustColor,adjustContrast,adjustHue,adjustSaturation,angleToRadian,append,applySharpen,binarySearch,ceil,changeBDColor,clamp,clear,copyUnique,cos,createMaskFromBitmap,createRef,createUID,createUniqueName,cutAlphaBD,cutBD,cutGridBD,drawFillBorder,drawFillLine,drawFillRect,drawGradientFillBorder,drawGradientFillRect,encodeBD,end,exit,filterXML,flipH,flipH,flipV,format,formatArray,formatByteArray,formatDate,formatObject,formatTime,formatVector,gc,getAirH,getAlphaColor,getAngle,getBDBy,getBDList,getBacks,getBrowserAgent,getBrowserType,getColorTransform,getCrossAngle,getCutRect,getDir,getDistance,getDwordLength,getInfo,getKeys,getMaxRect,getNowTime,getOffsetDir,getPageUrl,getPathName,getRotateMatrix,getSize,getThumbBD,getTotal,getTurnDir,getTwoPointAngle,getTwoPointDistance,getUniformBacks,getValues,hasFormat,isDebug,isEmail,isEmpty,isUID,isURL,mcToBDList,mergeBDUnit,min,multiplyMatrix,overlaps,randomAtArray,randomBoolean,random,rectToString,reload,repeat,resizeBD,rgbMultiply,rol,ror,rotate,round,scale9,shapeToBD,shuffle,sin,spriteToBD,start,stringToRect,toByteArray,toGaryBD,toHex,toIntRect,toString,toUAngle,transformRect,trim,trim,truncateToFit,uniquePush,xmlEncode"/>
         <apiClassifierDetail>
            <apiClassifierDef>
               <apiAccess value="public"/>
               <apiStatic/>
               <apiFinal/>
               <apiBaseClassifier>Object</apiBaseClassifier>
            </apiClassifierDef>
            <Inheritancelist>
               <BaseInterface/>
               <Inheritance>
                  <Inherit id="Object"/>
               </Inheritance>
               <Implements/>
               <Subclasses/>
               <Implementors/>
               <Excludes/>
            </Inheritancelist>
         </apiClassifierDetail>
      </apiClassifier>
   </apiPackage>
</allClasses>