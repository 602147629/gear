<?xml version="1.0" encoding="UTF-8"?><apiPackage id="gear.color"><apiName>gear.color</apiName><apiDetail/><apiClassifier id="gear.color:GARGB"><apiName>GARGB</apiName><shortdesc>
	 ARGB 色彩模型
	 
	 </shortdesc><prolog><author>bright
	 </author><asMetadata/><asCustoms><version>20101015
	 </version></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 ARGB 色彩模型
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="gear.color:GARGB:GARGB"><apiName>GARGB</apiName><shortdesc>
		 ARGB
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>alpha</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>透明度
		 </apiDesc></apiParam><apiParam><apiItemName>red</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>红
		 </apiDesc></apiParam><apiParam><apiItemName>green</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>绿
		 </apiDesc></apiParam><apiParam><apiItemName>blue</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>蓝
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 ARGB
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="gear.color:GARGB:parse"><apiName>parse</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>hex</apiItemName><apiType value="uint"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="gear.color:GARGB:toHex"><apiName>toHex</apiName><shortdesc>
		 ARGB转换成十六进制
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="uint"/></apiReturn></apiOperationDef><apiDesc>
		 ARGB转换成十六进制
		 
		 </apiDesc><example>
		 <codeblock rev="3.0">
		 trace(new ARGB(0,0xFF,0,0).toHex()); // 输出"0xFF0000"
		 </codeblock>
		 </example></apiOperationDetail></apiOperation><apiOperation id="gear.color:GARGB:toString"><apiName>toString</apiName><shortdesc>
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>转换后的字符串
		 </apiDesc><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="gear.color:GARGB:alpha:get"><apiName>alpha</apiName><shortdesc>
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gear.color:GARGB:blue:get"><apiName>blue</apiName><shortdesc>
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gear.color:GARGB:green:get"><apiName>green</apiName><shortdesc>
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gear.color:GARGB:red:get"><apiName>red</apiName><shortdesc>
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>